{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./node_modules/moment/locale sync ^\\.\\/.*$","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/customerselection/customerselection.component.ts","./src/app/customerselection/customerselection.component.html","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/device-search/device-search.component.ts","./src/app/device-search/device-search.component.html","./src/app/device-search/single-device-search/service/devicesearch.service.ts","./src/app/device-search/single-device-search/single-device-search.component.ts","./src/app/device-search/single-device-search/single-device-search.component.html","./src/app/device-search/single-device-search/style-paginator.directive.ts","./src/app/firmware-report/firmware-report.component.ts","./src/app/firmware-report/firmware-report.component.html","./src/app/fmdashboard/fmdashboard.component.ts","./src/app/fmdashboard/fmdashboard.component.html","./src/app/fmdashboard/service/fmdashboard.service.ts","./src/app/graphql.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/model/model.ts","./src/app/other-otap-command/other-otap-command.component.ts","./src/app/other-otap-command/other-otap-command.component.html","./src/app/other-otap-command/FlashFirmware.html","./src/app/other-otap-command/addCommand.html","./src/app/other-otap-command/service/upgradecommand.service.ts","./src/app/outbound-status/outbound-status.component.ts","./src/app/outbound-status/outbound-status.component.html","./src/app/outbound-status/outbound.service.ts","./src/app/pipe/custom-date-format.ts","./src/app/pipe/date-picker-format.directive.ts","./src/app/services/auth.guard.ts","./src/app/services/authentication.service.ts","./src/app/services/token-interceptor.service.ts","./src/app/upgrade-firmware-combination/upgrade-firmware-combination.component.ts","./src/app/upgrade-firmware-combination/upgrade-firmware-combination.component.html","./src/app/upload-c-firmware/service/upload-c-firmware.service.ts","./src/app/upload-c-firmware/upload-c-firmware.component.ts","./src/app/upload-c-firmware/upload-c-firmware.component.html","./src/app/upload-iot-firmware/services.service.ts","./src/app/upload-iot-firmware/upload-iot-firmware.component.ts","./src/app/upload-iot-firmware/upload-iot-firmware.component.html","./src/app/upload-java-firmware/service/upload-java-firmware.service.ts","./src/app/upload-java-firmware/upload-java-firmware.component.ts","./src/app/upload-java-firmware/upload-java-firmware.component.html","./src/environments/environment.ts","./src/main.ts","fs (ignored)","crypto (ignored)","stream (ignored)","webpack:///fs (ignored)?4ec3","webpack:///crypto (ignored)?92a8","webpack:///stream (ignored)?f00d"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn-bd\": \"./node_modules/moment/locale/bn-bd.js\",\n\t\"./bn-bd.js\": \"./node_modules/moment/locale/bn-bd.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-in\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-in.js\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-sg\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./en-sg.js\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-mx\": \"./node_modules/moment/locale/es-mx.js\",\n\t\"./es-mx.js\": \"./node_modules/moment/locale/es-mx.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fil\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fil.js\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-deva\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-deva.js\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./oc-lnc\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./oc-lnc.js\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tk\": \"./node_modules/moment/locale/tk.js\",\n\t\"./tk.js\": \"./node_modules/moment/locale/tk.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-mo\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-mo.js\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { FmdashboardComponent } from './fmdashboard/fmdashboard.component';\r\nimport { UploadCFirmwareComponent } from './upload-c-firmware/upload-c-firmware.component';\r\nimport { UploadJavaFirmwareComponent } from './upload-java-firmware/upload-java-firmware.component';\r\nimport { UploadIotFirmwareComponent } from './upload-iot-firmware/upload-iot-firmware.component';\r\nimport { UpgradeFirmwareCombinationComponent } from './upgrade-firmware-combination/upgrade-firmware-combination.component';\r\nimport { DeviceSearchComponent } from './device-search/device-search.component';\r\nimport { SingleDeviceSearchComponent } from './device-search/single-device-search/single-device-search.component';\r\nimport { OutboundStatusComponent } from './outbound-status/outbound-status.component';\r\nimport { OtherOTAPCommandComponent } from './other-otap-command/other-otap-command.component';\r\nimport { FirmwareReportComponent } from './firmware-report/firmware-report.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { CustomerselectionComponent } from './customerselection/customerselection.component';\r\nimport { AuthGuard } from './services/auth.guard';\r\n\r\nconst routes: Routes = [\r\n  \r\n    {\r\n      path: '', redirectTo: 'login', pathMatch: 'full'\r\n    },\r\n    {\r\n      path: 'dashboard', component: DashboardComponent, canActivate: [AuthGuard]\r\n    },\r\n    {\r\n      path: 'Firmware', component: FmdashboardComponent\r\n    },\r\n    {\r\n      path: 'upload/c', component: UploadCFirmwareComponent, canActivate: [AuthGuard]\r\n    },\r\n    {\r\n      path: 'upload/java', component:  UploadJavaFirmwareComponent\r\n    },\r\n    {\r\n      path: 'upload/iot', component:  UploadIotFirmwareComponent\r\n    },\r\n  \r\n    {\r\n      path: 'deviceSearch/:device', component:  DeviceSearchComponent\r\n    },\r\n    {\r\n      path: 'upgrade', component:  UpgradeFirmwareCombinationComponent\r\n    },\r\n    {\r\n      path: 'deviceSearch/single_device/:id', component:  SingleDeviceSearchComponent\r\n    },\r\n    {\r\n      path: 'outboundstatus', component:  OutboundStatusComponent\r\n    },\r\n    {\r\n      path: 'othercommand/:device', component:  OtherOTAPCommandComponent \r\n    },\r\n    {\r\n      path: 'firmwarereport', component:   FirmwareReportComponent\r\n    },\r\n    {\r\n      path: 'login', component:    LoginComponent \r\n    },\r\n    {\r\n      path: 'customerselection', component:    CustomerselectionComponent\r\n    },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { \r\n\r\n  \r\n}\r\n","import { Component,OnInit  } from '@angular/core';\r\nimport {COMMA, ENTER} from '@angular/cdk/keycodes';\r\nimport {MatChipInputEvent} from '@angular/material/chips';\r\nimport { Router } from '@angular/router';\r\nimport { Firmware } from './model/model';\r\nimport {Apollo , QueryRef} from 'apollo-angular';\r\nimport gql from \"graphql-tag\";\r\nimport { map, shareReplay } from 'rxjs/operators';\r\nimport { from, Observable, of } from 'rxjs'\r\nimport { ExportToCsv } from 'export-to-csv';\r\n\r\n\r\nexport interface Fruit {\r\n  name: string;\r\n}\r\n\r\nexport type devicetype ={\r\n  ID:Number;\r\n  DeviceType:String;\r\n  IsActive:Boolean;\r\n}\r\n\r\n\r\nexport type DataQuery ={\r\n  devicetype:devicetype[]\r\n}\r\n\r\n// const QUERY = gql`\r\n// {\r\n//   devicetype {\r\n//     ID\r\n//     DeviceType\r\n//     IsActive\r\n//   }\r\n// }\r\n// `;\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  public headerFlag = false;\r\n  emp:object =[];\r\n  emp1:object =[];\r\n  emp2:object =[];\r\n  title = 'osg';\r\n  public firmwares: Firmware;\r\n  visible = true;\r\n  selectable = true;\r\n  removable = true;\r\n  addOnBlur = true;\r\n  firmwareValues: string[];\r\n  OtapDevice= [\r\n    {\"name\" : \"TAP66\"},\r\n    {\"name\" : \"TAP76\"},\r\n    {\"name\" : \"SNM476\"}\r\n  ]\r\n  \r\n  readonly separatorKeysCodes: number[] = [ENTER, COMMA];\r\n  fruits: Fruit[] = [\r\n    {name: 'Lemon'},\r\n    {name: 'Lime'},\r\n    {name: 'Apple'},\r\n  ];\r\n  count= 0\r\nquery$: Observable<devicetype[]>;\r\n  constructor(\r\n    private router: Router,private apollo: Apollo) {\r\n      this.firmwares = new Firmware();\r\n      this.firmwareValues = this.firmwares.name;\r\n     }\r\n\r\n     ngOnInit() {\r\n\r\n      const source$ = this.apollo.query<DataQuery>({\r\n        query: gql`\r\n        {\r\n          devicetype {\r\n            ID\r\n            DeviceType\r\n            IsActive\r\n          }\r\n        }`\r\n        \r\n      }).pipe(shareReplay(1))\r\n\r\n source$.pipe(map(result => result.data && result.data.devicetype)).subscribe((data) => this.emp =data);\r\n   \r\n      \r\n\r\n//  const source1$ = this.apollo.query<DataQuery>({\r\n//   query: gql`\r\n//   {\r\n//     devicetype {\r\n//       ID\r\n//       DeviceType\r\n//       IsActive\r\n//     }\r\n//   }`,\r\n// }).pipe(shareReplay(1))\r\n\r\n// source1$.pipe(map(result => result.data && result.data.devicetype)).subscribe((data) => this.emp1 =data);\r\n\r\n\r\n  \r\n  }\r\n\r\n\r\n     element: HTMLElement;\r\n     toggleActive(event:any){\r\n      \r\n      event.preventDefault();\r\n      if(this.element !== undefined){\r\n        this.element.style.backgroundColor = \"white\";\r\n        this.element.style.color = \"#666666\";\r\n      } \r\n      var target = event.currentTarget;\r\n      target.style.backgroundColor = \"#005F9E\";\r\n      target.style.color = \"white\"\r\n      this.element = target;\r\n    }\r\n\r\n    dashboard(){\r\n      // this.emp2 = this.emp1\r\n      // console.log(this.emp2)\r\n      \r\n    }\r\n    \r\n    firmware(){\r\n      this.router.navigate(['Firmware']);\r\n      console.log('Firmware Dashboard');\r\n    }\r\n    \r\n    add(event: MatChipInputEvent): void {\r\n      const input = event.input;\r\n      const value = event.value;\r\n  \r\n      // Add our fruit\r\n      if ((value || '').trim()) {\r\n        this.fruits.push({name: value.trim()});\r\n      }\r\n  \r\n      // Reset the input value\r\n      if (input) {\r\n        input.value = '';\r\n      }\r\n    }\r\n  \r\n    remove(fruit: Fruit): void {\r\n      const index = this.fruits.indexOf(fruit);\r\n  \r\n      if (index >= 0) {\r\n        this.fruits.splice(index, 1);\r\n      }\r\n    }\r\n\r\n    deviceSearch(device) {\r\n      this.router.navigate(['/deviceSearch', device])\r\n    }\r\n\r\n\r\n\r\nexit(){\r\n  setTimeout(() =>  location.reload(),100)\r\n}\r\n    \r\n}\r\n","\r\n<div class=\"example-container\">\r\n  <mat-toolbar class=\"toolbar\">\r\n    <mat-toolbar-row>\r\n      <mat-icon class=\"menus\"  (click)=\"sidenav.toggle()\">menu</mat-icon> \r\n      \r\n     <h3 class=\"logo\">OSG OPS</h3>\r\n      <div class=\"rightside\">\r\n        <a  matTooltip=\"Global Search\"\r\n        aria-label=\"Button that displays a tooltip when focused or hovered over\"> <img src=\"../assets/Search.png\"/></a>\r\n       <!-- <mat-menu #menuse=\"matMenu\" >\r\n        [matMenuTriggerFor]=\"menuse\"\r\n          <div class=\"search\" mat-menu-item [disableRipple]=\"true\" (click)=\"$event.stopPropagation()\">\r\n            <mat-form-field appearance= \"outline\" class=\"example-chip-list\" >\r\n              <mat-label>Search</mat-label>\r\n              <mat-chip-list #chipList aria-label=\"Fruit selection\">\r\n                <mat-chip *ngFor=\"let fruit of fruits\" [selectable]=\"selectable\"\r\n                        [removable]=\"removable\" (removed)=\"remove(fruit)\">\r\n                  {{fruit.name}}\r\n                  <mat-icon matChipRemove *ngIf=\"removable\">cancel</mat-icon>\r\n                </mat-chip>\r\n                <input placeholder=\"Search\"\r\n                      [matChipInputFor]=\"chipList\"\r\n                      [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\r\n                      [matChipInputAddOnBlur]=\"addOnBlur\"\r\n                      (matChipInputTokenEnd)=\"add($event)\">\r\n              </mat-chip-list>\r\n            </mat-form-field>\r\n          </div>\r\n        </mat-menu>\r\n        -->\r\n        <a  matTooltip=\"Notification\"\r\n        aria-label=\"Button that displays a tooltip when focused or hovered over\"> <img src=\"../assets/Notifications.png\"/></a>\r\n       <!-- <mat-menu #menued=\"matMenu\">\r\n         [matMenuTriggerFor]=\"menued\"\r\n          <button mat-menu-item>\r\n            <mat-icon>dialpad</mat-icon>\r\n            <span>Redial</span>\r\n          </button>\r\n          <button mat-menu-item>\r\n            <mat-icon>voicemail</mat-icon>\r\n            <span>Check voice mail</span>\r\n          </button>\r\n          <button mat-menu-item>\r\n            <mat-icon>notifications_off</mat-icon>\r\n            <span>Disable alerts</span>\r\n          </button>\r\n        </mat-menu>-->\r\n        <a  matTooltip=\"App Launcher\"\r\n        aria-label=\"Button that displays a tooltip when focused or hovered over\"> <img src=\"../assets/App launcher.png\"/> </a>\r\n      \r\n   <!--     <mat-menu #menu1=\"matMenu\" >\r\n          [matMenuTriggerFor]=\"menu1\" \r\n          <span mat-menu-item [disableRipple]=\"true\" (click)=\"$event.stopPropagation()\">\r\n         \r\n        <form class=\"example-form\">\r\n          <h5 style=\"text-align: center;\">Apps</h5>\r\n          <div class=\"row\">\r\n            <div class=\"col-sm-4 col-xs-4\">\r\n              <div class=\"sub-menu\">\r\n                <mat-icon>home</mat-icon>\r\n                <a class=\"menu-title\">Home</a>\r\n              </div>\r\n             \r\n            \r\n            </div>\r\n            <div class=\"col-sm-4 col-xs-4\" > \r\n               <div class=\"sub-menu\">\r\n                  <mat-icon>account_box</mat-icon>\r\n                  <a class=\"menu-title\">Account</a>\r\n            </div>\r\n          </div>\r\n            <div class=\"col-sm-4 col-xs-4\">\r\n              <div class=\"sub-menu\">\r\n                <mat-icon>build_circle</mat-icon>\r\n                <a class=\"menu-title\">Build</a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-sm-4 col-xs-4\">\r\n              <div class=\"sub-menu\">\r\n                <mat-icon>explore</mat-icon>\r\n                <a class=\"menu-title\">Explore</a>\r\n              </div>\r\n             \r\n            \r\n            </div>\r\n            <div class=\"col-sm-4 col-xs-4\" > \r\n               <div class=\"sub-menu\">\r\n                  <mat-icon>\r\n                    pending</mat-icon>\r\n                  <a class=\"menu-title\">\r\n                    Pending</a>\r\n            </div>\r\n          </div>\r\n            <div class=\"col-sm-4 col-xs-4\">\r\n              <div class=\"sub-menu\">\r\n                <mat-icon>settings</mat-icon>\r\n                <a class=\"menu-title\">Settings</a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <div class=\"col-sm-4 col-xs-4\">\r\n              <div class=\"sub-menu\">\r\n                <mat-icon>save</mat-icon>\r\n                <a class=\"menu-title\">Save</a>\r\n              </div>\r\n             \r\n            \r\n            </div>\r\n            <div class=\"col-sm-4 col-xs-4\" > \r\n               <div class=\"sub-menu\">\r\n                  <mat-icon>access_alarms</mat-icon>\r\n                  <a class=\"menu-title\">Alarm</a>\r\n            </div>\r\n          </div>\r\n            <div class=\"col-sm-4 col-xs-4\">\r\n              <div class=\"sub-menu\">\r\n                <mat-icon>wifi_tethering</mat-icon>\r\n                <a class=\"menu-title\">Wifi</a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n       \r\n        <button color=\"primary\" mat-raised-button>MORE..</button>\r\n        </form>\r\n               </span>\r\n        </mat-menu>-->\r\n        <a matTooltip=\"Profile\"\r\n        aria-label=\"Button that displays a tooltip when focused or hovered over\"> <img src=\"../assets/Profile.png\"/> </a>\r\n\r\n    </div>\r\n\r\n    </mat-toolbar-row>\r\n  </mat-toolbar>\r\n\r\n  <mat-sidenav-container class=\"example-sidenav-container\" autosize>\r\n    <mat-sidenav #sidenav class=\"example-sidenav\" mode=\"side\"  opened role=\"navigation\" position=\"start\">\r\n      \r\n      <mat-nav-list class=\"dashboard\" style=\"height: 50%;\">\r\n     \r\n        <a mat-list-item routerLink=\"/Firmware\" routerLinkActive=\"active-list-item \" >\r\n          <img src=\"../assets/Dashboard.png\"/>\r\n        </a>\r\n\r\n      \r\n        <a mat-list-item (click)=\"menuTrigger.openMenu()\"  routerLinkActive=\"active-list-item\" [routerLinkActiveOptions]=\"{exact: true}\" ><div #menuTrigger=\"matMenuTrigger\"  [matMenuTriggerFor]=\"menu1\"></div>\r\n          <img src=\"../assets/Manage firmware.png\"/>\r\n         \r\n        <mat-menu #menu1=\"matMenu\" class=\"custom-class1\">\r\n          <div *ngFor=\"let device of emp\">\r\n            <div *ngIf=\"device.IsActive == true\">\r\n          <button   class=\"sidetxt\"  [routerLink] = \"'/deviceSearch/'+device.DeviceType\" [routerLinkActive] ='\"active-list-item1\"' [routerLinkActiveOptions]=\"{exact: true}\" \r\n            mat-menu-item>{{device.DeviceType}}</button>\r\n          <mat-divider></mat-divider>\r\n      \r\n          <p hidden [routerLink] = \"['/deviceSearch/'+device]\" >single</p>\r\n          <p hidden routerLink=\"/deviceSearch/single_device/1\">single</p>\r\n          <p hidden routerLink=\"/deviceSearch/single_device/2\">multi</p>\r\n        </div>\r\n        </div>\r\n        </mat-menu>\r\n      </a>\r\n\r\n      <a mat-list-item (click)=\"menuTrigger3.openMenu()\"  routerLinkActive=\"active-list-item\" [routerLinkActiveOptions]=\"{exact: true}\"><div #menuTrigger3=\"matMenuTrigger\"  [matMenuTriggerFor]=\"menu3\"></div>\r\n        <img src=\"../assets/Other OTAP command.png\"/>\r\n        <mat-menu #menu3=\"matMenu\" class=\"custom-class\" >\r\n          <div *ngFor=\"let device of OtapDevice\">\r\n            \r\n            <button  class=\"sidetxt\"  [routerLink] = \"'/othercommand/'+device.name\" [routerLinkActive] ='\"active-list-item1\"' [routerLinkActiveOptions]=\"{exact: true}\" \r\n              mat-menu-item  (click)=\"exit()\">{{device.name}}</button>\r\n            <mat-divider></mat-divider>\r\n          </div>\r\n        </mat-menu>\r\n        </a>\r\n        <a mat-list-item (click)=\"menuTrigger1.openMenu()\"  routerLinkActive=\"active-list-item\" [routerLinkActiveOptions]=\"{exact: true}\"><div #menuTrigger1=\"matMenuTrigger\"  [matMenuTriggerFor]=\"menu\"></div>\r\n        <mat-icon>storage</mat-icon>\r\n        \r\n        <mat-menu #menu=\"matMenu\"  class=\"custom-class\" >\r\n          <button class=\"sidetxt1\" mat-menu-item  routerLink=\"/upload/c\" routerLinkActive=\"active-list-item1\">UPLOAD C FIRMWARE</button>\r\n          <mat-divider></mat-divider>\r\n          <button class=\"sidetxt1\" mat-menu-item routerLink=\"/upload/java\" routerLinkActive=\"active-list-item1\"> UPLOAD JAVA FIRMWARE</button>\r\n          <mat-divider></mat-divider>\r\n          <button class=\"sidetxt1\" mat-menu-item routerLink=\"/upload/iot\" routerLinkActive=\"active-list-item1\">UPLOAD IOT FIRMWARE</button>\r\n          <mat-divider></mat-divider>\r\n          <button class=\"sidetxt1\" mat-menu-item routerLink=\"/upgrade\" routerLinkActive=\"active-list-item1\">UPDATE FIRMWARE COMBINATION</button>\r\n        </mat-menu>\r\n         </a>\r\n        <a mat-list-item (click)=\"menuTrigger2.openMenu()\"  routerLinkActive=\"active-list-item\" [routerLinkActiveOptions]=\"{exact: true}\"><div #menuTrigger2=\"matMenuTrigger\"  [matMenuTriggerFor]=\"menu2\"></div>\r\n          <i class=\"fa fa-binoculars\"></i>\r\n          \r\n         \r\n         <mat-menu #menu2=\"matMenu\" >\r\n           <button class=\"sidetxt1\" mat-menu-item routerLink=\"/outboundstatus\"  routerLinkActive=\"active-list-item1\">OUTBOUND STATUS CDG</button>\r\n          \r\n         </mat-menu>\r\n         </a>\r\n        \r\n         <a mat-list-item routerLink=\"/firmwarereport\" routerLinkActive=\"active-list-item \" >\r\n         <img src=\"../assets/Firmware Report.png\"/>\r\n         \r\n         </a>\r\n         <a style=\"position: relative; top: 80%;\" (click)=\"dashboard()\" mat-list-item>\r\n           <img src=\"../assets/help.png\">\r\n         </a>\r\n      \r\n      \r\n      </mat-nav-list>\r\n    </mat-sidenav>\r\n    <mat-sidenav-content>\r\n      \r\n      <router-outlet></router-outlet>\r\n    </mat-sidenav-content>\r\n  </mat-sidenav-container>\r\n\r\n\r\n\r\n \r\n\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule , LOCALE_ID } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport { FmdashboardComponent } from './fmdashboard/fmdashboard.component';\r\nimport { UploadCFirmwareComponent } from './upload-c-firmware/upload-c-firmware.component';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport { FormsModule } from '@angular/forms';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport { UploadJavaFirmwareComponent } from './upload-java-firmware/upload-java-firmware.component';\r\nimport { UploadIotFirmwareComponent } from './upload-iot-firmware/upload-iot-firmware.component';\r\nimport { UpgradeFirmwareCombinationComponent } from './upgrade-firmware-combination/upgrade-firmware-combination.component';\r\nimport { DeviceSearchComponent } from './device-search/device-search.component';\r\nimport { SingleDeviceSearchComponent } from './device-search/single-device-search/single-device-search.component';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport { StylePaginatorDirective } from './device-search/single-device-search/style-paginator.directive';\r\nimport { OutboundStatusComponent } from './outbound-status/outbound-status.component';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { DatePickerFormatDirective } from './pipe/date-picker-format.directive';\r\nimport { OtherOTAPCommandComponent } from './other-otap-command/other-otap-command.component';\r\nimport { FirmwareReportComponent } from './firmware-report/firmware-report.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { CustomerselectionComponent } from './customerselection/customerselection.component';\r\nimport { AuthenticationService } from './services/authentication.service';\r\nimport {  OutboundService } from './outbound-status/outbound.service';\r\n\r\nimport { TokenInterceptorService } from './services/token-interceptor.service';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { MatTableExporterModule } from 'mat-table-exporter';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport { GraphQLModule } from './graphql.module';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {addCommand} from './other-otap-command/other-otap-command.component'\r\nimport {flashFirmware} from './other-otap-command/other-otap-command.component'\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    DashboardComponent,\r\n    FmdashboardComponent,\r\n    UploadCFirmwareComponent,\r\n    UploadJavaFirmwareComponent,\r\n    UploadIotFirmwareComponent,\r\n    UpgradeFirmwareCombinationComponent,\r\n    DeviceSearchComponent,\r\n    SingleDeviceSearchComponent,\r\n    StylePaginatorDirective,\r\n    OutboundStatusComponent,\r\n    DatePickerFormatDirective,\r\n    OtherOTAPCommandComponent,\r\n    FirmwareReportComponent,\r\n    LoginComponent,\r\n    CustomerselectionComponent,\r\n    addCommand,\r\n    flashFirmware\r\n    \r\n  \r\n    \r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatSidenavModule,\r\n    MatListModule,\r\n    MatButtonModule,\r\n    MatTooltipModule,\r\n    MatMenuModule,\r\n    MatChipsModule,\r\n    MatAutocompleteModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatCardModule,\r\n    MatTabsModule,\r\n    FormsModule,\r\n    MatSelectModule,\r\n    MatRadioModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatCheckboxModule,\r\n    MatSortModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    HttpClientModule,\r\n    MatTableExporterModule,\r\n    MatProgressSpinnerModule,\r\n    MatSnackBarModule,\r\n    GraphQLModule,\r\n    MatDialogModule\r\n\r\n  ],\r\n  entryComponents: [addCommand,flashFirmware],\r\n  providers: [ AuthenticationService,OutboundService ,{\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: TokenInterceptorService,\r\n    multi: true\r\n  },\r\n  { provide: LOCALE_ID, useValue: 'en-US'}\r\n],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { NgForm ,Validators} from '@angular/forms';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthenticationService } from '../services/authentication.service';\r\nimport { OutboundService } from '../outbound-status/outbound.service'\r\nimport {Apollo , QueryRef} from 'apollo-angular';\r\nimport gql from \"graphql-tag\";\r\nimport { map, shareReplay } from 'rxjs/operators';\r\nimport { Observable, of } from 'rxjs'\r\n\r\n\r\nexport type customer={\r\nName: string\r\nID: number\r\nfk_OEMID: number\r\nParentCustomerID: number\r\nfk_CustomerTypeId:number\r\nInsertUTC:number\r\n}\r\nexport type DataQuery ={\r\ncustomer:customer[]\r\n}\r\nexport type customeraccountrelationshipQuery={\r\nID:number\r\nAccountName:string\r\nfk_DealerId:number\r\nfk_CustomerId:number\r\nBSSID:number\r\nInsertUTC:number\r\n}\r\nexport type DataQuery1 ={\r\ncustomeraccountrelationshipQuery:customeraccountrelationshipQuery[]\r\n}\r\n\r\n\r\n@Component({\r\nselector: 'app-customerselection',\r\ntemplateUrl: './customerselection.component.html',\r\nstyleUrls: ['./customerselection.component.css']\r\n})\r\n\r\n\r\nexport class CustomerselectionComponent implements OnInit {\r\nbuttonDisabled:boolean=true;\r\npublic customer;\r\npublic customeraccountrelationshipQuery\r\npublic customerValue;\r\nconstructor(private apollo: Apollo, private router: Router,private _auth: AuthenticationService, private outbound: OutboundService,) { }\r\nselectedSub;\r\npublic mail\r\nshowDiv:boolean=false;\r\n\r\n\r\nngOnInit(): void {\r\nconst source$ = this.apollo.query\r\n<DataQuery>\r\n({\r\nquery: gql`\r\n{\r\ncustomer {\r\nName\r\nID\r\nfk_OEMID\r\nParentCustomerID\r\nfk_CustomerTypeId\r\nInsertUTC\r\n}\r\n}`\r\n}).pipe(shareReplay(1))\r\nsource$.pipe(map(result => result.data && result.data.customer)).subscribe((data) => this.customer = data);\r\nconst source1$ = this.apollo.query\r\n<DataQuery1>\r\n({\r\nquery: gql`\r\n{customeraccountrelationshipQuery{\r\nID\r\nAccountName\r\nfk_DealerId\r\nfk_CustomerId\r\nBSSID\r\nInsertUTC\r\n}}`\r\n}).pipe(shareReplay(1))\r\nsource1$.pipe(map(result => result.data && result.data.customeraccountrelationshipQuery)).subscribe((data) => this.customeraccountrelationshipQuery = data);  \r\nthis.mail = localStorage.getItem('mail')\r\n}\r\n\r\n\r\nonNgModelChange(event){\r\n\r\n}\r\nreset(){\r\nthis.selectedSub='';\r\nthis.customerValue='';\r\nthis.buttonDisabled=true;\r\n}\r\nchange(){\r\nthis.router.navigate(['dashboard'])\r\n}\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","<mat-card class=\"logged-in\">\r\n   <div class=\"loggedin\">\r\n      <p> <b> LOGGED IN AS: {{this.mail}} </b> </p>\r\n   </div>\r\n </mat-card>\r\n <div class=\"h\">\r\n   <p> <b>  CUSTOMER SELECTION: </b></p>\r\n </div>\r\n <div class=\"main-container\">\r\n   <mat-card class=\"form\">\r\n      <mat-form-field class=\"mat-form\" appearance=\"outline\">\r\n         <mat-label>\r\n            (1050) Ashok Leyland\r\n         </mat-label>\r\n         <mat-select  #customerSelect [(ngModel)]=\"customerValue\">\r\n         <mat-option (click)=\"showDiv= true;buttonDisabled=!true;this.selectedSub='' \" *ngFor=\"let customer of customer\" [value]=\"customer.ID\">{{customer.ID}} {{customer.Name}}</mat-option>\r\n        \r\n      \r\n      </mat-select>\r\n      </mat-form-field>\r\n   </mat-card>\r\n \r\n   <div class=reset-and-select>\r\n      <button class=\"reset\" (click)=\"reset()\" mat-raised-button>Reset</button>\r\n      <button class=\"key\" [disabled]=\"buttonDisabled\"  (click)=\"change()\" mat-raised-button>Select</button>\r\n    </div>\r\n </div>\r\n \r\n <!-- <mat-card class=\"form\">\r\n   <mat-form-field class=\"mat-form\" appearance=\"outline\">\r\n      <mat-label>\r\n         Customers\r\n      </mat-label>\r\n      <mat-select [(ngModel)]=\"selectedSub\" >\r\n      <div *ngFor=\"let customer of customeraccountrelationshipQuery\">\r\n         <div *ngIf =\"customer.fk_CustomerId == customerValue\">\r\n            <mat-option (click)=\"buttonDisabled=!true\"  [value]=\"customer\" >{{customer.fk_CustomerId}} {{customer.AccountName}}</mat-option>\r\n         </div>\r\n      </div>\r\n      </mat-select>\r\n   </mat-form-field>\r\n </mat-card> -->\r\n \r\n \r\n ","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  element: HTMLElement;\r\n  toggleActive(event:any){\r\n   \r\n  \r\n   if(this.element !== undefined){\r\n     this.element.style.backgroundColor = \"#F5F5F5\";\r\n     this.element.style.color = \"#666666\";\r\n   } \r\n   var target = event.currentTarget;\r\n   target.style.backgroundColor = \"#005F9E\";\r\n   target.style.color = \"white\"\r\n   this.element = target;\r\n }\r\n\r\n \r\n  firmware(){\r\n    this.router.navigate(['Firmware']);\r\n  }\r\n}\r\n","<div class=\"container-fluid main\">\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-12 head\">\r\n           <h2>WELCOME TO OSG OPS</h2>\r\n        </div>  \r\n\r\n\r\n        \r\n\r\n    </div>\r\n</div>\r\n\r\n<div class=\"container-fluid mainpg\">\r\n    <p  class=\"tyt\">Please Select Your Application</p>\r\n    <div class=\"row\">\r\n      \r\n        <div class=\"col-sm-4 col-lg-2\" >\r\n            \r\n         <mat-card class=\"imgs\" (click)=\"toggleActive($event)\">\r\n           <mat-icon class=\"ins\">article</mat-icon>\r\n             <h4>ASSET</h4>\r\n             <h4>MANAGER</h4>\r\n         </mat-card>\r\n        </div>   \r\n        <div class=\"col-sm-4 col-lg-2\">\r\n            \r\n            <mat-card class=\"imgs\" (click)=\"toggleActive($event)\">\r\n              <mat-icon  class=\"ins\">router</mat-icon>\r\n              <h4>DEVICE</h4>\r\n              <h4>MANAGER</h4>\r\n            </mat-card>\r\n        </div>   \r\n\r\n        <div class=\"col-sm-4 col-lg-2\">\r\n            \r\n            <mat-card class=\"imgs\" (click)=\"firmware();toggleActive($event)\">\r\n              <mat-icon class=\"ins\">memory</mat-icon>\r\n              <h4>FIRMWARE</h4>\r\n              <h4>MANAGER</h4>\r\n            </mat-card>\r\n        </div>   \r\n           \r\n        <div class=\"col-sm-4 col-lg-2\"  >\r\n            \r\n            <mat-card class=\"imgs\" (click)=\"toggleActive($event)\">\r\n              <mat-icon class=\"ins\">text_snippet</mat-icon>\r\n              <h4>SUBSCRIPTION</h4>\r\n              <h4>MANAGER</h4>\r\n            </mat-card>\r\n           </div>   \r\n           \r\n           \r\n           <div class=\"col-sm-4 col-lg-2\" >\r\n            \r\n            <mat-card class=\"imgs\" (click)=\"toggleActive($event)\">\r\n              <mat-icon class=\"ins\">dns</mat-icon>\r\n              <h4>SUPPORT</h4>\r\n              <h4>MANAGER</h4>\r\n            </mat-card>\r\n           </div>   \r\n\r\n\r\n           <div class=\"col-sm-4 col-lg-2\"  >\r\n            \r\n            <mat-card class=\"imgs\" (click)=\"toggleActive($event)\">\r\n              <mat-icon class=\"ins\">local_post_office</mat-icon>\r\n              <h4>SMS</h4>\r\n              <h4>MANAGER</h4>\r\n            </mat-card>\r\n           </div>   \r\n           \r\n\r\n    </div>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-device-search',\r\n  templateUrl: './device-search.component.html',\r\n  styleUrls: ['./device-search.component.css']\r\n})\r\nexport class DeviceSearchComponent implements OnInit {\r\n\r\n  id\r\n  deviceType\r\n  constructor(private router: Router,private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.route.params.subscribe(params => {\r\n      this.deviceType = params['device'];\r\n      localStorage.setItem('deviceType',this.deviceType)\r\n     \r\n    });\r\n  }\r\n\r\n\r\n  single(){\r\n    this.id=1\r\n    this.router.navigate(['deviceSearch/single_device/',this.id]);\r\n  }\r\n  multi(){\r\n    this.id=2\r\n    this.router.navigate(['deviceSearch/single_device/',this.id]); \r\n  }\r\n\r\n  dash(){\r\n    this.router.navigate(['Firmware']);\r\n  }\r\n}\r\n","<div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n        <div class=\"col-12\">\r\n            <p class=\"tyt\"><span>Menu</span> > <span (click)=\"dash();\">Fireware Manager</span> > <span>Manage Firmware</span> > <span>Customer Ashok Leyland</span></p>\r\n            <mat-divider></mat-divider>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<mat-card>\r\n    <mat-icon class=\"icons\">cloud_upload</mat-icon>\r\n    <p class=\"t1\">Upgrade your firmware commands here </p>\r\n\r\n    <button mat-raised-button (click)=\"single()\" class=\"one \">\r\n        <mat-icon class=\"con1\">search</mat-icon>\r\n        Single Device Search\r\n    </button>\r\n    <button mat-raised-button (click)=\"multi()\" class=\"two\">\r\n        <mat-icon class=\"con1\">arrow_circle_up\r\n        </mat-icon>\r\n        Multiple Device Update\r\n    </button>\r\n</mat-card>","\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient,HttpHeaders } from '@angular/common/http'\r\nimport { Router } from '@angular/router'\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { StylePaginatorDirective } from '../style-paginator.directive';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DevicesearchService {\r\n  constructor(private http: HttpClient,\r\n    private _router: Router) { }\r\n\r\n  searchDetails() {\r\n    return this.http.get<any>(`${environment._fwdashboard}`).pipe(map(user => {\r\n     \r\n      return user;\r\n  }));\r\n  }\r\n\r\n  getVersionDetails() {\r\n    return this.http.get<any>(`${environment._dashboard}`).pipe(map(user => {\r\n     \r\n      return user;\r\n  }));\r\n  }\r\n\r\n  devicePagination(page){\r\n    return this.http.get<any>(`${environment._deviceWithPagination}`+page+``).pipe(map(user => {\r\n     \r\n      return user;\r\n  }));\r\n  }\r\n\r\n \r\n  PublishedVersion(data) {\r\n    return this.http.put<object>(`${environment._publishVersion}`, data).pipe(map(user => {\r\n     \r\n      return user;\r\n  }));\r\n  }\r\n}\r\n","import { Component, OnInit, AfterContentInit, AfterViewInit , AfterContentChecked} from '@angular/core';\r\nimport {ViewChild} from '@angular/core';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {MatSort , Sort} from '@angular/material/sort'; \r\nimport {DevicesearchService} from \"./service/devicesearch.service\"\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { __assign } from 'tslib';\r\nimport {MatSnackBar} from '@angular/material/snack-bar';\r\nimport { stringify } from '@angular/compiler/src/util';\r\nimport {Apollo , QueryRef} from 'apollo-angular';\r\nimport gql from \"graphql-tag\";\r\nimport { map, shareReplay } from 'rxjs/operators';\r\n \r\nexport type detailC = {\r\n  ID:Number;\r\n  Name:String;\r\n   ServerIP:String;\r\n  UserName:String;\r\n  Password:String;\r\n  FileSize:Number;\r\n  FilePath:String;\r\n  Port:Number;\r\n  InsertUTC:String;\r\n  UpdateUTC:String;\r\n  IsActive:Boolean;\r\n  ReleaseNotes:String;\r\n  isSNM476:Boolean;\r\n}\r\n\r\nexport type DataQuery = {\r\n  detailC:detailC[]\r\n}\r\n\r\nexport type detailJava = {\r\n  ID:Number;\r\n  Name:String;\r\n   ServerIP:String;\r\n  UserName:String;\r\n  Password:String;\r\n  FileSize:Number;\r\n  FilePath:String;\r\n  Port:Number;\r\n  InsertUTC:String;\r\n  UpdateUTC:String;\r\n  IsActive:Boolean;\r\n  ReleaseNotes:String;\r\n  isSNM476:Boolean;\r\n}\r\n\r\nexport type DataQuery1 = {\r\n  detailJava:detailJava[]\r\n}\r\n\r\n@Component({\r\n  selector: 'app-single-device-search',\r\n  templateUrl: './single-device-search.component.html',\r\n  styleUrls: ['./single-device-search.component.css']\r\n})\r\n\r\n\r\n\r\n\r\nexport class SingleDeviceSearchComponent implements OnInit , AfterViewInit , AfterContentChecked ,AfterContentInit {\r\n\r\n\r\n  public entries: object = [];\r\n  public entries1: object = [];\r\n  public Versions: object = [];\r\n  FirmwareC: object = [];\r\n  messages:object =[]; \r\n  select = false;\r\n sample =[];\r\n selectedValue: string;\r\n  public file : File;\r\n  fileToUpload: File;\r\n  loadingFlag = true;\r\n  loadingFlag1 = true\r\n  temp = null\r\n  id\r\n  totalCount=0;\r\n  pageIndex=0;\r\n  searchKey:string;\r\n  public publishVersion: object =[];\r\n  searchType\r\n//displayedColumns: string[] = ['select','id','name','cn','np','mn1','mn2','ssd','sed','vtn','model','ccv','cjv'];\r\n  displayedColumns: string[]=[\"select\",\"deviceId\",\"deviceType\",\"cn\",\"Network_Provider\",\"mobileNumber\",\"mn2\",\"Subcription_StartDate\",\"Subcription_EndDate\",\"Vehicle_Type\",\"Vehicle_Model\",\"ccv\",\"cjv\",\"ignition\"]\r\n  dataSource : MatTableDataSource<any>\r\n  selection = new SelectionModel(false, []);\r\n\r\n\r\n// @ViewChild(MatPaginator) paginator: MatPaginator;\r\n// @ViewChild(MatSort) sort: MatSort;\r\n//DeviceID\",\"Device_Type\",\"CUSTOMER NAME\",\"Network Provider\",\"Mobile_Number\",\"Mobile number2 \",\"Subcription_StartDate\",\"Subcription_EndDate\",\"Vehicle_Type\",\"Vehicle_Model\",\"Current C Version\",\"Current Java Version\",\"ignition\"\r\n//value assigned to update\r\n\r\n  public version;\r\n  public ServerIP;\r\n  public FilePath\r\n  public FileSize\r\n  public Port\r\n  public UserName\r\n  public Password\r\n  public APN\r\n  public Device\r\n  public FirmwareVersion\r\n  public UserID\r\n\r\nngAfterContentInit(){\r\n \r\n\r\n}\r\nngAfterViewInit() {\r\n  if(this.loadingFlag == false){\r\n    this.dataSource.paginator = this.paginator \r\n   // this.dataSource.sort = this.sort;\r\n  }\r\n  \r\n}\r\n\r\n  constructor(private router: Router,private route: ActivatedRoute,private apollo: Apollo, private DevicesearchService: DevicesearchService,private _snackBar: MatSnackBar) { }\r\n\r\n  ngOnInit(): void {\r\n    this.searchType = localStorage.getItem('deviceType')\r\n  \r\n    const source$ = this.apollo.query<DataQuery>({\r\n      query: gql`\r\n      {\r\n        detailC {\r\n          ID\r\n          Name\r\n          ServerIP\r\n          UserName\r\n          Password\r\n          FileSize\r\n          FilePath\r\n          Port\r\n          InsertUTC\r\n          UpdateUTC\r\n          IsActive\r\n          ReleaseNotes\r\n          isSNM476\r\n        }\r\n      }`   \r\n    }).pipe(shareReplay(1))\r\n\r\n    source$.pipe(map(result => result.data && result.data.detailC)).subscribe((data) =>   \r\n    this.FirmwareC = data\r\n  );\r\n\r\n\r\n\r\n const source1$ = this.apollo.query<DataQuery1>({\r\n      query: gql`\r\n      {\r\n        detailJava {\r\n          ID\r\n          Name\r\n          ServerIP\r\n          UserName\r\n          Password\r\n          FileSize\r\n          FilePath\r\n          Port\r\n          InsertUTC\r\n          UpdateUTC\r\n          IsActive\r\n          ReleaseNotes\r\n          isSNM476\r\n        }\r\n      }`   \r\n    }).pipe(shareReplay(1))\r\n\r\n    source1$.pipe(map(result => result.data && result.data.detailJava)).subscribe((data) =>   \r\n    this.messages = data\r\n  );\r\n    // this.DevicesearchService.searchDetails().subscribe(\r\n    //   data => {\r\n    //     // this.dataSource = new MatTableDataSource(data)\r\n      \r\n    //     // this.dataSource ? this.loadingFlag = false : this.loadingFlag = true;\r\n      \r\n    //     // this.temp = this.dataSource.data.length;\r\n    //   }\r\n    // )\r\n    var pages = \"/specificChar?deviceType=\"+this.searchType+\"&page=\"+this.pageIndex+\"&size=10\";\r\n    this.entriesPost(pages);\r\n  \r\n\r\n    //  this.DevicesearchService.getVersionDetails().subscribe(\r\n    //    data => {\r\n    //     this.entries = data\r\n    //     function* entries(obj) {\r\n    //       for (let key of Object.keys(obj)) {\r\n    //         yield [key, obj[key]];\r\n    //       }\r\n    //    }\r\n  \r\n    //    for (let [key1, value1] of entries(this.entries)) {\r\n\r\n      \r\n    //     if(key1 == 'SearchData'){\r\n           \r\n    //        this.Versions = value1;\r\n        \r\n          \r\n    //     }\r\n\r\n    //     // for (let [key, value] of entries(value1)) {\r\n\r\n    //     // }\r\n        \r\n    //    }\r\n    //    }\r\n    //  ) \r\n    \r\n    this.route.params.subscribe(params => {\r\n      this.id = params['id'] -1;\r\n    });\r\n\r\n  \r\n   \r\n\r\n  \r\n  }\r\n\r\n  entriesPost(page){\r\n   \r\n   \r\n    this.DevicesearchService.devicePagination(page).subscribe(\r\n      data => {\r\n       \r\n        this.entries = data\r\n        function* entries(obj) {\r\n          for (let key of Object.keys(obj)) {\r\n            yield [key, obj[key]];\r\n          }\r\n       }\r\n  \r\n       for (let [key1, value1] of entries(this.entries)) {\r\n        if(key1 == \"totalCount\"){\r\n          this.totalCount = value1\r\n         \r\n        }\r\n         if(key1 == \"result\"){\r\n            this.dataSource = new MatTableDataSource(value1)\r\n      \r\n        this.dataSource ? this.loadingFlag = false : this.loadingFlag = true;\r\n      \r\n        this.temp = this.dataSource.data.length;\r\n         }\r\n       \r\n       }\r\n      }\r\n    )\r\n  }\r\n\r\n\r\n  pageChangeEvent(page){\r\n    \r\n    this.pageIndex = page.pageIndex;\r\n    this.loadingFlag = true\r\n    var pages = \"/specificChar?deviceType=\"+this.searchType+\"&page=\"+this.pageIndex+\"&size=10\";\r\n    this.entriesPost(pages)\r\n  }\r\n\r\n  search(){\r\n    //\r\n    var pages = \"/singleSearch?deviceid=\"+this.searchKey;\r\n    this.loadingFlag = true\r\n    this.entriesPost(pages)\r\n  }\r\n  \r\n  private paginator: MatPaginator;\r\n  private sort: MatSort;\r\n\r\n  \r\n\r\n  @ViewChild(MatSort) set matSort(ms: MatSort) {\r\n    this.sort = ms;\r\n  \r\n    this.setDataSourceAttributes();\r\n  }\r\n\r\n  @ViewChild(MatPaginator) set matPaginator(mp: MatPaginator) {\r\n    this.paginator = mp;\r\n\r\n    this.setDataSourceAttributes();\r\n  }\r\n\r\n\r\n  \r\n\r\n  setDataSourceAttributes() {\r\n    if(this.loadingFlag == false){\r\n  //  this.dataSource.paginator = this.paginator \r\n    this.dataSource.sort = this.sort;\r\n  }\r\n}\r\n\r\napplyFilter() {\r\n    \r\n  this.dataSource.filter = this.searchKey.trim().toLowerCase();\r\n}\r\n\r\n\r\nprivate isAllSelected() {\r\n  const numSelected = this.selection.selected.length;\r\n  const numRows = this.dataSource.data.length;\r\n  return numSelected === numRows;\r\n}\r\n\r\ntoggleRow(row: any, index: number) {\r\n  this.selection.toggle(row);\r\n \r\n  for (const [key, value] of Object.entries(row)) {\r\n    if(key == \"deviceId\")\r\n    {\r\n      this.Device = value\r\n     \r\n    }\r\n   \r\n  }\r\n}\r\n\r\n/** The label for the checkbox on the passed row */\r\ncheckboxLabel(row?: any): string {\r\n  if (!row) {\r\n   \r\n    return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\r\n    \r\n  }\r\n  return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\r\n}\r\n\r\n\r\n  ngAfterContentChecked()\t{\r\n  \r\n  }\r\n\r\n\r\n  changeTab(event) {\r\n    this.id = event.index;\r\n  }\r\n\r\n  listed(version){\r\n   \r\n    for (const [key, value] of Object.entries(version)) {\r\n      if(key == \"Name\")\r\n      {\r\n        this.version = value;\r\n      }\r\n      if(key == \"ServerIP\")\r\n      {\r\n        this.ServerIP = value;\r\n      }\r\n      if(key == \"FilePath\")\r\n      {\r\n        this.FilePath = value\r\n      }\r\n      if(key == \"FileSize\")\r\n      {\r\n        this.FileSize = value\r\n        \r\n   \r\n      }\r\n      if(key == \"Port\"){\r\n        this.Port= value;\r\n      }\r\n      if(key == \"UserName\"){\r\n        this.UserName = value\r\n      }\r\n      if(key == \"Password\"){\r\n        this.Password = value\r\n      }\r\n      // if(key == \"APN\"){\r\n      //   this.APN =value\r\n      // }\r\n      // if(key == \"ID\")\r\n      // {\r\n      //   this.UserID = value\r\n      // }\r\n    }\r\n  }\r\n\r\n  postData(selected){\r\n    this.select = selected\r\n    if(this.version != undefined && this.Device != undefined)\r\n    {\r\n      let objData = Object.assign({update: [{Device: this.Device , DeviceID: 351431 , CVersion: this.version , JavaVersion: \"\", ServerIP: this.ServerIP , FilePath: this.FilePath , FileSize: this.FileSize , FirmwareVersion: this.version , FirmwareType: 0 , Port: this.Port , UserName: this.UserName , Password: this.Password , FirmwareUpgradeEnum: 34 , APN: this.APN , AppInstanceID: null , UserID: \"2739\" , Internal: false , DeviceGateway: \"TDMG\" , IOTDevice: \"\"}]})\r\n    \r\n  \r\n      this.DevicesearchService.PublishedVersion(objData).pipe().subscribe(data=>{\r\n      \r\n      this._snackBar.open(this.Device + \" Updated Successfully\",\"\",{duration: 5000});\r\n        })\r\n      \r\n      \r\n    }\r\n  \r\n\r\n    // if(this.select == false && this.version != undefined && this.Device != undefined)\r\n    // {\r\n    //   let objData = Object.assign({update: [{Device: this.Device , DeviceID: 351431 , CVersion: \"\" , JavaVersion: this.version , ServerIP: this.ServerIP , FilePath: this.FilePath , FileSize: this.FileSize , FirmwareVersion: this.FirmwareVersion , FirmwareType: 0 , Port: this.Port , UserName: this.UserName , Password: this.Password , FirmwareUpgradeEnum: 34 , APN: this.APN , AppInstanceID: null , UserID: \"2739\" , Internal: false , DeviceGateway: \"TDMG\" , IOTDevice: \"\"}]})\r\n  \r\n    //     this.DevicesearchService.PublishedVersion(objData).pipe().subscribe(data=>{\r\n    //       console.log(data)\r\n    //       this._snackBar.open(this.Device + \" Updated Successfully\",\"\",{duration: 5000});\r\n    //       })\r\n    // }\r\n    if(this.version == undefined || this.Device == undefined)\r\n    {\r\n      this._snackBar.open(\"Select Version and CheckBox To Update Version\",\"\",{duration: 5000});\r\n    }\r\n  \r\n    \r\n   \r\n  }\r\n\r\n\r\n\r\n  postMethod(files: FileList) {\r\n    this.fileToUpload = files.item(0);\r\n    if(this.fileToUpload != null){\r\n      alert(\"FIle Successfully Uploaded\")\r\n    }\r\n    //console.log(this.fileToUpload.name);\r\n    }\r\n\r\n    dash(){\r\n      this.router.navigate(['Firmware']);\r\n    }\r\n}\r\n","<div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n        <div class=\"col-12\">\r\n            <p class=\"tyt\"><span>Menu</span> > <span (click)=\"dash();\">Fireware Manager</span> > <span>Upload Firmware Version</span> > <span>Customer Ashok Leyland</span></p>\r\n            <mat-divider></mat-divider>\r\n        </div>\r\n    </div>\r\n</div>\r\n<p class=\"tyts\">Firmware Update Command</p>\r\n<mat-tab-group mat-align-tabs=\"end\" selectedIndex=\"{{this.id}}\" (selectedTabChange)=\"changeTab($event)\">\r\n    <mat-tab label=\"Single Device Search\"> \r\n        <mat-card>\r\n            <div class=\"container-fluid\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-7 cleft\">\r\n                        <p>Single device search option is to handle upgradation of the searched device</p>\r\n                        <div class=\"example-container\" >\r\n                        <mat-form-field style=\"width: 80%;\" appearance=\"outline\">\r\n                           \r\n                            <input style=\"text-indent: 2em;\" matInput  [(ngModel)]=\"searchKey\" placeholder=\"Search Device\" #input>  \r\n                             <mat-icon style=\"color: gray;\" matPrefix>search</mat-icon>\r\n                           \r\n                        </mat-form-field>\r\n                        <button mat-raised-button class=\"btn\" (click) = search()>SUBMIT</button>\r\n                        \r\n                    </div>\r\n                    </div>\r\n                    <div class=\"col-sm-5\">\r\n                        <p>UPDATE VERSION :</p>\r\n                        <!-- <mat-radio-group color=\"primary\" aria-label=\"Select an option\" [(ngModel)]=\"select\" >\r\n                            <mat-radio-button [value]=\"messages\">JAVA</mat-radio-button>\r\n                            <mat-radio-button [value]=\"\">C</mat-radio-button>\r\n                          </mat-radio-group> -->\r\n                          <mat-form-field style=\"width: 150px; margin-left: 10px;\" appearance=\"standard\">\r\n                            <mat-label>SELECT COMMAND</mat-label>\r\n                            <mat-select [(ngModel)]=\"selectedValue\">\r\n                              <div > \r\n\r\n                                <mat-option *ngFor=\"let version of FirmwareC\" (click)=\"listed(version)\" [value]=\"version.Name\">\r\n                                  {{version.Name}}\r\n                                </mat-option>\r\n                              </div>\r\n                            </mat-select>\r\n                          </mat-form-field>  \r\n                          \r\n                        <button mat-raised-button class=\"btn1\" (click)=\"postData(select)\">FLASH FIRMWARE</button>\r\n                          \r\n                    </div>\r\n                </div>\r\n            </div>        \r\n            \r\n\r\n        </mat-card>\r\n    </mat-tab>\r\n    <mat-tab label=\"Multiple Device Update\"> \r\n        <mat-card class=\"multi\">\r\n            <div *ngIf=\"this.id == '1' \">\r\n              <div class=\"pack\">\r\n                <p>Multiple Device Update is to handle upgrades of multiple options under one go.</p>\r\n                <p>To upload the device list click the device upload button to upload an excel sheet.</p>\r\n                \r\n              </div>\r\n                <p class=\"back\">Note : The format for the upload is to list all device in one column with header title as <b>Device ID</b></p>\r\n                <button mat-raised-button (click)=\"fileInput.click()\" class=\"one\">\r\n                  <mat-icon class=\"con1\">file_upload</mat-icon>\r\n                  Device Upload\r\n               \r\n              </button>\r\n              <input #fileInput  type=\"file\" name=\"files\"  accept=\".xlsx,.csv\" id=\"myfile\" (change)=\"postMethod($event.target.files)\" [(ngModel)]=\"file\" style=\"display:none;\" />\r\n            </div>\r\n        </mat-card>    \r\n    </mat-tab>\r\n\r\n</mat-tab-group>\r\n<div *ngIf=\"this.id === 0 && loadingFlag\" class=\"uploader-status\">\r\n  <mat-spinner></mat-spinner>\r\n</div>\r\n<div *ngIf=\"this.id === 0 && !loadingFlag\" >\r\n    <table mat-table [dataSource]=\"dataSource\" matSort  class=\"mat-elevation-z8\">\r\n\r\n      <ng-container matColumnDef=\"select\">\r\n        <th mat-header-cell *matHeaderCellDef=\"let row; let i = index\" ><mat-checkbox (change)=\"$event ? toggleRow(row, i) : null\" color=\"primary\"></mat-checkbox></th>\r\n        <td mat-cell *matCellDef=\"let row; let i = index\">    <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\"\r\n          (change)=\"$event ? toggleRow(row, i) : null\"\r\n          [checked]=\"selection.isSelected(row)\"\r\n          [aria-label]=\"checkboxLabel(row)\"></mat-checkbox> </td>\r\n      </ng-container>\r\n      \r\n        <ng-container matColumnDef=\"deviceId\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\r\n          <td mat-cell *matCellDef=\"let element\"><a style=\" text-decoration-line: underline;color: #005F9E;\">  {{element.deviceId}} </a></td>\r\n        </ng-container>\r\n  \r\n    \r\n        <ng-container matColumnDef=\"deviceType\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> DEVICE<br>TYPE </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.deviceType}} </td>\r\n        </ng-container>\r\n    \r\n        <ng-container matColumnDef=\"cn\">\r\n          <th mat-header-cell *matHeaderCellDef > CUSTOMER<br>NAME </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.oemName}} </td>\r\n        </ng-container>\r\n      \r\n        <ng-container matColumnDef=\"Network_Provider\">\r\n          <th mat-header-cell *matHeaderCellDef> NETWORK<br>PROVIDER </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.networkProvider}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"mobileNumber\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> MOBILE NO. </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.mobileNumber}}  </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"mn2\">\r\n          <th mat-header-cell *matHeaderCellDef> MOBILE NO. 2 </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.mobileNumber2}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"Subcription_StartDate\">\r\n          <th mat-header-cell *matHeaderCellDef> SUBSCRIPTION<br>START DATE </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.subcriptionStartDate | date:'dd-MM-yyyy'}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"Subcription_EndDate\">\r\n          <th mat-header-cell *matHeaderCellDef> SUBSCRIPTION<br>END DATE </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.subcriptionEndDate | date:'dd-MM-yyyy'}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"Vehicle_Type\">\r\n          <th mat-header-cell *matHeaderCellDef> VECHICLE<br>TYPE NAME </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.vehicleType}} </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"Vehicle_Model\">\r\n          <th mat-header-cell *matHeaderCellDef> MODEL </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.vehicleModel}} </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"ccv\">\r\n          <th mat-header-cell *matHeaderCellDef> CURRENT<br>C VERSION </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.firmwareC}} </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"cjv\">\r\n          <th mat-header-cell *matHeaderCellDef> CURRENT<br>JAVA VERSION </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.firmwareJava}} </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"ignition\">\r\n          <th mat-header-cell *matHeaderCellDef> IGNITION </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.Ignition_Status}} </td>\r\n        </ng-container>\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n      </table>\r\n    </div>     \r\n      <div *ngIf=\"this.temp != null \">\r\n        <mat-paginator style-paginator [length]=\"totalCount\"  [showTotalPages]=\"10\"  [pageIndex]=\"pageIndex\"\r\n        [pageSize]=\"10\"  (page)=\"pageChangeEvent($event)\"></mat-paginator>\r\n      </div>\r\n  \r\n      <div *ngIf=\"this.temp == null\">\r\n        <h3 style=\"color: #666; text-align: center; font-weight: 500;\">Records Not found</h3>\r\n      </div>\r\n\r\n","import {\r\n  ElementRef,\r\n  AfterViewInit,\r\n  Directive,\r\n  Host,\r\n  Optional,\r\n  Renderer2,\r\n  Self,\r\n  ViewContainerRef,\r\n  Input\r\n} from \"@angular/core\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatButton } from \"@angular/material/button\";\r\n\r\ninterface PageObject {\r\n  length: number;\r\n  pageIndex: number;\r\n  pageSize: number;\r\n  previousPageIndex: number;\r\n}\r\n\r\n@Directive({\r\n  selector: \"[style-paginator]\"\r\n})\r\nexport class StylePaginatorDirective implements AfterViewInit {\r\n  private _pageGapTxt = \"...\";\r\n  private _rangeStart: number;\r\n  private _rangeEnd: number;\r\n  private _buttons = [];\r\n  private _curPageObj: PageObject = {\r\n    length: 0,\r\n    pageIndex: 0,\r\n    pageSize: 0,\r\n    previousPageIndex: 0\r\n  };\r\n\r\n  @Input()\r\n  get showTotalPages(): number {\r\n    return this._showTotalPages;\r\n  }\r\n  set showTotalPages(value: number) {\r\n    this._showTotalPages = value % 2 == 0 ? value + 1 : value;\r\n  }\r\n  private _showTotalPages = 2;\r\n\r\n  get inc(): number {\r\n    return this._showTotalPages % 2 == 0\r\n      ? this.showTotalPages / 2\r\n      : (this.showTotalPages - 1) / 2;\r\n  }\r\n\r\n  get numOfPages(): number {\r\n    return this.matPag.getNumberOfPages();\r\n  }\r\n\r\n  get lastPageIndex(): number {\r\n    return this.matPag.getNumberOfPages() - 1;\r\n  }\r\n\r\n  constructor(\r\n    @Host() @Self() @Optional() private readonly matPag: MatPaginator,\r\n    private vr: ViewContainerRef,\r\n    private ren: Renderer2\r\n  ) {\r\n    //to rerender buttons on items per page change and first, last, next and prior buttons\r\n    this.matPag.page.subscribe((e: PageObject) => {\r\n      if (\r\n        this._curPageObj.pageSize != e.pageSize &&\r\n        this._curPageObj.pageIndex != 0\r\n      ) {\r\n        e.pageIndex = 0;\r\n        this._rangeStart = 0;\r\n        this._rangeEnd = this._showTotalPages - 1;\r\n      }\r\n      this._curPageObj = e;\r\n\r\n      this.initPageRange();\r\n    });\r\n  }\r\n\r\n  private buildPageNumbers() {\r\n    const actionContainer = this.vr.element.nativeElement.querySelector(\r\n      \"div.mat-paginator-range-actions\"\r\n    );\r\n    const nextPageNode = this.vr.element.nativeElement.querySelector(\r\n      \"button.mat-paginator-navigation-next\"\r\n    );\r\n    const prevButtonCount = this._buttons.length;\r\n\r\n    // remove buttons before creating new ones\r\n    if (this._buttons.length > 0) {\r\n      this._buttons.forEach(button => {\r\n        this.ren.removeChild(actionContainer, button);\r\n      });\r\n      //Empty state array\r\n      this._buttons.length = 0;\r\n    }\r\n\r\n    //initialize next page and last page buttons\r\n    if (this._buttons.length == 0) {\r\n      let nodeArray = this.vr.element.nativeElement.childNodes[0].childNodes[0]\r\n        .childNodes[2].childNodes;\r\n      setTimeout(() => {\r\n        for (let i = 0; i < nodeArray.length; i++) {\r\n          if (nodeArray[i].nodeName === \"BUTTON\") {\r\n            if (nodeArray[i].innerHTML.length > 100 && nodeArray[i].disabled) {\r\n              this.ren.setStyle(\r\n                nodeArray[i],\r\n                \"background-color\",\r\n                \"rgb(82, 126, 156)\"\r\n              );\r\n              this.ren.setStyle(nodeArray[i], \"color\", \"white\");\r\n              this.ren.setStyle(nodeArray[i], \"margin\", \".5%\");\r\n            } else if (\r\n              nodeArray[i].innerHTML.length > 100 &&\r\n              !nodeArray[i].disabled\r\n            ) {\r\n              this.ren.setStyle(\r\n                nodeArray[i],\r\n                \"background-color\",\r\n                \"#005F9E\"\r\n              );\r\n              this.ren.setStyle(nodeArray[i], \"color\", \"white\");\r\n              this.ren.setStyle(nodeArray[i], \"margin\", \".5%\");\r\n            } else if (nodeArray[i].disabled) {\r\n              this.ren.setStyle(nodeArray[i], \"background-color\", \"lightgray\");\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    for (let i = 0; i < this.numOfPages; i++) {\r\n      if (i >= this._rangeStart && i <= this._rangeEnd) {\r\n        this.ren.insertBefore(\r\n          actionContainer,\r\n          this.createButton(i, this.matPag.pageIndex),\r\n          nextPageNode\r\n        );\r\n      }\r\n\r\n      if (i == this._rangeEnd) {\r\n        this.ren.insertBefore(\r\n          actionContainer,\r\n          this.createButton(this._pageGapTxt, this._rangeEnd),\r\n          nextPageNode\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  private createButton(i: any, pageIndex: number): any {\r\n    const linkBtn: MatButton = this.ren.createElement(\"button\");\r\n    this.ren.addClass(linkBtn, \"mat-mini-fab\");\r\n    this.ren.setStyle(linkBtn, \"margin\", \"0%\");\r\n    this.ren.setStyle(linkBtn, \"background-color\", \"white\");\r\n\r\n    const pagingTxt = isNaN(i) ? this._pageGapTxt : +(i + 1);\r\n    const text = this.ren.createText(pagingTxt + \"\");\r\n\r\n    this.ren.addClass(linkBtn, \"mat-custom-page\");\r\n    switch (i) {\r\n      case pageIndex:\r\n        this.ren.setAttribute(linkBtn, \"disabled\", \"disabled\");\r\n        break;\r\n      case this._pageGapTxt:\r\n        let newIndex = this._curPageObj.pageIndex + this._showTotalPages;\r\n\r\n        if (newIndex >= this.numOfPages) newIndex = this.lastPageIndex;\r\n\r\n        if (pageIndex != this.lastPageIndex) {\r\n          this.ren.listen(linkBtn, \"click\", () => {\r\n            console.log(\"working: \", pageIndex);\r\n            this.switchPage(newIndex);\r\n          });\r\n        }\r\n\r\n        if (pageIndex == this.lastPageIndex) {\r\n          this.ren.setAttribute(linkBtn, \"disabled\", \"disabled\");\r\n        }\r\n        break;\r\n      default:\r\n        this.ren.listen(linkBtn, \"click\", () => {\r\n          this.switchPage(i);\r\n        });\r\n        break;\r\n    }\r\n\r\n    this.ren.appendChild(linkBtn, text);\r\n    //Add button to private array for state\r\n    this._buttons.push(linkBtn);\r\n    return linkBtn;\r\n  }\r\n  //calculates the button range based on class input parameters and based on current page index value. Used to render new buttons after event.\r\n  private initPageRange(): void {\r\n    const middleIndex = (this._rangeStart + this._rangeEnd) / 2;\r\n\r\n    this._rangeStart = this.calcRangeStart(middleIndex);\r\n    this._rangeEnd = this.calcRangeEnd(middleIndex);\r\n\r\n    this.buildPageNumbers();\r\n  }\r\n\r\n  //Helper function To calculate start of button range\r\n  private calcRangeStart(middleIndex: number): number {\r\n    switch (true) {\r\n      case this._curPageObj.pageIndex == 0 && this._rangeStart != 0:\r\n        return 0;\r\n      case this._curPageObj.pageIndex > this._rangeEnd:\r\n        return this._curPageObj.pageIndex + this.inc > this.lastPageIndex\r\n          ? this.lastPageIndex - this.inc * 2\r\n          : this._curPageObj.pageIndex - this.inc;\r\n      case this._curPageObj.pageIndex > this._curPageObj.previousPageIndex &&\r\n        this._curPageObj.pageIndex > middleIndex &&\r\n        this._rangeEnd < this.lastPageIndex:\r\n        return this._rangeStart + 1;\r\n      case this._curPageObj.pageIndex < this._curPageObj.previousPageIndex &&\r\n        this._curPageObj.pageIndex < middleIndex &&\r\n        this._rangeStart > 0:\r\n        return this._rangeStart - 1;\r\n      default:\r\n        return this._rangeStart;\r\n    }\r\n  }\r\n  //Helpter function to calculate end of button range\r\n  private calcRangeEnd(middleIndex: number): number {\r\n    switch (true) {\r\n      case this._curPageObj.pageIndex == 0 &&\r\n        this._rangeEnd != this._showTotalPages:\r\n        return this._showTotalPages - 1;\r\n      case this._curPageObj.pageIndex > this._rangeEnd:\r\n        return this._curPageObj.pageIndex + this.inc > this.lastPageIndex\r\n          ? this.lastPageIndex\r\n          : this._curPageObj.pageIndex + 1;\r\n      case this._curPageObj.pageIndex > this._curPageObj.previousPageIndex &&\r\n        this._curPageObj.pageIndex > middleIndex &&\r\n        this._rangeEnd < this.lastPageIndex:\r\n        return this._rangeEnd + 1;\r\n      case this._curPageObj.pageIndex < this._curPageObj.previousPageIndex &&\r\n        this._curPageObj.pageIndex < middleIndex &&\r\n        this._rangeStart >= 0 &&\r\n        this._rangeEnd > this._showTotalPages - 1:\r\n        return this._rangeEnd - 1;\r\n      default:\r\n        return this._rangeEnd;\r\n    }\r\n  }\r\n  //Helper function to switch page on non first, last, next and previous buttons only.\r\n  private switchPage(i: number): void {\r\n    console.log(\"switch\", i);\r\n    const previousPageIndex = this.matPag.pageIndex;\r\n    this.matPag.pageIndex = i;\r\n    this.matPag[\"_emitPageEvent\"](previousPageIndex);\r\n    this.initPageRange();\r\n    \r\n  }\r\n  //Initialize default state after view init\r\n  public ngAfterViewInit() {\r\n    this._rangeStart = 0;\r\n    this._rangeEnd = this._showTotalPages - 1;\r\n    this.initPageRange();\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n \r\nimport { ExportToCsv } from 'export-to-csv';\r\nimport {MatSnackBar} from '@angular/material/snack-bar';\r\nimport {Apollo , QueryRef} from 'apollo-angular';\r\nimport gql from \"graphql-tag\";\r\n\r\n@Component({\r\n  selector: 'app-firmware-report',\r\n  templateUrl: './firmware-report.component.html',\r\n  styleUrls: ['./firmware-report.component.css']\r\n})\r\nexport class FirmwareReportComponent implements OnInit {\r\n\r\n  public searchedData\r\n  public listArray\r\n  public entries: object = [];\r\n  constructor(private router:Router, private _snackBar: MatSnackBar , private http: HttpClient,private apollo: Apollo) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  dash(){\r\n    this.router.navigate(['Firmware']);\r\n  }\r\n\r\n  search(val){\r\n    if(val != undefined)\r\n    {\r\n      this.listArray = val.split(',');\r\n     \r\n      \r\n       this.apollo.query({\r\n        query: gql`\r\n        query otapcommand($DeviceID:[String]){\r\n          otapcommand(DeviceID: $DeviceID){\r\n            DeviceID,\r\n            DeviceID\r\n            DeviceType\r\n            Customer\r\n            NetworkProvider\r\n            MobileNo\r\n            Model\r\n            VehicleTypeName\r\n            CurrentCVersion\r\n            CurrentJavaVersion\r\n            Ignition\r\n          }\r\n        }  \r\n      `,\r\n      variables:{\r\n        DeviceID: this.listArray\r\n      }\r\n      }).subscribe(result => {\r\n       \r\n        this.entries = result.data['otapcommand']\r\n        this.download();\r\n      })\r\n    }\r\n}\r\n\r\n  download(){\r\n    const options = { \r\n      filename: 'Firmware Report',\r\n      fieldSeparator: ',',\r\n      quoteStrings: '\"',\r\n      decimalSeparator: '.',\r\n      showLabels: true, \r\n      showTitle: false,\r\n      useTextFile: false,\r\n      useBom: true,\r\n      useKeysAsHeaders: true,\r\n     \r\n    };\r\n   \r\n  const csvExporter = new ExportToCsv(options);\r\n   \r\n  csvExporter.generateCsv(this.entries);\r\n  }\r\n}\r\n","<div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n        <div class=\"col-12\">\r\n            <p class=\"tyt\"><span>Menu</span> > <span (click)=\"dash()\">Fireware Manager</span> > <span>Firmware Report</span> > <span>Customer Ashok Leyland</span></p>\r\n            <mat-divider></mat-divider>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<p class=\"tyts\">Firmware Report</p>\r\n\r\n<mat-card>\r\n   <p class=\"part\"> Firmware Report Menu is used to download the searched devices' firmware information</p> \r\n\r\n   <p class=\"back\">Note : Use \",\" between searched <b>Device ID</b></p>\r\n\r\n   <mat-form-field class=\"form\" appearance=\"outline\">\r\n                           \r\n    <input style=\"text-indent: 2em;\" matInput  [(ngModel)]=\"searchedData\"  placeholder=\"Search Device\" #input>  \r\n     <mat-icon style=\"color: gray;\" matPrefix>search</mat-icon>\r\n   \r\n</mat-form-field>\r\n<button (click)=\"search(searchedData)\" mat-raised-button class=\"btn\">SUBMIT</button>\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FmdashboardService } from './service/fmdashboard.service';\r\nimport {Apollo , QueryRef} from 'apollo-angular';\r\nimport gql from \"graphql-tag\";\r\nimport { map, shareReplay } from 'rxjs/operators';\r\nimport { Observable, of } from 'rxjs'\r\n\r\n\r\nexport type devicemaster ={\r\n  DeviceID:Number;\r\n}\r\n\r\nexport type DataQuery ={\r\n  devicemaster:devicemaster[]\r\n}\r\n\r\nexport type devicepacket ={\r\n  ID:Number;\r\n}\r\n\r\n\r\nexport type DataQuery1 ={\r\n  devicepacket:devicepacket[]\r\n}\r\n\r\nexport type reportingstatus ={\r\n  ID:Number;\r\n}\r\nexport type DataQuery2 ={\r\n  reportingstatus:reportingstatus[]\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-fmdashboard',\r\n  templateUrl: './fmdashboard.component.html',\r\n  styleUrls: ['./fmdashboard.component.css']\r\n})\r\nexport class FmdashboardComponent implements OnInit {\r\n  emp:object =[];\r\n  public TotalDevice;\r\n  public ReportStatus\r\n  public activepacket;\r\n  constructor(private router: Router,private apollo: Apollo, private FmdashboardService : FmdashboardService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    \r\n    const source$ = this.apollo.query<DataQuery>({\r\n      query: gql`\r\n      {\r\n        devicemaster {\r\n          DeviceID\r\n        }\r\n      }`\r\n      \r\n    }).pipe(shareReplay(1))\r\n\r\nsource$.pipe(map(result => result.data && result.data.devicemaster)).subscribe((data) => this.TotalDevice = data.length);\r\n  \r\nconst source1$ = this.apollo.query<DataQuery1>({\r\n  query: gql`\r\n  {\r\n    devicepacket {\r\n      ID\r\n    }\r\n  }`\r\n  \r\n}).pipe(shareReplay(1))\r\n\r\nsource1$.pipe(map(result => result.data && result.data.devicepacket)).subscribe((data) => this.ReportStatus = data.length);\r\n\r\n\r\n\r\nconst source2$ = this.apollo.query<DataQuery2>({\r\n  query: gql`\r\n  {\r\n    reportingstatus {\r\n      ID\r\n    }\r\n  }`\r\n  \r\n}).pipe(shareReplay(1))\r\n\r\nsource2$.pipe(map(result => result.data && result.data.reportingstatus)).subscribe((data) => this.activepacket = data.length);\r\n\r\n\r\n\r\n}\r\n\r\n  dash(){\r\n    this.router.navigate(['dashboard']);\r\n  }\r\n  menu(){\r\n    this.router.navigate(['Firmware']);\r\n  }\r\n}\r\n","<div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n        <div class=\"col-12\">\r\n            <p class=\"tyt\"><span (click) =\"menu();\">Menu</span> > <span>Fireware Manager</span> > <span (click)=\"dash();\">Dashboard</span> > <span>Customer Ashok Leyland</span></p>\r\n            <mat-divider></mat-divider>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"container-fluid mainpg\">\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-6 col-lg-4\" >\r\n            <mat-card class=\"imgs\" >\r\n                <!--<button mat-raised-button class=\"btn\" dis color=\"primary\">Total Number Of Devices</button>-->\r\n                <p class=\"btn\">Total Number Of Devices</p>\r\n                  <div class=\"gray\">\r\n                   <h3>{{this.TotalDevice}}</h3>\r\n                   <p>Devices Count</p>\r\n                     \r\n                  </div>\r\n\r\n                  <div class=\"container-fluid \">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-6 col-sm-6 col-lg-6 cleft\">\r\n                          \r\n                                <h3>116</h3>\r\n                                <p>TAP66</p>\r\n                          \r\n                        </div>\r\n                        <div class=\"col-xs-6 col-sm-6 col-lg-6\">\r\n                            <div class=\"cright\">\r\n                                <h3>66899</h3>\r\n                                <p>TAP76</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div> \r\n            </mat-card>\r\n             \r\n        </div>\r\n        <div class=\"col-sm-6 col-lg-4\" >\r\n            <mat-card class=\"imgs\" >\r\n             \r\n                <p class=\"btn\">Reporting Status</p>\r\n                  <div class=\"gray\">\r\n                   <h3>{{this.ReportStatus}}</h3>\r\n                   <p>Devices Count</p>\r\n                     \r\n                  </div>\r\n                  <div class=\"container-fluid \">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-6 col-sm-6 col-lg-6 cleft\">\r\n                          \r\n                                <h3>116</h3>\r\n                                <p>TAP66</p>\r\n                          \r\n                        </div>\r\n                        <div class=\"col-xs-6 col-sm-6 col-lg-6\">\r\n                            <div class=\"cright\">\r\n                                <h3>66899</h3>\r\n                                <p>TAP76</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div> \r\n            </mat-card>\r\n             \r\n        </div>\r\n        <div class=\"col-sm-6 col-lg-4\" >\r\n            <mat-card class=\"imgs\" >\r\n             \r\n                <p class=\"btn\">Active Packet Status</p>\r\n                  <div class=\"gray\">\r\n                   <h3>{{this.activepacket}}</h3>\r\n                   <p>Devices Count</p>\r\n\r\n                  </div>\r\n\r\n                  <div class=\"container-fluid \">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-6 col-sm-6 col-lg-6 cleft\">\r\n                          \r\n                                <h3>116</h3>\r\n                                <p>TAP66</p>\r\n                          \r\n                        </div>\r\n                        <div class=\"col-xs-6 col-sm-6 col-lg-6\">\r\n                            <div class=\"cright\">\r\n                                <h3>66899</h3>\r\n                                <p>TAP76</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div> \r\n            </mat-card>\r\n             \r\n        </div>\r\n\r\n        <div class=\"col-sm-6 col-lg-4\" >\r\n            <mat-card class=\"imgs\" >\r\n              \r\n                <p class=\"btn\">Invalid Packet Status</p>\r\n                  <div class=\"gray\">\r\n                   <h3>66015</h3>\r\n                   <p>Devices Count</p>\r\n                     \r\n                  </div>\r\n\r\n                  <div class=\"container-fluid \">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-6 col-sm-6 col-lg-6 cleft\">\r\n                          \r\n                                <h3>116</h3>\r\n                                <p>TAP66</p>\r\n                          \r\n                        </div>\r\n                        <div class=\"col-xs-6 col-sm-6 col-lg-6\">\r\n                            <div class=\"cright\">\r\n                                <h3>66899</h3>\r\n                                <p>TAP76</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div> \r\n            </mat-card>\r\n             \r\n        </div> \r\n\r\n        <div class=\"col-sm-6 col-lg-4\" >\r\n            <mat-card class=\"imgs\" >\r\n              \r\n                <p class=\"btn\">48 Hrs > NRD > 24 Hrs</p>\r\n                  <div class=\"gray\">\r\n                   <h3>66015</h3>\r\n                   <p>Devices Count</p>\r\n                     \r\n                  </div>\r\n\r\n                  <div class=\"container-fluid \">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-6 col-sm-6 col-lg-6 cleft\">\r\n                          \r\n                                <h3>116</h3>\r\n                                <p>TAP66</p>\r\n                          \r\n                        </div>\r\n                        <div class=\"col-xs-6 col-sm-6 col-lg-6\">\r\n                            <div class=\"cright\">\r\n                                <h3>66899</h3>\r\n                                <p>TAP76</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div> \r\n            </mat-card>\r\n             \r\n        </div>\r\n        <div class=\"col-sm-6 col-lg-4\" >\r\n            <mat-card class=\"imgs\" >\r\n             \r\n                <p class=\"btn\">NRD > 48 Hrs</p>\r\n                  <div class=\"gray\">\r\n                   <h3>66015</h3>\r\n                   <p>Devices Count</p>\r\n                     \r\n                  </div>\r\n\r\n                  <div class=\"container-fluid \">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-6 col-sm-6 col-lg-6 cleft\">\r\n                          \r\n                                <h3>116</h3>\r\n                                <p>TAP66</p>\r\n                          \r\n                        </div>\r\n                        <div class=\"col-xs-6 col-sm-6 col-lg-6\">\r\n                            <div class=\"cright\">\r\n                                <h3>66899</h3>\r\n                                <p>TAP76</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div> \r\n            </mat-card>\r\n             \r\n        </div>\r\n\r\n      \r\n        \r\n    </div>\r\n</div>","\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient,HttpHeaders } from '@angular/common/http'\r\nimport { Router } from '@angular/router'\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FmdashboardService {\r\n  constructor(private http: HttpClient,\r\n    private _router: Router) { }\r\n\r\n \r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {APOLLO_OPTIONS} from 'apollo-angular';\r\nimport {ApolloClientOptions, InMemoryCache} from '@apollo/client/core';\r\nimport {HttpLink} from 'apollo-angular/http';\r\n\r\nconst uri = 'http://localhost:4080/graphql'; // <-- add the URL of the GraphQL server here\r\nexport function createApollo(httpLink: HttpLink): ApolloClientOptions<any> {\r\n  return {\r\n    link: httpLink.create({uri}),\r\n    cache: new InMemoryCache(),\r\n  };\r\n}\r\n\r\n@NgModule({\r\n  providers: [\r\n    {\r\n      provide: APOLLO_OPTIONS,\r\n      useFactory: createApollo,\r\n      deps: [HttpLink],\r\n    },\r\n  ],\r\n})\r\nexport class GraphQLModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators, NgForm } from '@angular/forms';\r\nimport { AuthenticationService } from '../services/authentication.service';\r\nimport { first } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  emailId\r\n  password\r\n  constructor(private router: Router,private _auth: AuthenticationService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  login(accountForm: NgForm)\r\n  {\r\n   const usersVal = {\r\n     email: this.emailId,\r\n     password: this.password\r\n   }\r\n    if(accountForm.valid)\r\n    {\r\n      //this.router.navigate(['customerselection']);\r\n      //console.log(user)\r\n      this._auth.loginUser(usersVal).pipe(first())\r\n      .subscribe(\r\n        res => {\r\n          localStorage.setItem('token', res.access_token)\r\n          this.router.navigate(['customerselection']);\r\n        },\r\n        err => console.log(err)\r\n      ) \r\n\r\n      localStorage.setItem('mail',this.emailId);\r\n     \r\n    \r\n      \r\n    }\r\n    else\r\n    {\r\n      return;\r\n    }\r\n\r\n  }\r\n}\r\n","\r\n  \r\n  <mat-card >\r\n    <div class=\"signin\">\r\n       <p> <b> SIGN IN </b></p>\r\n       <hr style=\"border-color:#979393; opacity: 0.2;\">\r\n    </div>\r\n    <form #accountForm=\"ngForm\" >\r\n         <div class=\"login\">\r\n            <mat-form-field class=\"full-width-field\" appearance=\"outline\">\r\n               <mat-label > Email ID</mat-label>\r\n               <input matInput type=\"email\" name=\"emailId\" pattern=\"[a-zA-Z0-9.-_]{1,}@[a-zA-Z.-]{2,}[.]{1}[a-zA-Z]{2,}\"  placeholder=\"Email ID\" ngModel  [(ngModel)]=\"emailId\" required>\r\n            </mat-form-field>\r\n         </div>\r\n         <div class=\"Password\">\r\n            <mat-form-field class=\"full-width-field\" appearance=\"outline\">\r\n               <mat-label > Password</mat-label>\r\n               <input matInput name=\"password\" type=\"password\" placeholder=\"Password\" ngModel  [(ngModel)]=\"password\" required>\r\n            \r\n            </mat-form-field>\r\n         </div>\r\n         \r\n         <div class=\"forgotpassword\">\r\n            <a  class=\"forgotpassword\"> <b>Forgot password?  </b></a>\r\n         </div>\r\n         <div class=\"button-signin\">\r\n            <button mat-raised-button (click)=\"login(accountForm)\"> SIGN IN</button>\r\n         </div>\r\n\r\n   </form>\r\n </mat-card>","export interface SingleCFirmwareUpload{\r\n\r\n    Name: string;\r\n    ServerIP: string;\r\n    UserName : string;\r\n    FilePath : string;\r\n    FileSize: string;\r\n    Password: string;\r\n    ReleaseNote: string;\r\n    firmwareType: string;\r\n    filename: string;\r\n    IsFirmwareC: boolean;\r\n    Port: number;\r\n}\r\n\r\nexport interface EditFirmwareFileSize{\r\n    versionName :string;\r\n    fileSize :string;\r\n}\r\n\r\nexport interface UploadJavaFirmware{\r\n\r\n    Name: string;\r\n    ServerIP: string;\r\n    UserName : string;\r\n    FilePath : string;\r\n    FileSize: string;\r\n    Password: string;\r\n    ReleaseNote: string;\r\n    firmwareType: string;\r\n    filename: string;\r\n    IsFirmwareC: boolean;\r\n    Port: number;\r\n}\r\n\r\n\r\nexport interface UploadIotFirmware{\r\n    versionName: string;\r\n    fileName: string;\r\n    Type: string;\r\n    \r\n}\r\n\r\nexport interface UpgradeFirmwareCombination{\r\n    javaV: string;\r\n    CV: string;\r\n}\r\n\r\nexport interface OutboundCdgMultiple{\r\n    \r\n   invoice: string;\r\n   device: string;\r\n   dispatch: string;\r\n   from: string;\r\n   to: string;\r\n}\r\n\r\nexport class Firmware {\r\n    name: string[];\r\n    \r\n    constructor() {\r\n        this.name = ['TAP66', 'TAP76', 'TAP66_2BOX', 'TAP76C', 'TAP76D', 'TAP86',\r\n    'TAP76A', 'UNKNOWN', 'TAP66A', 'TAPI17C'];\r\n    }\r\n}\r\n\r\n","import { Component,Inject, OnInit, AfterContentInit, AfterViewInit , AfterContentChecked} from '@angular/core';\r\nimport {ViewChild} from '@angular/core';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {MatSort , Sort} from '@angular/material/sort'; \r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\nimport { NgForm } from '@angular/forms';\r\nimport {Apollo , QueryRef} from 'apollo-angular';\r\nimport gql from \"graphql-tag\";\r\nimport { map, shareReplay } from 'rxjs/operators';\r\nimport { from, Observable, of } from 'rxjs'\r\nimport { error } from 'selenium-webdriver';\r\nimport { stringify } from '@angular/compiler/src/util';\r\nimport {MatSnackBar} from '@angular/material/snack-bar';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport {UpgradecommandService} from './service/upgradecommand.service'\r\nimport { MatTableExporterDirective } from 'mat-table-exporter';\r\nimport * as XLSX from 'xlsx';\r\n\r\nexport type otherotapcommand ={\r\n  DeviceID:Number;\r\n  DeviceType:String;\r\n  Customer:String;\r\n  NetworkProvider:String;\r\n  MobileNo:Number;\r\n  Model:String;\r\n  VehicleTypeName:String;\r\n  CurrentCVersion:String;\r\n  CurrentJavaVersion:String;\r\n  Ignition:String;\r\n}\r\n\r\n\r\nexport type DataQuery ={\r\n  otherotapcommand:otherotapcommand[]\r\n}\r\n\r\n\r\nexport type OtapCommand = {\r\n  DeviceID:String;\r\n  PacketID:Number;\r\n  Name:String;\r\n  Message:String\r\n}\r\nexport type DataQuery1 ={\r\n  OtapCommand:OtapCommand[]\r\n}\r\n\r\nconst UPVOTE_POST = gql`\r\n\r\nmutation addotapcommand($PacketID:Int! ,$DeviceType: String!, $CommandName: String!,$MessageFormat: String!) {\r\n  addotapcommand (PacketID: $PacketID,DeviceType: $DeviceType,CommandName: $CommandName,MessageFormat: $MessageFormat ){\r\n    PacketID\r\n    DeviceType\r\n    CommandName\r\n    MessageFormat\r\n  }\r\n}\r\n`;\r\n\r\n\r\n@Component({\r\n  selector: 'app-other-otap-command',\r\n  templateUrl: './other-otap-command.component.html',\r\n  styleUrls: ['./other-otap-command.component.css']\r\n})\r\nexport class OtherOTAPCommandComponent implements OnInit , AfterViewInit , AfterContentChecked ,AfterContentInit {\r\n\r\n  public file : File;\r\n  fileToUpload: File;\r\n  id = 0;\r\n  tabIndex = 0;\r\n  loadingFlag = true;\r\n  temp = null\r\n  messages:object =[];\r\n  emp1:object =[];\r\n  arrayBuffer:any;\r\n  filelist: any;\r\n  deviceArr = [];\r\n  entries: object =[];\r\n  loadingFlag1 = true;\r\n  //displayedColumns: string[] = ['select','id','name','cn','np','mn1','mn2','ssd','sed','vtn','model','ccv','cjv'];\r\n  displayedColumns: string[]=[\"select\",\"DeviceID\",\"DeviceType\",\"Customer\",\"NetworkProvider\",\"MobileNo\",\"Model\",\"VehicleTypeName\",\"CurrentCVersion\",\"CurrentJavaVersion\",\"Ignition\"]\r\n  dataSource : MatTableDataSource<any>\r\n  dataSource1 : MatTableDataSource<any>\r\n  selection = new SelectionModel(false, []);\r\n  deviceType\r\n\r\n\r\n  public device;\r\n  public messageFormat;\r\n  public messageName;\r\n  public packetId;\r\n\r\n\r\n\r\n  //@ViewChild(MatPaginator) paginator: MatPaginator;\r\n  //@ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatTableExporterDirective, { static: false }) exporter: MatTableExporterDirective;\r\n\r\n \r\n  ngAfterViewInit() {\r\n  //  this.dataSource.paginator = this.paginator \r\n    }\r\n  ngAfterContentInit(){\r\n \r\n  }\r\n\r\n    constructor(private route: ActivatedRoute, private UpgradecommandService: UpgradecommandService, private _snackBar: MatSnackBar ,private router: Router,public dialog: MatDialog,private apollo: Apollo) { }\r\n  \r\n    ngOnInit(): void {\r\n      this.route.params.subscribe(params => {\r\n        this.deviceType = params['device'];\r\n      \r\n        this.OnDataLoad(this.deviceType)\r\n      });\r\n\r\n      // this.UpgradecommandService.GetIotDeviceOutBound().subscribe(data => {\r\n      //   console.log(data)\r\n      // })\r\n    const source1$ = this.apollo.query<DataQuery1>({\r\n      query: gql`\r\n      {\r\n        OtapCommand{\r\n          DeviceType\r\n          CommandName\r\n          PacketID\r\n          MessageFormat\r\n        }\r\n      }`\r\n      \r\n    }).pipe(shareReplay(1))\r\n\r\nsource1$.pipe(map(result => result.data && result.data.OtapCommand)).subscribe((data) =>   \r\n this.messages = data\r\n  );\r\n\r\n}\r\n\r\n\r\n    removeFunction(){\r\n      const filterVal = \"TAP66\"\r\n      this.dataSource.filter = filterVal.trim().toLocaleLowerCase() \r\n     \r\n    }\r\n\r\n    public OnDataLoad  = (devicetypes) =>{\r\n      \r\n  this.apollo.query({\r\n    query: gql`\r\n    query otapcommand($DeviceType:String!){\r\n      otapcommand(DeviceType: $DeviceType){\r\n        DeviceID\r\n        DeviceType\r\n        Customer\r\n        NetworkProvider\r\n        Model\r\n        MobileNo\r\n        VehicleTypeName\r\n        Model\r\n        CurrentCVersion\r\n        CurrentJavaVersion\r\n        Ignition\r\n      }\r\n    }\r\n  `,\r\n  variables:{\r\n    DeviceType: this.deviceType\r\n  }\r\n  }).subscribe(result => {\r\n   \r\n    this.dataSource = new MatTableDataSource(result.data['otapcommand'])\r\n   this.dataSource ? this.loadingFlag = false : this.loadingFlag = true;\r\n        this.temp = this.dataSource.data.length;\r\n  })\r\n\r\n    }\r\n    public getCategory = (id) => {\r\n\r\n      this.apollo.query({\r\n        query: gql`\r\n        query otapcommand($DeviceID:[String]){\r\n          otapcommand(DeviceID: $DeviceID){\r\n            DeviceID,\r\n            DeviceID\r\n            DeviceType\r\n            Customer\r\n            NetworkProvider\r\n            MobileNo\r\n            Model\r\n            VehicleTypeName\r\n            CurrentCVersion\r\n            CurrentJavaVersion\r\n            Ignition\r\n          }\r\n        }  \r\n      `,\r\n      variables:{\r\n        DeviceID: id\r\n      }\r\n      }).subscribe(result => {\r\n        this.dataSource1 = new MatTableDataSource(result.data['otapcommand'])\r\n        this.dataSource1  ? this.loadingFlag1 = false : this.loadingFlag1 = true;\r\n        // this.emp1 = result.data['otapcommand']\r\n      })\r\n    }\r\n  \r\n    private paginator: MatPaginator;\r\n    private sort: MatSort;\r\n  \r\n   \r\n    @ViewChild(MatSort) set matSort(ms: MatSort) {\r\n      this.sort = ms;\r\n      this.setDataSourceAttributes();\r\n    }\r\n  \r\n    @ViewChild(MatPaginator) set matPaginator(mp: MatPaginator) {\r\n      this.paginator = mp;\r\n      this.setDataSourceAttributes();\r\n    }\r\n  \r\n    setDataSourceAttributes() {\r\n      if(this.loadingFlag == false){\r\n     // this.dataSource.paginator = this.paginator \r\n        this.dataSource.sort = this.sort;\r\n      }\r\n    }\r\n\r\n    applyFilter(event: Event) {\r\n      const filterValue = (event.target as HTMLInputElement).value;\r\n      this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    }\r\n \r\n    applyFilter1(event: Event) {\r\n      const filterValue = (event.target as HTMLInputElement).value;\r\n      this.dataSource1.filter = filterValue.trim().toLowerCase();\r\n    }\r\n    ngAfterContentChecked()\t{\r\n      if(this.loadingFlag == false){\r\n      setTimeout(() => \r\n      this.dataSource.paginator = this.paginator);\r\n      }\r\n    }\r\n  \r\n  \r\n    changeTab(event) {\r\n     \r\n      this.tabIndex = event.index;\r\n    }\r\n\r\n    postMethod(files: FileList) {\r\n      this.fileToUpload = files.item(0);\r\n     \r\n      if(this.fileToUpload != null){\r\n        alert(\"FIle Successfully Uploaded\")\r\n      }\r\n      }\r\n      dash(){\r\n        this.router.navigate(['Firmware']);\r\n        // const filterVal = \"n20\"\r\n        // this.dataSource.filter = filterVal.trim().toLocaleLowerCase() \r\n       \r\n      }\r\n\r\n      private isAllSelected() {\r\n        const numSelected = this.selection.selected.length;\r\n        const numRows = this.dataSource.data.length;\r\n        return numSelected === numRows;\r\n      }\r\n\r\n      toggleRow(row: any, index: number) {\r\n        this.selection.toggle(row);\r\n        this.exporter.toggleRow(index);\r\n        \r\n        for (const [key, value] of Object.entries(row)) {\r\n          if(key == \"DeviceID\"){\r\n            this.device = value\r\n          \r\n           \r\n          }\r\n        }\r\n      }\r\n\r\n\r\n      addfile(files: FileList) {\r\n        this.file = files.item(0);\r\n      \r\n    let fileReader = new FileReader();    \r\n    fileReader.readAsArrayBuffer(this.file);     \r\n    fileReader.onload = (e) => {    \r\n        this.arrayBuffer = fileReader.result;    \r\n        var data = new Uint8Array(this.arrayBuffer);    \r\n        var arr = new Array();    \r\n        for(var i = 0; i != data.length; ++i) arr[i] = String.fromCharCode(data[i]);    \r\n        var bstr = arr.join(\"\");    \r\n        var workbook = XLSX.read(bstr, {type:\"binary\"});    \r\n        var first_sheet_name = workbook.SheetNames[0];    \r\n        var worksheet = workbook.Sheets[first_sheet_name];    \r\n        this.filelist = XLSX.utils.sheet_to_json(worksheet,{raw:true});    \r\n        this.parseFile(this.filelist);\r\n    }    \r\n  }\r\n\r\n  parseFile(fileData) {\r\n    fileData.map(data=> {\r\n     \r\n      this.deviceArr.push(data['Device ID'])\r\n    \r\n    })\r\n\r\n    this.getCategory(this.deviceArr)\r\n  }\r\n      \r\n      /** The label for the checkbox on the passed row */\r\n      checkboxLabel(row?: any): string {\r\n        if (!row) {\r\n         \r\n          return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\r\n          \r\n        }\r\n        return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\r\n      }\r\n      \r\n\r\n      listed(version){\r\n       \r\n        for (const [key, value] of Object.entries(version)) {\r\n\r\n          if(key == \"MessageFormat\"){\r\n            this.messageFormat = value\r\n           \r\n          //   let jsonObject = JSON.parse(this.messageFormat);\r\n          //   console.log(jsonObject)\r\n          //   for (let country of Object.keys(jsonObject)) {\r\n          //     var capital = jsonObject[country];\r\n              \r\n          // }\r\n          \r\n          // for (const [country, capital] of Object.entries(jsonObject))\r\n          //     console.log(country);\r\n          }\r\n          if(key == \"CommandName\"){\r\n            this.messageName = value\r\n          }\r\n          if(key == \"PacketID\"){\r\n            this.packetId = value\r\n          }\r\n\r\n        }\r\n      }\r\n\r\n      PostData(){\r\n\r\n         if(this.device == undefined || this.messageName == undefined)\r\n        {\r\n          this._snackBar.open(\"Select Command and CheckBox To Upgrade Command\",\"\",{duration: 5000});\r\n        }\r\n\r\n        else{\r\n          const dialogRef = this.dialog.open(flashFirmware, {\r\n            width: '400px',\r\n            data: {message:this.messageFormat,messagename: this.messageName ,Device: this.device,packetId: this.packetId,deviceType:this.deviceType}\r\n          });\r\n      \r\n         dialogRef.afterClosed().subscribe(result => {\r\n            console.log('The dialog was closed');\r\n   \r\n          });\r\n        }\r\n    \r\n        // if(this.device == undefined || this.messageName == undefined)\r\n        // {\r\n        //   this._snackBar.open(\"Select Command and CheckBox To Upgrade Command\",\"\",{duration: 5000});\r\n        // }\r\n        // if(this.device != undefined && this.messageName != undefined)\r\n        // {\r\n        //   let objData = Object.assign({update: [{Device: this.device , DeviceID: 351431 , MessageFormat: this.messageFormat , FirmwareUpgradeEnum: 17 , IOTDevice: \"\" , MessageName: this.messageName , AppInstanceID: null , DeviceGateway: \"TDMG\" , UserID: 2739}]});\r\n        //   console.log(objData)\r\n        //   this.UpgradecommandService.PublishedVersion(objData).pipe().subscribe(data=>{\r\n        //   console.log(data)\r\n        //   this._snackBar.open(this.device + \" Updated Successfully\",\"\",{duration: 5000});\r\n        //   },\r\n        //   (error) => this._snackBar.open(\"DeviceID Mismatch\",\"\",{duration: 5000})\r\n        //   )\r\n        // }\r\n      }\r\n      \r\n\r\n      AddCommand(): void {\r\n        const dialogRef = this.dialog.open(addCommand, {\r\n          width: '400px',\r\n          data: { }\r\n        });\r\n    \r\n       dialogRef.afterClosed().subscribe(result => {\r\n          console.log('The dialog was closed');\r\n \r\n        });\r\n\r\n      }\r\n  }\r\n\r\n\r\n\r\n  @Component({\r\n    selector: 'addCommand',\r\n    templateUrl: 'addCommand.html',\r\n  })\r\n  export class addCommand {\r\n    public deviceId;\r\n    public packetId;\r\n    public name;\r\n    public message;\r\n  \r\n    constructor(private apollo: Apollo,private _snackBar: MatSnackBar ,\r\n      public dialogRef: MatDialogRef<addCommand>,\r\n      @Inject(MAT_DIALOG_DATA) public data: []) {}\r\n  \r\n    onNoClick(): void {\r\n      this.dialogRef.close();\r\n    }\r\n\r\n    AddCommand(addCommandForm: NgForm){\r\n      if(addCommandForm.valid){\r\n       \r\n\r\n        this.apollo.mutate({\r\n          mutation: UPVOTE_POST,\r\n          variables: \r\n          {\r\n            PacketID:this.packetId,\r\n            DeviceType:this.deviceId,\r\n            CommandName: this.name,\r\n            MessageFormat: this.message\r\n          }\r\n        }).subscribe(({data }) => {\r\n          this._snackBar.open(\"Value Uploaded Successfully\",\"\",{duration: 2000});\r\n        },\r\n        (error) => this._snackBar.open(\"DeviceID Not Found\",\"\",{duration: 2000})\r\n        )\r\n        \r\n\r\n   \r\n        \r\n      }\r\n      else{\r\n        return\r\n      }\r\n\r\n    }\r\n  \r\n  }\r\n  \r\n\r\n\r\n  \r\n  @Component({\r\n    selector: 'flashFirmware',\r\n    templateUrl: 'FlashFirmware.html',\r\n  })\r\n  export class flashFirmware {\r\n    ClusterArrays : any = [];\r\n  public json;\r\n  public messageName\r\n  public device\r\n  public packetId\r\n  public deviceType\r\n    constructor(private apollo: Apollo,private route: ActivatedRoute, private _snackBar: MatSnackBar ,private UpgradecommandService: UpgradecommandService,\r\n      public dialogRef: MatDialogRef<addCommand>,\r\n      @Inject(MAT_DIALOG_DATA) public data: {message: string,messagename: string,packetId: string,Device: string,deviceType: string }) {\r\n        this.json = data.message\r\n        this.messageName = data.messagename\r\n       this.device = data.Device\r\n       this.packetId = data.packetId\r\n       this.deviceType = data.deviceType\r\n        let jsonObject = JSON.parse(this.json);\r\n       \r\n        for (let country of Object.keys(jsonObject)) {\r\n          var capital = jsonObject[country];\r\n          \r\n      }\r\n      \r\n      for (const [country, capital] of Object.entries(jsonObject)){\r\n        \r\n        this.ClusterArrays.push(country)\r\n        \r\n      }\r\n         \r\n      }\r\n      \r\n    \r\n\r\n    onNoClick(): void {\r\n      this.dialogRef.close();\r\n    }\r\n\r\n    AddCommand(addCommandForm: NgForm){\r\n      if(this.deviceType != \"SNM476\"){\r\n     if(addCommandForm.valid){\r\n        let oops = JSON.stringify(addCommandForm.value)\r\n       \r\n      //  console.log(oops) \"NJ042612\"\r\n        let objData = Object.assign({update: [{Device: \"NG356545\", DeviceID: 351431 , MessageFormat: oops, FirmwareUpgradeEnum: this.packetId , IOTDevice: \"\" , MessageName: this.messageName , AppInstanceID: null , DeviceGateway: \"TDMG\" , UserID: 2739}]});\r\n       \r\n        this.UpgradecommandService.PublishedVersion(objData).pipe().subscribe(data=>{\r\n           \r\n            this._snackBar.open(this.device + \" Updated Successfully\",\"\",{duration: 5000});\r\n            },\r\n            (error) => this._snackBar.open(\"DeviceID Mismatch\",\"\",{duration: 5000})\r\n            )\r\n      }\r\n      }\r\n      if(this.deviceType == \"SNM476\"){\r\n        if(addCommandForm.valid){\r\n        var str = '';\r\n        for (const [country, capital] of Object.entries(addCommandForm.value)){\r\n          str += capital+\",\";  \r\n         }\r\n        let device = \"SNM00030\"\r\n\r\n         let objData = Object.assign({\"state\": {\"desired\": {[this.messageName]:str}}})\r\n\r\n     \r\n         this.UpgradecommandService.IotDeviceOutBound(objData,device).pipe().subscribe(data => {\r\n          \r\n               this._snackBar.open(this.device + \" Updated Successfully\",\"\",{duration: 5000});\r\n               },\r\n               (error) => this._snackBar.open(\"DeviceID Mismatch\",\"\",{duration: 5000})\r\n               )\r\n         \r\n        //  let oops = JSON.stringify(objData);\r\n        //  let objData1 = Object.assign({DeviceType:this.deviceType, update: [{Device: \"SNM00032\", DeviceID: 351431 , MessageFormat: oops, FirmwareUpgradeEnum: this.packetId , IOTDevice: \"\" , MessageName: this.messageName, UserID: 2739}]});\r\n        //  console.log(objData1)\r\n        //  this.UpgradecommandService.PublishedVersion(objData1).pipe().subscribe(data=>{\r\n        //      console.log(data)\r\n        //      this._snackBar.open(this.device + \" Updated Successfully\",\"\",{duration: 5000});\r\n        //      },\r\n        //      (error) => this._snackBar.open(\"DeviceID Mismatch\",\"\",{duration: 5000})\r\n        //      )\r\n      }\r\n    }\r\n     \r\n    }\r\n  \r\n  }\r\n  \r\n","<div class=\"container-fluid\">\r\n  <div class=\"row\">\r\n      <div class=\"col-12\">\r\n          <p class=\"tyt\"><span>Menu</span> > <span (click)=\"dash()\">Fireware Manager</span> > <span>Other OTAP Command</span> > <span>Customer Ashok Leyland</span></p>\r\n          <mat-divider></mat-divider>\r\n      </div>\r\n  </div>\r\n</div>\r\n<p class=\"tyts\">Firmware Upgrade Command</p>\r\n<mat-tab-group mat-align-tabs=\"end\" selectedIndex=\"{{this.id}}\" (selectedTabChange)=\"changeTab($event)\">\r\n  <mat-tab label=\"Single Device Search\"> \r\n      <mat-card>\r\n          <div class=\"container-fluid\">\r\n              <div class=\"row\">\r\n                  <div class=\"col-sm-8 cleft\">\r\n                      <p>Single device search option is to handle upgradation of the searched device</p>\r\n                      <div class=\"example-container\" >\r\n                      <mat-form-field style=\"width: 100%;\" appearance=\"outline\">\r\n                         \r\n                          <input style=\"text-indent: 2em;\" matInput (keyup)=\"applyFilter($event)\" placeholder=\"Search Device\" #input>  \r\n                           <mat-icon style=\"color: gray;\" matPrefix>search</mat-icon>\r\n                         \r\n                      </mat-form-field>\r\n                     \r\n                      <mat-form-field style=\"width: 65%;\" appearance=\"standard\">\r\n                          <mat-label>SELECT COMMAND</mat-label>\r\n                          <mat-select name=\"javaV\" placeholder=\"JAVA VERSION\">\r\n                            \r\n                            <div *ngFor=\"let message of messages\">\r\n                              <mat-option *ngIf=\"message.DeviceType == deviceType\" (click)=\"listed(message)\" [value]=\"message.CommandName\">\r\n                                {{message.CommandName}}\r\n                              </mat-option>\r\n                            </div>\r\n                          \r\n                          </mat-select>\r\n                        </mat-form-field>\r\n                        <button mat-raised-button class=\"btn2\" (click)=\"AddCommand()\">ADD COMMAND</button>\r\n                  </div>\r\n                  </div>\r\n                  <div class=\"col-sm-4\">\r\n                     \r\n\r\n                      <button mat-raised-button class=\"btn1\" (click)=\"PostData()\">REQUEST UPGRADE COMMAND</button>\r\n                        \r\n                  </div>\r\n              </div>\r\n          </div>        \r\n          \r\n\r\n      </mat-card>\r\n  </mat-tab>\r\n  <mat-tab label=\"Multiple Device Update\"> \r\n      <mat-card class=\"multi\">\r\n          <div *ngIf=\"tabIndex === 1\">\r\n              <div class=\"pack\">\r\n              <p>Multiple Device Update is to handle upgrades of multiple options under one go.</p>\r\n              <p>To upload the device list click the device upload button to upload an excel sheet.</p>\r\n              \r\n            </div>\r\n              <p class=\"back\">Note : The format for the upload is to list all device in one column with header title as <b>Device ID</b></p>\r\n              <button mat-raised-button (click)=\"fileInput.click()\" class=\"one\">\r\n                <mat-icon class=\"con1\">file_upload</mat-icon>\r\n                Device Upload\r\n            </button>\r\n            <input #fileInput  type=\"file\" name=\"files\"  accept=\".xlsx,.csv\" id=\"myfile\" (change)=\"addfile($event.target.files)\" style=\"display:none;\" />\r\n          </div>\r\n      </mat-card>    \r\n  </mat-tab>\r\n\r\n</mat-tab-group>\r\n\r\n<div *ngIf=\"tabIndex === 0\" >\r\n<div *ngIf=\"this.temp != null\">\r\n  <!-- <div *ngFor=\"let edu of emp1\">\r\n    {{edu.DeviceID}}\r\n  </div> -->\r\n  <button mat-raised-button (click)=\"exporter.exportTable('xlsx', {fileName: 'Other OTAP Command Report'})\" class=\"btns1\">DOWNLOAD <mat-icon style=\"padding: 0 10px; vertical-align: middle;\">cloud_download</mat-icon></button>\r\n  <table mat-table  matTableExporter [dataSource]=\"dataSource\" matSort  class=\"mat-elevation-z8\" #exporter=\"matTableExporter\">\r\n\r\n    <ng-container matColumnDef=\"select\">\r\n      <th mat-header-cell *matHeaderCellDef=\"let row; let i = index\" ><mat-checkbox (change)=\"$event ? toggleRow(row, i) : null\" color=\"primary\"></mat-checkbox></th>\r\n      <td mat-cell *matCellDef=\"let row; let i = index\">    <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\"\r\n        (change)=\"$event ? toggleRow(row, i) : null\"\r\n        [checked]=\"selection.isSelected(row)\"\r\n        [aria-label]=\"checkboxLabel(row)\"></mat-checkbox> </td>\r\n    </ng-container>\r\n    \r\n\r\n    \r\n      <ng-container matColumnDef=\"DeviceID\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\r\n    \r\n        <td mat-cell *matCellDef=\"let element\"><a style=\" text-decoration-line: underline;color: #005F9E;\">  {{element.DeviceID}} </a></td>\r\n\r\n      </ng-container>\r\n\r\n  \r\n      <ng-container matColumnDef=\"DeviceType\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> DEVICE<br>TYPE </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.DeviceType}} </td>\r\n      </ng-container>\r\n  \r\n      <ng-container matColumnDef=\"Customer\">\r\n        <th mat-header-cell *matHeaderCellDef > CUSTOMER<br>NAME </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.Customer}} </td>\r\n      </ng-container>\r\n    \r\n      <ng-container matColumnDef=\"NetworkProvider\">\r\n        <th mat-header-cell *matHeaderCellDef> NETWORK<br>PROVIDER </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.NetworkProvider}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"MobileNo\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> MOBILE NO. </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.MobileNo}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"Model\">\r\n        <th mat-header-cell *matHeaderCellDef> VEHICLE<br>TYPE NAME </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.Model}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"VehicleTypeName\">\r\n        <th mat-header-cell *matHeaderCellDef > MODEL </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.VehicleTypeName}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"CurrentCVersion\">\r\n        <th mat-header-cell *matHeaderCellDef> CURRENT <br>C VERSION</th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.CurrentCVersion}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"CurrentJavaVersion\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> CURRENT<br>JAVA VERSION </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.CurrentJavaVersion}} </td>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"Ignition\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> IGNITION </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.Ignition}} </td>\r\n      </ng-container>\r\n    \r\n \r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n    </table>\r\n  \r\n   \r\n      <mat-paginator style-paginator [showTotalPages]=\"4\" [length]=\"dataSource.data.length\"\r\n      [pageSize]=\"10\"></mat-paginator>\r\n     \r\n    </div>\r\n    <div *ngIf=\"this.temp == null\">\r\n      <h3 style=\"color: #666; text-align: center; font-weight: 500;\">Records Not found</h3>\r\n    </div>\r\n\r\n    \r\n</div>\r\n<div *ngIf=\"tabIndex === 1 && !loadingFlag1\" >\r\n\r\n<mat-card style=\"margin: 20px;\">\r\n  <div class=\"container-fluid\">\r\n      <div class=\"row\">\r\n          <div class=\"col-sm-8 cleft\">\r\n              <p>Single device search option is to handle upgradation of the searched device</p>\r\n              <div class=\"example-container\" >\r\n              <mat-form-field style=\"width: 100%;\" appearance=\"outline\">\r\n                 \r\n                  <input style=\"text-indent: 2em;\" matInput (keyup)=\"applyFilter1($event)\" placeholder=\"Search Device\" #input>  \r\n                   <mat-icon style=\"color: gray;\" matPrefix>search</mat-icon>\r\n                 \r\n              </mat-form-field>\r\n             \r\n              <mat-form-field style=\"width: 65%;\" appearance=\"standard\">\r\n                <mat-label>SELECT COMMAND</mat-label>\r\n                <mat-select name=\"javaV\" placeholder=\"JAVA VERSION\">\r\n                  \r\n                  <div *ngFor=\"let message of messages\">\r\n                    <mat-option *ngIf=\"message.DeviceType == deviceType\" (click)=\"listed(message)\" [value]=\"message.CommandName\">\r\n                      {{message.CommandName}}\r\n                    </mat-option>\r\n                  </div>\r\n                \r\n                </mat-select>\r\n              </mat-form-field>\r\n                <button mat-raised-button class=\"btn2\" (click)=\"AddCommand()\">ADD COMMAND</button>\r\n          </div>\r\n          </div>\r\n          <div class=\"col-sm-4\">\r\n             \r\n         \r\n              <button mat-raised-button class=\"btn1\" (click)=\"PostData()\">REQUEST UPGRADE COMMAND</button>\r\n                \r\n          </div>\r\n      </div>\r\n  </div>        \r\n  \r\n\r\n</mat-card>\r\n\r\n<table mat-table  matTableExporter [dataSource]=\"dataSource1\" matSort  class=\"mat-elevation-z8\" #exporter=\"matTableExporter\">\r\n\r\n  <ng-container matColumnDef=\"select\">\r\n    <th mat-header-cell *matHeaderCellDef=\"let row; let i = index\" ><mat-checkbox (change)=\"$event ? toggleRow(row, i) : null\" color=\"primary\"></mat-checkbox></th>\r\n    <td mat-cell *matCellDef=\"let row; let i = index\">    <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\"\r\n      (change)=\"$event ? toggleRow(row, i) : null\"\r\n      [checked]=\"selection.isSelected(row)\"\r\n      [aria-label]=\"checkboxLabel(row)\"></mat-checkbox> </td>\r\n  </ng-container>\r\n  \r\n\r\n  \r\n    <ng-container matColumnDef=\"DeviceID\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\r\n      <td mat-cell *matCellDef=\"let element\"><a style=\" text-decoration-line: underline;color: #005F9E;\">  {{element.DeviceID}} </a></td>\r\n    </ng-container>\r\n\r\n\r\n    <ng-container matColumnDef=\"DeviceType\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> DEVICE<br>TYPE </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.DeviceType}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"Customer\">\r\n      <th mat-header-cell *matHeaderCellDef > CUSTOMER<br>NAME </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.Customer}} </td>\r\n    </ng-container>\r\n  \r\n    <ng-container matColumnDef=\"NetworkProvider\">\r\n      <th mat-header-cell *matHeaderCellDef> NETWORK<br>PROVIDER </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.NetworkProvider}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"MobileNo\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> MOBILE NO. </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.MobileNo}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"Model\">\r\n      <th mat-header-cell *matHeaderCellDef> VEHICLE<br>TYPE NAME </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.Model}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"VehicleTypeName\">\r\n      <th mat-header-cell *matHeaderCellDef > MODEL </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.VehicleTypeName}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"CurrentCVersion\">\r\n      <th mat-header-cell *matHeaderCellDef> CURRENT <br>C VERSION</th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.CurrentCVersion}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"CurrentJavaVersion\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> CURRENT<br>JAVA VERSION </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.CurrentJavaVersion}} </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"Ignition\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> IGNITION </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.Ignition}} </td>\r\n\r\n     \r\n    </ng-container>\r\n   \r\n  \r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n   \r\n\r\n  </table>\r\n\r\n  \r\n \r\n\r\n\r\n</div>","\r\n<form #addCommandForm=\"ngForm\" style=\"text-align: center; margin: 20px;\" >\r\n<div *ngFor=\"let message of ClusterArrays\">\r\n    <mat-form-field appearance=\"outline\" style=\"width: 100%;\" >\r\n        <mat-label >{{message}}</mat-label>\r\n        <input matInput [name]=\"message\" ngModel  required>\r\n\r\n    </mat-form-field>\r\n</div>\r\n<button mat-raised-button color=\"primary\" (click)=\"AddCommand(addCommandForm)\" style=\" background-color: #005F9E !important\">\r\n    Submit\r\n</button>\r\n</form>","<form #addCommandForm=\"ngForm\" style=\"text-align: center; margin: 20px;\" >\r\n    \r\n        <mat-form-field appearance=\"outline\" style=\"width: 100%;\" >\r\n            <mat-label >Device Type</mat-label>\r\n            <input matInput name=\"deviceId\" type=\"text\" placeholder=\"Device Type\"  ngModel [(ngModel)]=\"deviceId\" required>\r\n\r\n        </mat-form-field>\r\n        \r\n        <mat-form-field appearance=\"outline\" style=\"width: 100%;\" >\r\n            <mat-label >Packet ID</mat-label>\r\n            <input matInput name=\"packetId\" type=\"number\" placeholder=\"Packet ID\" ngModel  [(ngModel)]=\"packetId\" required>\r\n\r\n        </mat-form-field>\r\n        \r\n        <mat-form-field appearance=\"outline\" style=\"width: 100%;\" >\r\n            <mat-label >Command Name</mat-label>\r\n            <input matInput name=\"name\" placeholder=\"Command Name\" ngModel  [(ngModel)]=\"name\" required>\r\n\r\n        </mat-form-field>\r\n        \r\n        <mat-form-field appearance=\"outline\" style=\"width: 100%;\" >\r\n            <mat-label >Message Format</mat-label>\r\n            <input matInput name=\"message\" placeholder=\"Message Format\" ngModel  [(ngModel)]=\"message\" required>\r\n\r\n        </mat-form-field>\r\n        <button mat-raised-button color=\"primary\" (click)=\"AddCommand(addCommandForm)\" style=\" background-color: #005F9E !important\">\r\n            Submit\r\n        </button>\r\n</form>","import { Injectable } from '@angular/core';\r\nimport { HttpClient,HttpHeaders } from '@angular/common/http'\r\nimport { Router } from '@angular/router'\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UpgradecommandService {\r\n\r\n  constructor(private http: HttpClient,\r\n    private _router: Router) { }\r\n\r\n  PublishedVersion(data) {\r\n    return this.http.post<object>(`${environment._publishVersion}`, data).pipe(map(user => {\r\n     \r\n      return user;\r\n  }));\r\n  }\r\n\r\n  IotDeviceOutBound(data,deviceID){\r\n    return this.http.put(`${environment._deviceOutbound}/iot-stg/1.0/shadow/46952541-3269-45fb-9f93-386bbe17372d-${deviceID}`, data).pipe(map(user => {\r\n      \r\n      return user;\r\n  }));\r\n  }\r\n\r\n  GetIotDeviceOutBound(){\r\n    let headers = new HttpHeaders({\r\n       '*' : 'Access-Control-Allow-Origin'\r\n    })\r\n\r\n    return this.http.get<any>(`${environment._getDevice}`,{ headers: headers }).pipe(map(user => {\r\n     \r\n      return user;\r\n  }));\r\n  }\r\n}\r\n","import { Component, OnInit, AfterContentInit, AfterViewInit , AfterContentChecked} from '@angular/core';\r\nimport {ViewChild} from '@angular/core';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {MatSort , Sort} from '@angular/material/sort'; \r\nimport { OutboundCdgMultiple} from '../model/model'\r\nimport { OutboundService } from './outbound.service';\r\nimport * as XLSX from 'xlsx';\r\nimport { FormBuilder, FormGroup, Validators, NgForm } from '@angular/forms';\r\nimport { from } from 'rxjs';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { MatTableExporterDirective } from 'mat-table-exporter';\r\n\r\n\r\n@Component({\r\n  selector: 'app-outbound-status',\r\n  templateUrl: './outbound-status.component.html',\r\n  styleUrls: ['./outbound-status.component.css']\r\n})\r\nexport class OutboundStatusComponent implements OnInit , AfterViewInit , AfterContentChecked ,AfterContentInit {\r\n\r\n \r\n  \r\n  Outbound:OutboundCdgMultiple;\r\n  public entries: object = [];\r\n  public entries1: object = [];\r\n  // public file : File;\r\n  fileToUpload: File;\r\n  id = 0;\r\n  tabIndex = 0;\r\n  temp = null\r\n  temp1 = null\r\n  listData: MatTableDataSource<any>\r\n  listData1: MatTableDataSource<any>\r\n  arrayBuffer:any;\r\n  file:File;\r\n  filelist: any;\r\n  deviceArr = [];\r\n  deviceJSON: any;\r\n  loadingFlag = true;\r\n  loadingFlag1 = true;\r\n  fileName= 'Outbound Status Report.xlsx'; \r\n  displayedColumns: string[]=[\"select\",\"_id\",\"DeviceId\",\"cn\",\"symbol\",\"weight\",\"mn2\",\"Message.FilePath\",\"Message.APN\",\"InsertUTC\",\"model\"]\r\n  displayedColumns1: string[]=[\"select\",\"_id\",\"DeviceId\",\"cn\",\"symbol\",\"weight\",\"mn2\",\"Message.FilePath\",\"Message.APN\",\"InsertUTC\",\"model\"]\r\n  selection = new SelectionModel(true, []);\r\n  @ViewChild(MatPaginator) paginators: MatPaginator;\r\n // @ViewChild(MatSort) sort: MatSort;\r\n @ViewChild(MatTableExporterDirective, { static: false }) exporter: MatTableExporterDirective;\r\n  \r\n  constructor(private route: ActivatedRoute, private outbound: OutboundService,private router:Router ) { }\r\n  \r\n    ngOnInit(): void {\r\n      \r\n        this.outbound.outbound().subscribe(\r\n          data => { \r\n            this.entries = data;          \r\n      function* entries(obj) {\r\n        for (let key of Object.keys(obj)) {\r\n          yield [key, obj[key]];\r\n        }\r\n     }\r\n\r\n     for (let [key1, value1] of entries(this.entries)) {\r\n     \r\n        if(key1 == 'result'){\r\n        \r\n          this.listData = new MatTableDataSource(value1)\r\n          this.listData ? this.loadingFlag = false : this.loadingFlag = true;\r\n         \r\n          this.temp = this.listData.data.length;\r\n        }\r\n\r\n      }\r\n      this.listData.sortingDataAccessor = (item, property) => {\r\n        switch(property) {\r\n          case 'Message.FilePath': return item.Message.FilePath;\r\n          case 'Message.APN' : return item.Message.APN;\r\n          default: return item[property];\r\n        }\r\n      };\r\n   //   this.listData.sort = this.sort;\r\n\r\n     // setTimeout(() => this.listData.paginator = this.paginator);\r\n\r\n   \r\n          },\r\n          err => console.log(err)\r\n        ) \r\n\r\n        \r\n      \r\n      \r\n      this.Outbound ={\r\n        invoice: '',\r\n        device: '',\r\n        dispatch: '',\r\n        from: '',\r\n        to: ''\r\n      }\r\n    }\r\n  \r\n  \r\n    private isAllSelected() {\r\n      const numSelected = this.selection.selected.length;\r\n      const numRows = this.listData.data.length;\r\n      return numSelected === numRows;\r\n    }\r\n  \r\n    toggleRow(row: any, index: number) {\r\n      this.selection.toggle(row);\r\n      this.exporter.toggleRow(index);\r\n    }\r\n  \r\n    /** The label for the checkbox on the passed row */\r\n    checkboxLabel(row?: any): string {\r\n      if (!row) {\r\n        return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\r\n      }\r\n      return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\r\n    }\r\n  \r\n  \r\n  \r\n  \r\n    changeTab(event) {\r\n     \r\n      this.tabIndex = event.index;\r\n     \r\n    }\r\n\r\n\r\n    public onClicking(accountForm: NgForm)\r\n    {\r\n     \r\n      if(accountForm.valid)\r\n      {\r\n       \r\n      }\r\n      else\r\n      {\r\n        return;\r\n      }\r\n  \r\n    }\r\n\r\n    private paginator: MatPaginator;\r\n    private sort: MatSort;\r\n    private paginator1: MatPaginator;\r\n    private sort1: MatSort;\r\n    searchKey:string;\r\n  \r\n  \r\n    @ViewChild(MatSort) set matSort(ms: MatSort) {\r\n      this.sort = ms;\r\n      this.sort1 = ms;\r\n      this.setDataSourceAttributes();\r\n    }\r\n  \r\n    @ViewChild(MatPaginator) set matPaginator(mp: MatPaginator) {\r\n      this.paginator = mp;\r\n      this.paginator1 = mp;\r\n      this.setDataSourceAttributes();\r\n    }\r\n\r\n\r\n    \r\n  \r\n    setDataSourceAttributes() {\r\n      if(this.loadingFlag == false){\r\n      this.listData.paginator = this.paginator \r\n      this.listData.sort = this.sort;\r\n    }\r\n\r\n    if(this.loadingFlag1 == false){\r\n     // this.listData1.paginator = this.paginator1 \r\n      this.listData1.sort = this.sort1;\r\n    }\r\n    }\r\n\r\n   \r\n      ngAfterContentInit(){\r\n       \r\n      }\r\n     \r\n\r\n      ngAfterViewInit() {\r\n         \r\n      }\r\n\r\n      ngAfterContentChecked()\t{\r\n        \r\n      }\r\n    \r\n    \r\n\r\npostMethod(files: FileList) {\r\n  this.fileToUpload = files.item(0);\r\n  if(this.fileToUpload != null){\r\n    alert(\"FIle Successfully Uploaded\")\r\n  }\r\n\r\n  }\r\n      \r\n    applyFilter() {\r\n    \r\n      this.listData.filter = this.searchKey.trim().toLowerCase();\r\n    }\r\n    addfile(files: FileList) {\r\n      this.file = files.item(0);\r\n       \r\n  let fileReader = new FileReader();    \r\n  fileReader.readAsArrayBuffer(this.file);     \r\n  fileReader.onload = (e) => {    \r\n      this.arrayBuffer = fileReader.result;    \r\n      var data = new Uint8Array(this.arrayBuffer);    \r\n      var arr = new Array();    \r\n      for(var i = 0; i != data.length; ++i) arr[i] = String.fromCharCode(data[i]);    \r\n      var bstr = arr.join(\"\");    \r\n      var workbook = XLSX.read(bstr, {type:\"binary\"});    \r\n      var first_sheet_name = workbook.SheetNames[0];    \r\n      var worksheet = workbook.Sheets[first_sheet_name];    \r\n      this.filelist = XLSX.utils.sheet_to_json(worksheet,{raw:true});    \r\n      this.parseFile(this.filelist);\r\n  }    \r\n}\r\nparseFile(fileData) {\r\n  fileData.map(data=> {\r\n   \r\n    this.deviceArr.push(data['Device ID'])\r\n   \r\n  })\r\n  this.deviceJSON = {\r\n    \"deviceList\": this.deviceArr\r\n  }\r\n  this.outbound.multipleDevice(this.deviceJSON).pipe().subscribe(data=> {\r\n\r\n    this.entries1 = data;          \r\n    function* entries1(obj) {\r\n      for (let key of Object.keys(obj)) {\r\n        yield [key, obj[key]];\r\n      }\r\n   }\r\n\r\n   for (let [key1, value1] of entries1(this.entries1)) {\r\n    \r\n      if(key1 == 'result'){\r\n       \r\n        this.listData1 = new MatTableDataSource(value1)\r\n        this.listData1 ? this.loadingFlag1 = false : this.loadingFlag1 = true;\r\n        setTimeout(() => this.listData1.paginator = this.paginator);\r\n        this.temp1 = this.listData1.data.length;\r\n       \r\n      }\r\n\r\n    }\r\n    \r\n  })\r\n}\r\n\r\n/** Selects all rows if they are not all selected; otherwise clear selection. */\r\nmasterToggle() {\r\n  this.isAllSelected() ?\r\n      this.selection.clear() :\r\n      this.listData.data.forEach(row => this.selection.select(row));\r\n     \r\n}\r\n\r\n  \r\n  \r\n  \r\n    updateCheckedList(element)\r\n    {\r\n      \r\n    }\r\n\r\n\r\n    dash(){\r\n      this.router.navigate(['Firmware']);\r\n    }\r\n  }\r\n  ","<div class=\"container-fluid\">\r\n  <div class=\"row\">\r\n      <div class=\"col-12\">\r\n          <p class=\"tyt\"><span>Menu</span> > <span (click)=\"dash()\">Fireware Manager</span> > <span>Outbound Status CDG</span> > <span>Customer Ashok Leyland</span></p>\r\n          <mat-divider></mat-divider>\r\n      </div>\r\n  </div>\r\n</div>\r\n<p class=\"tyts\">Outbound Status CDG</p>\r\n<mat-tab-group mat-align-tabs=\"end\" selectedIndex=\"{{this.id}}\" (selectedTabChange)=\"changeTab($event)\">\r\n  <mat-tab label=\"Single Device Search\"> \r\n      <mat-card>\r\n          <div class=\"container-fluid\">\r\n              <div class=\"row\">\r\n                  <div class=\"col-sm-8 cleft\">\r\n                      <p>Single device search option is used to searched device status</p>\r\n                      <div class=\"example-container\" >\r\n                      <mat-form-field style=\"width: 80%;\" appearance=\"outline\">\r\n                         \r\n                          <input style=\"text-indent: 2em;\" matInput [(ngModel)]=\"searchKey\" (keyup)=\"applyFilter()\" placeholder=\"Search Device\" #input>  \r\n                           <mat-icon style=\"color: gray;\" matPrefix>search</mat-icon>\r\n                         \r\n                      </mat-form-field>\r\n                      <button (click)=\"exporter.exportTable('xlsx', {fileName: 'Outbound Status Report'})\" mat-raised-button class=\"btn\">SUBMIT</button>\r\n                      \r\n                  </div>\r\n                  </div>\r\n                  <div class=\"col-sm-4\">\r\n                     \r\n                 \r\n                    <button (click)=\"exporter.exportTable('xlsx', {fileName: 'Outbound Status Report'})\" mat-raised-button class=\"btn1\">DATA DOWNLOAD</button>\r\n                      \r\n                        \r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            \r\n\r\n        </mat-card>\r\n    </mat-tab>\r\n    <mat-tab label=\"Multiple Device Update\"> \r\n        <mat-card class=\"multi\">\r\n            <div *ngIf=\"tabIndex === 1\">\r\n              \r\n             \r\n            <div class=\"pack\">\r\n              <p>Multiple Device Update is to handle upgrades of multiple options under one go.</p>\r\n              <p>To upload the device list click the device upload button to upload an excel sheet.</p>\r\n              \r\n            </div>\r\n              <p class=\"back\">Note : The format for the upload is to list all device in one column with header title as <b>Device ID</b></p>\r\n              <button mat-raised-button (click)=\"fileInput.click()\" class=\"one\">\r\n                <mat-icon class=\"con1\">file_upload</mat-icon>\r\n                Device Upload\r\n            </button>\r\n            <input #fileInput  type=\"file\" name=\"files\"  accept=\".xlsx,.csv\" id=\"myfile\" (change)=\"addfile($event.target.files)\" style=\"display:none;\" />\r\n          </div>\r\n      </mat-card>    \r\n  </mat-tab>\r\n\r\n</mat-tab-group>\r\n<div *ngIf=\"tabIndex === 0 && loadingFlag\" class=\"uploader-status\">\r\n<mat-spinner></mat-spinner>\r\n</div>\r\n<div *ngIf=\"tabIndex === 0 && !loadingFlag\" >\r\n    <table mat-table matTableExporter [dataSource]=\"listData\" matSort id=\"excel-table\" class=\"mat-elevation-z8\" #exporter=\"matTableExporter\">\r\n\r\n      <ng-container matColumnDef=\"select\">\r\n        <th mat-header-cell *matHeaderCellDef=\"let row; let i = index\" ><mat-checkbox (change)=\"$event ? toggleRow(row, i) : null\" color=\"primary\"></mat-checkbox></th>\r\n        <td mat-cell *matCellDef=\"let row; let i = index\">    <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\"\r\n          (change)=\"$event ? toggleRow(row, i) : null\"\r\n          [checked]=\"selection.isSelected(row)\"\r\n          [aria-label]=\"checkboxLabel(row)\"></mat-checkbox> </td>\r\n      </ng-container>\r\n \r\n\r\n    \r\n      <ng-container matColumnDef=\"_id\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\r\n        <td mat-cell *matCellDef=\"let element\"><a style=\" text-decoration-line: underline;color: #005F9E;\">  {{element._id}} </a></td>\r\n      </ng-container>\r\n\r\n  \r\n      <ng-container matColumnDef=\"DeviceId\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> DEVICE<br>TYPE </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.DeviceId}}</td>\r\n      </ng-container>\r\n  \r\n      <ng-container matColumnDef=\"cn\">\r\n        <th mat-header-cell *matHeaderCellDef > PAYLOAD </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.PacketId}}</td>\r\n      </ng-container>\r\n    \r\n      <ng-container matColumnDef=\"symbol\">\r\n        <th mat-header-cell *matHeaderCellDef> MESSAGE REQUESTED </th>\r\n        <td mat-cell *matCellDef=\"let element\"> <span>{{element.RequestId}}</span> </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"weight\">\r\n        <th mat-header-cell *matHeaderCellDef > NETWORK<br>PROVIDER </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.Name}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"mn2\">\r\n        <th mat-header-cell *matHeaderCellDef > MOBILE NO. </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.Message.Port}}</td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"Message.FilePath\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> USERNAME </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.Message.FilePath}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"Message.APN\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> EMAIL ID</th>\r\n        <td mat-cell *matCellDef=\"let element\">{{element.Message.APN}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"InsertUTC\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> RECEIVED TIME </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.InsertUTC | date:'yyyy-MM-dd'}}<br> {{element.InsertUTC | date:'HH:mm:ss'}} </td>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"model\">\r\n        <th mat-header-cell *matHeaderCellDef> UPDATED UTC </th>\r\n        <td mat-cell *matCellDef=\"let element\">{{element.UpdateUTC | date:'yyyy-MM-dd'}}<br> {{element.UpdateUTC | date:'HH:mm:ss'}} </td>\r\n      </ng-container>\r\n    \r\n \r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n    </table>\r\n  \r\n    <div *ngIf=\"this.temp != null\">\r\n      <mat-paginator style-paginator [showTotalPages]=\"4\" [length]=\"listData.data.length\"\r\n      [pageSize]=\"8\"></mat-paginator>\r\n    </div>\r\n\r\n    <div *ngIf=\"this.temp == null\">\r\n      <h3 style=\"color: #666; text-align: center; font-weight: 500;\">Records Not found</h3>\r\n    </div>\r\n</div>\r\n\r\n\r\n<div *ngIf=\"tabIndex === 1 && !loadingFlag1\" >\r\n  <mat-card style=\"margin: 20px;\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-8 cleft\">\r\n                <p>Single device search option is used to searched device status</p>\r\n                <div class=\"example-container\" >\r\n                <mat-form-field style=\"width: 80%;\" appearance=\"outline\">\r\n                   \r\n                    <input style=\"text-indent: 2em;\" matInput [(ngModel)]=\"searchKey\" (keyup)=\"applyFilter()\" placeholder=\"Search Device\" #input>  \r\n                     <mat-icon style=\"color: gray;\" matPrefix>search</mat-icon>\r\n                   \r\n                </mat-form-field>\r\n                <button (click)=\"exporter.exportTable('xlsx', {fileName: 'Outbound Status Report'})\" mat-raised-button class=\"btn\">SUBMIT</button>\r\n                \r\n            </div>\r\n            </div>\r\n            <div class=\"col-sm-4\">\r\n               \r\n           \r\n              <button (click)=\"exporter.exportTable('xlsx', {fileName: 'Outbound Status Report'})\" mat-raised-button class=\"btn1\">DATA DOWNLOAD</button>\r\n                \r\n                  \r\n              </div>\r\n              </div>\r\n          </div>\r\n      \r\n\r\n  </mat-card>\r\n  <table mat-table matTableExporter [dataSource]=\"listData1\" matSort id=\"excel-table\" class=\"mat-elevation-z8\" #exporter=\"matTableExporter\">\r\n\r\n    <ng-container matColumnDef=\"select\">\r\n      <th mat-header-cell *matHeaderCellDef=\"let row; let i = index\" ><mat-checkbox color=\"primary\"></mat-checkbox></th>\r\n      <td mat-cell *matCellDef=\"let row; let i = index\">    <mat-checkbox color=\"primary\"></mat-checkbox> </td>\r\n    </ng-container>\r\n\r\n\r\n  \r\n    <ng-container matColumnDef=\"_id\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\r\n      <td mat-cell *matCellDef=\"let element\"><a style=\" text-decoration-line: underline;color: #005F9E;\">  {{element._id}} </a></td>\r\n    </ng-container>\r\n\r\n\r\n    <ng-container matColumnDef=\"DeviceId\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> DEVICE<br>TYPE </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.DeviceId}}</td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"cn\">\r\n      <th mat-header-cell *matHeaderCellDef > PAYLOAD </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.PacketId}}</td>\r\n    </ng-container>\r\n  \r\n    <ng-container matColumnDef=\"symbol\">\r\n      <th mat-header-cell *matHeaderCellDef> MESSAGE<br>REQUESTED </th>\r\n      <td mat-cell *matCellDef=\"let element\"> <span>{{element.RequestId}}</span> </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"weight\">\r\n      <th mat-header-cell *matHeaderCellDef > NETWORK<br>PROVIDER </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.Name}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"mn2\">\r\n      <th mat-header-cell *matHeaderCellDef > MOBILE NO. </th>\r\n      <td mat-cell *matCellDef=\"let element\"> </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"Message.FilePath\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> USERNAME </th>\r\n      <td mat-cell *matCellDef=\"let element\">  </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"Message.APN\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> EMAIL ID</th>\r\n      <td mat-cell *matCellDef=\"let element\"> </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"InsertUTC\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> RECEIVED TIME </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.InsertUTC | date:'yyyy-MM-dd'}}<br> {{element.InsertUTC | date:'HH:mm:ss'}} </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"model\">\r\n      <th mat-header-cell *matHeaderCellDef> UPDATED UTC </th>\r\n      <td mat-cell *matCellDef=\"let element\">{{element.UpdateUTC | date:'yyyy-MM-dd'}}<br> {{element.UpdateUTC | date:'HH:mm:ss'}} </td>\r\n    </ng-container>\r\n  \r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n  </table>\r\n\r\n \r\n\r\n  <div *ngIf=\"this.temp1 == null\">\r\n    <h3 style=\"color: #666; text-align: center; font-weight: 500;\">Records Not found</h3>\r\n  </div>\r\n</div>","\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient,HttpHeaders } from '@angular/common/http'\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OutboundService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  outbound() {\r\n    return this.http.get<any>(`${environment._outboundapi}`).pipe(map(user => {\r\n     \r\n      return user;\r\n  }));\r\n  }\r\n  multipleDevice(deviceList) {\r\n    return this.http.post<any>(`${environment._multipleDeviceapi}`,deviceList).pipe(map(user => {\r\n     \r\n      return user;\r\n  }));\r\n  }\r\n}\r\n","export interface DateParse {\r\n    dateInput: string;\r\n  }\r\n  export type DateDisplay = DateParse & {\r\n    monthYearLabel?: string;\r\n    dateA11yLabel?: string;\r\n    monthYearA11yLabel?: string;\r\n  };\r\n  export class CustomDateFormat {\r\n    private _parse: DateParse = {\r\n      dateInput: \"YYYY/MM/DD\"\r\n    };\r\n    private _display: DateDisplay = {\r\n      dateInput: \"YYYY/MM/DD\",\r\n      monthYearLabel: \"MMM YYYY\",\r\n      dateA11yLabel: \"LL\",\r\n      monthYearA11yLabel: \"MMM YYYY\"\r\n    };\r\n  \r\n    set parse(parse: DateParse) {\r\n      this._parse = Object.assign({}, this._parse, parse);\r\n    }\r\n  \r\n    get parse(): DateParse {\r\n      return this._parse;\r\n    }\r\n  \r\n    set display(display: DateDisplay) {\r\n      this._display = Object.assign({}, this._display, display);\r\n    }\r\n  \r\n    get display(): DateDisplay {\r\n      return this._display;\r\n    }\r\n  \r\n    updateDateFormat(parse: DateParse, display?: DateDisplay) {\r\n      this.parse = parse;\r\n      if (!display) {\r\n        display = parse;\r\n      }\r\n      this.display = display;\r\n    }\r\n  }\r\n  ","import { Directive, Inject, Input, Optional } from \"@angular/core\";\r\nimport { NgControl } from \"@angular/forms\";\r\nimport { DateAdapter, MAT_DATE_FORMATS } from \"@angular/material/core\";\r\nimport { CustomDateFormat, DateDisplay, DateParse } from \"./custom-date-format\";\r\nimport { MomentDateAdapter } from \"@angular/material-moment-adapter\";\r\n\r\n\r\n@Directive({\r\n  selector: \"[datePickerFormat]\",\r\n  providers: [\r\n    {\r\n      provide: DateAdapter,\r\n      useClass: MomentDateAdapter\r\n    },\r\n    {\r\n      provide: MAT_DATE_FORMATS,\r\n      useClass: CustomDateFormat\r\n    }\r\n  ]\r\n})\r\nexport class DatePickerFormatDirective {\r\n  @Input() public configDateParse: DateParse;\r\n  @Input() public configDateDisplay: DateDisplay;\r\n\r\n  @Input(\"datePickerFormat\")\r\n  set datePickerFormat(format: string) {\r\n    if (this.configDateParse) {\r\n      this.matDateFormat.updateDateFormat(\r\n        this.configDateParse,\r\n        this.configDateDisplay\r\n      );\r\n    } else {\r\n      this.matDateFormat.updateDateFormat({ dateInput: format });\r\n    }\r\n\r\n    const value = this.ngControl.value;\r\n    this.ngControl.valueAccessor?.writeValue(value);\r\n  }\r\n\r\n  constructor(\r\n    @Inject(MAT_DATE_FORMATS) public matDateFormat: CustomDateFormat,\r\n    @Optional() private ngControl: NgControl\r\n  ) {}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\n\r\nimport {AuthenticationService } from './authentication.service';\r\n\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(\r\n        private router: Router,\r\n        private authenticationService: AuthenticationService\r\n    ) { }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        const user = this.authenticationService.userValue;\r\n        if (user) {\r\n            // logged in so return true\r\n            return true;\r\n        }\r\n\r\n        // not logged in so redirect to login page with the return url\r\n        this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\r\n        return false;\r\n    }\r\n}","  \r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient,HttpHeaders } from '@angular/common/http'\r\nimport { Router } from '@angular/router'\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthenticationService {\r\n  private userSubject: BehaviorSubject<any>;\r\n  public user: Observable<any>;\r\n\r\n \r\n\r\n  constructor(private http: HttpClient,\r\n    private _router: Router) {\r\n      this.userSubject = new BehaviorSubject<any>(localStorage.getItem('user'));\r\n        this.user = this.userSubject.asObservable();\r\n     }\r\n     public get userValue() {\r\n      return this.userSubject.value;\r\n  }\r\n    loginUser(loginData) {\r\n      let headers = new HttpHeaders({\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n      //  'Authorization': 'Basic V2ZJNjlCSVN4NlhzcVB2UVJrRFlJZTVZU3lRYTpmMVhBcjFrVmdkQW00a01mU1lNYzNNQUdtaUlh'}); //single device search\r\n     // 'Authorization': 'Basic dzhxZTYxaTZrT0J5MVFobE5PUUVodGRLOUpzYTpYcFdEVVF4R3hfd2ZFb25EeGw4REhJN2s0Y0Fh'});    //C and java firmware upload          \r\n        // 'Authorization': 'Basic aHdmaXRqQlQ1bGVvWm9qeFZ4SzRnMlpwM0FFYTpNMDYzbDdZSk5TRzBrUVBwS3BKVEVDcmNPNElh'}); // Upload Firmware\r\n         // 'Authorization': 'Basic SkpwUnNKY0JneFVxMVhMcFZnejhFb0I1TFZBYTo5Uzl1MVNmUUQ0MV8wYVF4a1FjSTJxa1Z3Nm9h'}); //Outbound\r\n          'Authorization': 'Basic U2EzOW42cnQxREY5ekxZSXNIWFJoT2dWUlhjYTpaVEp5SWZmRkFBamc3cTlRNGxOaVZTbFd4Wjhh'}); //IotOutBound \r\n        let options = { headers: headers };\r\n    \r\n      return this.http.post<any>(`${environment._loginProdUrl}`,loginData,options).pipe(map(user => {\r\n        console.log(user);\r\n        // store user details and basic auth credentials in local storage to keep user logged in between page refreshes\r\n        user.authdata = user.access_token;\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n        this.userSubject.next(user);\r\n        return user;\r\n    }));\r\n    }\r\n\r\n  \r\n\r\n\r\n    getToken() {\r\n      return localStorage.getItem('token')\r\n    }\r\n\r\n    loggedIn() {\r\n      return !!localStorage.getItem('token')    \r\n    }\r\n}\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { HttpInterceptor, HttpEvent } from '@angular/common/http';\r\nimport {AuthenticationService } from './authentication.service';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TokenInterceptorService  implements HttpInterceptor {\r\n  private _loginUrl = \"https://identity.trimble.com/token?grant_type=client_credentials\"\r\n  constructor(private authenticationService: AuthenticationService){\r\n  }\r\n  intercept(request, next): Observable<HttpEvent<any>> {\r\n    const access_token = localStorage.getItem('token');\r\n    let userdetails = localStorage.getItem('user');\r\n    userdetails = JSON.parse(userdetails)\r\n    // let authService = this.injector.get(AuthenticationService)\r\n    const user = this.authenticationService.userValue;\r\n    const isLoggedIn = user && userdetails['authdata'];\r\n    const isApiUrl = request.url.startsWith(`${environment._loginProdUrl}`);\r\n    if (isLoggedIn && !isApiUrl) {\r\n    console.log(access_token);\r\n        request = request.clone({\r\n            setHeaders: { \r\n                Authorization: `Bearer ${access_token}`\r\n            }\r\n        });\r\n    }\r\n\r\n    return next.handle(request);\r\n}\r\n  }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { FormBuilder, FormGroup, Validators, NgForm } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport {UpgradeFirmwareCombination } from '../model/model'\r\n\r\n@Component({\r\n  selector: 'app-upgrade-firmware-combination',\r\n  templateUrl: './upgrade-firmware-combination.component.html',\r\n  styleUrls: ['./upgrade-firmware-combination.component.css']\r\n})\r\nexport class UpgradeFirmwareCombinationComponent implements OnInit {\r\n\r\n  Upgrade:UpgradeFirmwareCombination;\r\n  constructor(private router:Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.Upgrade ={\r\n      javaV:'',\r\n      CV:''\r\n    }\r\n  }\r\n\r\n\r\n\r\n  public onClicking(accountForm: NgForm)\r\n  {\r\n   \r\n    if(accountForm.valid)\r\n    {\r\n      \r\n    }\r\n    else\r\n    {\r\n      return;\r\n    }\r\n\r\n  }\r\n  dash(){\r\n    this.router.navigate(['Firmware']);\r\n  }\r\n}\r\n","\r\n<div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n        <div class=\"col-12\">\r\n            <p class=\"tyt\"><span>Menu</span> > <span (click)=\"dash()\">Fireware Manager</span> > <span>Upload Firmware Version</span> > <span>Customer Ashok Leyland</span></p>\r\n            <mat-divider></mat-divider>\r\n        </div>\r\n    </div>\r\n</div>\r\n<p class=\"tyts\">Upgrade Firmware Combination</p>\r\n\r\n<mat-card>\r\n    <form #accountForm=\"ngForm\" >\r\n        \r\n     \r\n        <div class=\"col-sm-12\" >\r\n            <mat-form-field style=\"width: 100%;\" appearance=\"standard\">\r\n                <mat-label>JAVA VERSION</mat-label>\r\n                <mat-select name=\"javaV\" placeholder=\"JAVA VERSION\" ngModel  [(ngModel)]=\"Upgrade.javaV\"  required>\r\n                    <mat-option value=\"tap68\">TAP68</mat-option>\r\n                    <mat-option value=\"tap88\">TAP88</mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n              \r\n        </div>\r\n      \r\n        <div class=\"col-sm-12\" >\r\n            <mat-form-field style=\"width: 100%;\" appearance=\"standard\">\r\n                <mat-label>C VERSION</mat-label>\r\n                <mat-select name=\"CV\" placeholder=\"C VERSION\" ngModel  [(ngModel)]=\"Upgrade.CV\"  required>\r\n                    <mat-option value=\"tap76c\">TAP76C</mat-option>\r\n                    <mat-option value=\"tap76d\">TAP76D</mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n              \r\n        </div>\r\n\r\n        <button mat-raised-button (click)=\"onClicking(accountForm)\" class=\"one\">\r\n            SUBMIT FIRMWARE COMBINATION\r\n        </button>\r\n      \r\n    </form>\r\n</mat-card>\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient,HttpHeaders } from '@angular/common/http'\r\n\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UploadCFirmwareService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  createCFirmware(data) {\r\n    return this.http.post<any>(`${environment._firmwareUpload}`, data).pipe(map(user => {\r\n      \r\n      return user;\r\n  }));\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { FormBuilder, FormGroup, Validators, NgForm } from '@angular/forms';\r\nimport { from } from 'rxjs';\r\nimport {SingleCFirmwareUpload } from '../model/model'\r\nimport { EditFirmwareFileSize } from '../model/model';\r\nimport { UploadCFirmwareService } from './service/upload-c-firmware.service';\r\nimport {MatSnackBar} from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport {Apollo , QueryRef} from 'apollo-angular';\r\nimport gql from \"graphql-tag\";\r\nimport { map, shareReplay } from 'rxjs/operators';\r\n\r\nexport type detailC ={\r\n  ID:Number;\r\n  Name:String;\r\n}\r\n\r\nexport type DataQuery ={\r\n  detailC:detailC[]\r\n}\r\n\r\nconst UPVOTE_POST = gql`\r\nmutation updateDetailC($ID:Int! ,$Name: String!,$FileSize: Int!){\r\n  updateDetailC(ID: $ID,Name: $Name,FileSize: $FileSize){\r\n    ID\r\n    Name\r\n    FileSize\r\n  }\r\n}\r\n`;\r\n\r\n@Component({\r\n  selector: 'app-upload-c-firmware',\r\n  templateUrl: './upload-c-firmware.component.html',\r\n  styleUrls: ['./upload-c-firmware.component.scss']\r\n})\r\n\r\n\r\n\r\nexport class UploadCFirmwareComponent implements OnInit {\r\n\r\n \r\n  uploadC:SingleCFirmwareUpload;\r\n  edit:EditFirmwareFileSize;\r\n  ID  \r\n  vname\r\n  Named\r\n  FileSize;\r\n  \r\n  hide = true;\r\n  messages:detailC[];\r\n  constructor(private uploadCFirmware: UploadCFirmwareService ,private _snackBar: MatSnackBar ,\r\n    private router :Router,private apollo: Apollo) { }\r\n  \r\n\r\n  ngOnInit(): void {\r\n \r\n    this.uploadC ={\r\n      Name: '',\r\n      ServerIP: '',\r\n      UserName: '',\r\n      FilePath: '',\r\n      FileSize: '',\r\n      Password: '',\r\n      ReleaseNote: '',\r\n      firmwareType: '',\r\n      filename: '',\r\n      Port: 21,\r\n      IsFirmwareC: true\r\n    }\r\n\r\n    // this.edit={\r\n    //   versionName:'',\r\n    //   fileSize:''\r\n    // }\r\n\r\n    const source1$ = this.apollo.query<DataQuery>({\r\n      query: gql`\r\n      {\r\n        detailC{\r\n          ID\r\n          Name\r\n        }\r\n      }`\r\n      \r\n    }).pipe(shareReplay(1))\r\n\r\nsource1$.pipe(map(result => result.data && result.data.detailC)).subscribe((data) =>   \r\n this.messages = data\r\n  );\r\n  }\r\n\r\n  listed(version){\r\n    console.log(version)\r\n    for (const [key, value] of Object.entries(version)) {\r\n\r\n     \r\n      if(key == \"Name\"){\r\n        this.Named = value\r\n      }\r\n      if(key == \"ID\"){\r\n       this.ID = Number(value)\r\n      }\r\n\r\n    }\r\n  }\r\n  public onClicking(uploadCForm: NgForm)\r\n  {\r\n   \r\n    if(uploadCForm.valid)\r\n    {\r\n    this.uploadCFirmware.createCFirmware([this.uploadC]).pipe().subscribe(data=>{\r\n     \r\n      if(data == true){\r\n       \r\n        this._snackBar.open(\"Value Uploaded Successfully\",\"\",{duration: 2000});\r\n        this.navigation();\r\n        //   this.router.navigate(['deviceSearch/single_device/1'])\r\n       \r\n      }\r\n    })\r\n    }\r\n    else\r\n    {\r\n      return;\r\n    }\r\n\r\n  }\r\n\r\n  navigation(){\r\n    setTimeout(() =>{\r\n      this.router.navigate(['deviceSearch/single_device/1'])\r\n    },2000)\r\n  }\r\n  \r\n  public onEdit(editForm: NgForm)\r\n  {\r\n   \r\n    if(editForm.valid)\r\n    {\r\n      this.apollo.mutate({\r\n        mutation: UPVOTE_POST,\r\n        variables: \r\n        {\r\n          ID: this.ID,\r\n          Name: this.Named,\r\n          FileSize: this.FileSize\r\n        }\r\n      }).subscribe(({data }) => {\r\n        this._snackBar.open(\"Value Updated Successfully\",\"\",{duration: 2000});\r\n      },\r\n      (error) => this._snackBar.open(\"DeviceID Not Found\",\"\",{duration: 2000})\r\n      )\r\n    \r\n      \r\n    }\r\n    else\r\n    {\r\n      return;\r\n    }\r\n\r\n  }\r\n\r\n  public uploadFormreset(uploadCForm: NgForm){\r\n\r\n    uploadCForm.resetForm();\r\n  }\r\n\r\n\r\n  public editFormreset(editForm: NgForm){\r\n\r\n    editForm.resetForm();\r\n  }\r\n\r\n\r\n  dash(){\r\n    this.router.navigate(['Firmware']);\r\n  }\r\n}\r\n","<div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n        <div class=\"col-12\">\r\n            <p class=\"tyt\"><span>Menu</span> > <span (click) =\"dash()\">Fireware Manager</span> > <span>Upload Firmware Version</span> > <span>Customer Ashok Leyland</span></p>\r\n            <mat-divider></mat-divider>\r\n        </div>\r\n    </div>\r\n</div>\r\n<p class=\"tyts\">Upload C Firmware</p>\r\n<mat-tab-group mat-align-tabs=\"end\">\r\n    <mat-tab label=\"Single Firmware Upload\">\r\n        <mat-card>\r\n            <div class=\"container-fluid\">\r\n                <div class=\"row\">\r\n                    <form #uploadCForm=\"ngForm\" >\r\n                        <div class=\"col-sm-12\"> \r\n                            <mat-form-field style=\"width: 100%;\"  appearance=\"standard\">\r\n                               <mat-label >VERSION NAME</mat-label>\r\n                                <input matInput  name=\"versionName\" placeholder=\"VERSION NAME\" ngModel maxlength=\"25\" [(ngModel)]=\"uploadC.Name\" #vnameControl=\"ngModel\" required >\r\n                \r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-sm-12\">\r\n                            <mat-form-field style=\"width: 100%;\"  appearance=\"standard\">\r\n                                <mat-label >SERVER IP</mat-label>\r\n                                <input matInput  name=\"serverIp\" placeholder=\"SERVER IP\" ngModel maxlength=\"25\" [(ngModel)]=\"uploadC.ServerIP\" required>\r\n                \r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-sm-6\">\r\n                            <mat-form-field style=\"width: 100%;\" appearance=\"standard\" >\r\n                                <mat-label >USERNAME</mat-label>\r\n                                <input matInput name=\"userName\" placeholder=\"USERNAME\" ngModel maxlength=\"25\" [(ngModel)]=\"uploadC.UserName\" required>\r\n                \r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-sm-6\">\r\n                            <mat-form-field style=\"width: 100%;\" appearance=\"standard\">\r\n                                <mat-label >PASSWORD</mat-label>\r\n                                <input matInput [type]=\"hide ? 'password' : 'text'\" name=\"password\"  ngModel  [(ngModel)]=\"uploadC.Password\" required>\r\n                                <button mat-icon-button matSuffix  type=\"button\" (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\r\n                                <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n                                </button>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-sm-6\">\r\n                            <mat-form-field style=\"width: 100%;\" appearance=\"standard\">\r\n                                <mat-label >FILE PATH</mat-label>\r\n                                <input matInput  name=\"filePath\" placeholder=\"FILE PATH\" ngModel  [(ngModel)]=\"uploadC.FilePath\"  required>\r\n                \r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-sm-6\">\r\n                            <mat-form-field style=\"width: 100%;\" appearance=\"standard\" >\r\n                                <mat-label >FILE SIZE</mat-label>\r\n                                <input matInput  name=\"fileSize\" placeholder=\"FILE SIZE\" ngModel maxlength=\"25\" [(ngModel)]=\"uploadC.FileSize\"  required>\r\n                \r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-sm-12\">\r\n                            <mat-form-field style=\"width: 100%;\" appearance=\"standard\" >\r\n                                <mat-label >RELEASE NOTES</mat-label>\r\n                                <input matInput  name=\"releseNote\" placeholder=\"RELEASE NOTES\" ngModel maxlength=\"25\" [(ngModel)]=\"uploadC.ReleaseNote\"  required>\r\n                \r\n                            </mat-form-field>\r\n                        </div>\r\n                \r\n                        <button mat-raised-button (click)=\"onClicking(uploadCForm)\" class=\"one\">\r\n                            <mat-icon>save</mat-icon>\r\n                            SAVE\r\n                        </button>\r\n                        <button mat-raised-button type=\"reset\" (click)=\"uploadFormreset(uploadCForm)\" class=\"two\">\r\n                            <mat-icon>replay\r\n                            </mat-icon>\r\n                            RESET\r\n                        </button>\r\n                \r\n                    </form>\r\n                </div>\r\n            </div>       \r\n        </mat-card>\r\n    </mat-tab>\r\n    <mat-tab label=\"Edit Firmware File Size\">\r\n\r\n        <mat-card>\r\n            <div class=\"container-fluid\">\r\n                <div class=\"row\">\r\n                    <form #editForm=\"ngForm\" >\r\n                        <div class=\"col-sm-12\"> \r\n                            <mat-form-field style=\"width: 100%;\"  appearance=\"standard\">\r\n                                <mat-label>Version Name</mat-label>\r\n                                <mat-select name=\"Named\" placeholder=\"Version Name\"  [(ngModel)]=\"Named\" required>\r\n                                    <mat-option *ngFor=\"let message of messages\" (click)=\"listed(message)\"  [value]=\"message.Name\" >\r\n                                      {{message.Name}}\r\n                                    </mat-option>                 \r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-sm-12\">\r\n                            <mat-form-field style=\"width: 100%;\"  appearance=\"standard\">\r\n                                <mat-label >FILE SIZE</mat-label>\r\n                                <input matInput type=\"number\" name=\"FileSize\" placeholder=\"FILE SIZE\" ngModel maxlength=\"25\" [(ngModel)]=\"FileSize\"  required>\r\n                \r\n                            </mat-form-field>\r\n                        </div>\r\n                        <button mat-raised-button (click)=\"onEdit(editForm)\" class=\"one\">\r\n                            <mat-icon>save</mat-icon>\r\n                            SAVE\r\n                        </button>\r\n                        <button mat-raised-button type=\"reset\" (click)=\"editFormreset(editForm)\" class=\"two\">\r\n                            <mat-icon>replay\r\n                            </mat-icon>\r\n                            RESET\r\n                        </button>\r\n                \r\n                    </form>\r\n                </div>\r\n            </div>          \r\n        </mat-card>\r\n    </mat-tab>\r\n    \r\n  </mat-tab-group>","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { environment } from '../../environments/environment';\r\nimport { map } from 'rxjs/operators';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ServicesService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n\r\n  uploadFirmware(data) {\r\n    return this.http.post(`${environment._firmwareFileUpload}`,data ,{responseType: 'text'}).pipe(map(user => {\r\n      console.log(user);\r\n      return user;\r\n  }));\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { FormBuilder, FormGroup, Validators, NgForm } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { UploadIotFirmware} from '../model/model'\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../environments/environment';\r\nimport { ServicesService } from './services.service'\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport {Apollo , QueryRef} from 'apollo-angular';\r\nimport gql from \"graphql-tag\";\r\nimport { map, shareReplay } from 'rxjs/operators';\r\n\r\nconst UPVOTE_POST = gql`\r\n\r\nmutation addDetailC($Name:String! ,$ServerIP:String!,$UserName:String!,$Password:String!,$FileSize:Int!,$FilePath:String!,$Port:Int!,$InsertUTC:String!,$UpdateUTC:String!,$IsActive:Boolean!,$ReleaseNotes:String!,$IsFirmware:Boolean!,$isSNM476:Boolean!){\r\n  addDetailC(Name: $Name,ServerIP: $ServerIP,UserName: $UserName,Password: $Password,FileSize: $FileSize,FilePath: $FilePath,Port: $Port,InsertUTC: $InsertUTC,UpdateUTC: $UpdateUTC,IsActive: $IsActive,ReleaseNotes: $ReleaseNotes,IsFirmware: $IsFirmware,isSNM476: $isSNM476){\r\n    Name\r\n    ServerIP\r\n    UserName\r\n    Password\r\n    FileSize\r\n    FilePath\r\n    Port\r\n    InsertUTC\r\n    UpdateUTC\r\n    IsActive\r\n    ReleaseNotes\r\n    IsFirmware\r\n    isSNM476\r\n  }\r\n}\r\n`;\r\n\r\n@Component({\r\n  selector: 'app-upload-iot-firmware',\r\n  templateUrl: './upload-iot-firmware.component.html',\r\n  styleUrls: ['./upload-iot-firmware.component.css']\r\n})\r\nexport class UploadIotFirmwareComponent implements OnInit {\r\n\r\n uploadIot:UploadIotFirmware;\r\n public file : File;\r\n fileToUpload: File;\r\n filename\r\n  constructor(private router:Router,private apollo: Apollo, private http: HttpClient,private ServicesService: ServicesService,private _snackBar: MatSnackBar  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.uploadIot={\r\n      versionName: '',\r\n      fileName:'',\r\n      Type:''\r\n    }\r\n  }\r\n  postMethod(files: FileList) {\r\n    this.fileToUpload = files.item(0);\r\n    this.filename =  this.fileToUpload.name\r\n    if(this.fileToUpload == null){\r\n      alert(\"File not uploaded\")\r\n    }\r\n    else{\r\n     \r\n      let formData:FormData = new FormData(); \r\n      formData.append('file', this.fileToUpload); \r\n      formData.append('folder', '/otap/otap_usr/OTAP');\r\n       console.log(formData)\r\n      this.ServicesService.uploadFirmware(formData).pipe().subscribe(data =>\r\n      {\r\n        this._snackBar.open( data ,\"\",{duration: 2000});\r\n        console.log(data)\r\n        if(data == \"file uploaded.\")\r\n        this.postData();\r\n       \r\n      },\r\n      error =>{\r\n        console.log(error)\r\n      }\r\n      )\r\n    // this.http.post(`${environment._firmwareFileUpload}`,formData).pipe().subscribe((val)=>{\r\n    //   console.log(val)\r\n    // })\r\n     }\r\n  }  \r\n\r\n  postData(){\r\n    this.apollo.mutate({\r\n      mutation: UPVOTE_POST,\r\n      variables: \r\n      {\r\n        Name:this.filename,\r\n        ServerIP:\"1.1.1.1\",\r\n        UserName:\"osguploadfw\",\r\n        Password:\"wUAJ6W7t394m\",\r\n        FileSize:20,\r\n        FilePath:\"/osg/\",\r\n        Port:80,\r\n        InsertUTC:\"2021-05-14\",\r\n        UpdateUTC:\"2021-05-18\",\r\n        IsActive:true,\r\n        ReleaseNotes:\"20\",\r\n        IsFirmware:true,\r\n        isSNM476:true\r\n      }\r\n    }).subscribe(({data }) => {\r\n      this._snackBar.open(\"Value Uploaded Successfully\",\"\",{duration: 2000});\r\n    },\r\n    (error) => this._snackBar.open(\"DeviceID Not Found\",\"\",{duration: 2000})\r\n    )\r\n  }\r\n  \r\n  public onClicking()\r\n  {\r\n   \r\n    \r\n\r\n  }\r\n\r\n  \r\n \r\n\r\n  public reset(accountForm: NgForm){\r\n\r\n    accountForm.resetForm();\r\n   \r\n  }\r\n\r\n  dash(){\r\n    this.router.navigate(['Firmware']);\r\n  }\r\n}\r\n","<div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n        <div class=\"col-12\">\r\n            <p class=\"tyt\"><span>Menu</span> > <span (click)=\"dash()\">Fireware Manager</span> > <span>Upload Firmware Version</span> > <span>Customer Ashok Leyland</span></p>\r\n            <mat-divider></mat-divider>\r\n        </div>\r\n    </div>\r\n</div>\r\n<p class=\"tyts\">Upload IOT Firmware</p>\r\n\r\n<mat-card>\r\n    <form #accountForm=\"ngForm\" enctype=\"multipart/form-data\">\r\n        <!-- <div class=\"col-sm-12\"> \r\n            <mat-form-field style=\"width: 100%;\"  appearance=\"standard\">\r\n               <mat-label >VERSION NAME</mat-label>\r\n                <input matInput  name=\"versionName\" placeholder=\"VERSION NAME\" ngModel maxlength=\"25\" [(ngModel)]=\"uploadIot.versionName\" required >\r\n\r\n            </mat-form-field>\r\n        </div>\r\n     \r\n      -->\r\n      \r\n       \r\n        <button mat-raised-button (click)=\"fileInput.click()\" class=\"one\">\r\n            <mat-icon class=\"con1\">file_upload</mat-icon>\r\n            File Upload\r\n        </button>\r\n        <input #fileInput  type=\"file\" name=\"files\"  accept=\".hex\" id=\"myfile\" (change)=\"postMethod($event.target.files)\" style=\"display:none;\" />\r\n       \r\n\r\n        <div class=\"col-sm-12\">\r\n            <mat-form-field style=\"width: 100%;\" appearance=\"standard\">\r\n                <mat-label >FILE NAME</mat-label>\r\n                <input matInput  name=\"filename\" placeholder=\"FILE NAME\" ngModel  [(ngModel)]=\"filename\" disabled required>\r\n\r\n            </mat-form-field>\r\n        </div>\r\n        <!-- <button mat-raised-button (click)=\"onClicking()\" class=\"one\">\r\n            <mat-icon>save</mat-icon>\r\n            SUBMIT\r\n        </button> -->\r\n        <!-- <button mat-raised-button type=\"reset\"  (click)=\"reset(accountForm)\" class=\"two\">\r\n            <mat-icon>replay\r\n            </mat-icon>\r\n            RESET\r\n        </button> -->\r\n\r\n    </form>\r\n</mat-card>\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient,HttpHeaders } from '@angular/common/http'\r\nimport { Router } from '@angular/router'\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UploadJavaFirmwareService {\r\n  constructor(private http: HttpClient,\r\n    private _router: Router) { }\r\n\r\n  createJavaFirmware(data) {\r\n    return this.http.post<any>(`${environment._firmwareUpload}`, data).pipe(map(user => {\r\n      console.log(user);\r\n      return user;\r\n  }));\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, NgForm } from '@angular/forms';\r\nimport { from } from 'rxjs';\r\nimport { UploadJavaFirmware } from '../model/model'\r\nimport { UploadJavaFirmwareService } from './service/upload-java-firmware.service';\r\nimport {MatSnackBar} from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-upload-java-firmware',\r\n  templateUrl: './upload-java-firmware.component.html',\r\n  styleUrls: ['./upload-java-firmware.component.css']\r\n})\r\nexport class UploadJavaFirmwareComponent implements OnInit {\r\n\r\n  uploadJava:UploadJavaFirmware;\r\n  hide = true;\r\n  constructor(private uploadJavaFirmware: UploadJavaFirmwareService,private _snackBar: MatSnackBar ,\r\n    private router :Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.uploadJava={\r\n      Name: '',\r\n      ServerIP: '',\r\n      UserName: '',\r\n      FilePath: '',\r\n      FileSize: '',\r\n      Password: '',\r\n      ReleaseNote: '',\r\n      firmwareType: '',\r\n      filename: '',\r\n      Port: 2222,\r\n      IsFirmwareC: false\r\n    }\r\n  }\r\n\r\n  public onClicking(accountForm: NgForm)\r\n  {\r\n   \r\n    if(accountForm.valid)\r\n    {\r\n    this.uploadJavaFirmware.createJavaFirmware([this.uploadJava]).pipe().subscribe(data=>{\r\n      console.log(data)\r\n      if(data == true){\r\n        console.log(this.uploadJava)\r\n    \r\n       this._snackBar.open(\"Value Uploaded Successfully\",\"\",{duration: 2000});\r\n       this.navigation();\r\n     //   this.router.navigate(['deviceSearch/single_device/1'])\r\n\r\n      }\r\n    })\r\n    }\r\n    else\r\n    {\r\n      return;\r\n    }\r\n\r\n  }\r\n\r\n  navigation(){\r\n    setTimeout(() =>{\r\n      this.router.navigate(['deviceSearch/single_device/1'])\r\n    },2000)\r\n  }\r\n  \r\n  public reset(accountForm: NgForm){\r\n\r\n    accountForm.resetForm();\r\n  }\r\n\r\n  dash(){\r\n    this.router.navigate(['Firmware']);\r\n  }\r\n}\r\n","<div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n        <div class=\"col-12\">\r\n            <p class=\"tyt\"><span>Menu</span> > <span (click)=\"dash()\">Fireware Manager</span> > <span>Upload Firmware Version</span> > <span>Customer Ashok Leyland</span></p>\r\n            <mat-divider></mat-divider>\r\n        </div>\r\n    </div>\r\n</div>\r\n<p class=\"tyts\">Upload Java Firmware</p>\r\n\r\n<mat-card>\r\n    <form #accountForm=\"ngForm\" >\r\n        <div class=\"col-sm-12\"> \r\n            <mat-form-field style=\"width: 100%;\"  appearance=\"standard\">\r\n               <mat-label >VERSION NAME</mat-label>\r\n                <input matInput  name=\"Name\" placeholder=\"VERSION NAME\" ngModel maxlength=\"25\" [(ngModel)]=\"uploadJava.Name\" #vnameControl=\"ngModel\" required >\r\n\r\n            </mat-form-field>\r\n        </div>\r\n        <div class=\"col-sm-12\">\r\n            <mat-form-field style=\"width: 100%;\"  appearance=\"standard\">\r\n                <mat-label >URL</mat-label>\r\n                <input matInput  name=\"ServerIP\" placeholder=\"URL\" ngModel  [(ngModel)]=\"uploadJava.ServerIP\" required>\r\n\r\n            </mat-form-field>\r\n        </div>\r\n        <div class=\"col-sm-6\">\r\n            <mat-form-field style=\"width: 100%;\" appearance=\"standard\" >\r\n                <mat-label >USERNAME</mat-label>\r\n                <input matInput name=\"UserName\" placeholder=\"USERNAME\" ngModel maxlength=\"25\" [(ngModel)]=\"uploadJava.UserName\" required>\r\n\r\n            </mat-form-field>\r\n        </div>\r\n        <div class=\"col-sm-6\">\r\n            <mat-form-field style=\"width: 100%;\" appearance=\"standard\">\r\n                <mat-label >PASSWORD</mat-label>\r\n                <input matInput [type]=\"hide ? 'password' : 'text'\" name=\"Password\"  ngModel  [(ngModel)]=\"uploadJava.Password\" required>\r\n                <button mat-icon-button matSuffix type=\"button\" (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\r\n                <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n                </button>\r\n            </mat-form-field>\r\n        </div>\r\n        <div class=\"col-sm-12\">\r\n            <mat-form-field style=\"width: 100%;\" appearance=\"standard\">\r\n                <mat-label >FILE PATH</mat-label>\r\n                <input matInput  name=\"FilePath\" placeholder=\"FILE PATH\" ngModel  [(ngModel)]=\"uploadJava.FilePath\"  required>\r\n\r\n            </mat-form-field>\r\n        </div>\r\n       \r\n        <div class=\"col-sm-12\">\r\n            <mat-form-field style=\"width: 100%;\" appearance=\"standard\" >\r\n                <mat-label >RELEASE NOTES</mat-label>\r\n                <input matInput  name=\"ReleaseNote\" placeholder=\"RELEASE NOTES\" ngModel maxlength=\"25\" [(ngModel)]=\"uploadJava.ReleaseNote\" required>\r\n\r\n            </mat-form-field>\r\n        </div>\r\n\r\n        <button mat-raised-button (click)=\"onClicking(accountForm)\" class=\"one\">\r\n            <mat-icon>save</mat-icon>\r\n            SAVE\r\n        </button>\r\n        <button mat-raised-button type=\"reset\"  (click)=\"reset(accountForm)\" class=\"two\">\r\n            <mat-icon>replay\r\n            </mat-icon>\r\n            RESET\r\n        </button>\r\n\r\n    </form>\r\n</mat-card>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  _loginUrl : \"api5\",//Outbound,Upload Firmware\r\n  _loginStg: \"api6\",//single Device search\r\n  _loginProdUrl: \"https://identity-stg.trimble.com/token?grant_type=client_credentials&amp;scope=openid\", //Other OTAP Command , Upolad C and Java\r\n  _outboundapi : \"https://api.trimble.com/t/trimble.com/oem-devicegateway/1.0/outbound/NH519298?limit=10&page=1&sort=desc\",\r\n  _multipleDeviceapi: \"https://api.trimble.com/t/trimble.com/oem-devicegateway/1.0/outbound/messages\",\r\n  _deviceWithPagination: \"https://api-stg.trimble.com/t/trimble.com/oemdeviceinfo-api/1.0/deviceInfo/firmware\",\r\n  _firmwareUpload: \"api1\",\r\n  _fwdashboard: \"api\",\r\n  _dashboard: \"api2\",\r\n  _publishVersion: \"api3\",\r\n  _firmwareFileUpload: \"api4\",\r\n  _deviceOutbound: \"api7\",\r\n  _getDevice: \"https://api-stg.trimble.com/t/trimble.com/iot-stg/1.0/shadow/46952541-3269-45fb-9f93-386bbe17372d-SNM00030\"\r\n  \r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n// ","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"sourceRoot":"webpack:///"}