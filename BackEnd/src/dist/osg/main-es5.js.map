{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///node_modules/moment/locale sync ^\\.\\/.*$","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/customerselection/customerselection.component.ts","webpack:///src/app/customerselection/customerselection.component.html","webpack:///src/app/dashboard/dashboard.component.ts","webpack:///src/app/dashboard/dashboard.component.html","webpack:///src/app/device-search/device-search.component.ts","webpack:///src/app/device-search/device-search.component.html","webpack:///src/app/device-search/single-device-search/service/devicesearch.service.ts","webpack:///src/app/device-search/single-device-search/single-device-search.component.ts","webpack:///src/app/device-search/single-device-search/single-device-search.component.html","webpack:///src/app/device-search/single-device-search/style-paginator.directive.ts","webpack:///src/app/firmware-report/firmware-report.component.ts","webpack:///src/app/firmware-report/firmware-report.component.html","webpack:///src/app/fmdashboard/fmdashboard.component.ts","webpack:///src/app/fmdashboard/fmdashboard.component.html","webpack:///src/app/fmdashboard/service/fmdashboard.service.ts","webpack:///src/app/graphql.module.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/model/model.ts","webpack:///src/app/other-otap-command/other-otap-command.component.ts","webpack:///src/app/other-otap-command/other-otap-command.component.html","webpack:///src/app/other-otap-command/FlashFirmware.html","webpack:///src/app/other-otap-command/addCommand.html","webpack:///src/app/other-otap-command/service/upgradecommand.service.ts","webpack:///src/app/outbound-status/outbound-status.component.ts","webpack:///src/app/outbound-status/outbound-status.component.html","webpack:///src/app/outbound-status/outbound.service.ts","webpack:///src/app/pipe/custom-date-format.ts","webpack:///src/app/pipe/date-picker-format.directive.ts","webpack:///src/app/services/auth.guard.ts","webpack:///src/app/services/authentication.service.ts","webpack:///src/app/services/token-interceptor.service.ts","webpack:///src/app/upgrade-firmware-combination/upgrade-firmware-combination.component.ts","webpack:///src/app/upgrade-firmware-combination/upgrade-firmware-combination.component.html","webpack:///src/app/upload-c-firmware/service/upload-c-firmware.service.ts","webpack:///src/app/upload-c-firmware/upload-c-firmware.component.ts","webpack:///src/app/upload-c-firmware/upload-c-firmware.component.html","webpack:///src/app/upload-iot-firmware/services.service.ts","webpack:///src/app/upload-iot-firmware/upload-iot-firmware.component.ts","webpack:///src/app/upload-iot-firmware/upload-iot-firmware.component.html","webpack:///src/app/upload-java-firmware/service/upload-java-firmware.service.ts","webpack:///src/app/upload-java-firmware/upload-java-firmware.component.ts","webpack:///src/app/upload-java-firmware/upload-java-firmware.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///fs (ignored)","webpack:///crypto (ignored)","webpack:///stream (ignored)","webpack:///fs (ignored)?4ec3","webpack:///crypto (ignored)?92a8","webpack:///stream (ignored)?f00d"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","map","webpackContext","webpackContextResolve","__webpack_require__","o","webpackContextKeys","Object","routes","path","redirectTo","pathMatch","component","canActivate","AppRoutingModule","forRoot","imports","AppComponent","router","apollo","headerFlag","emp","emp1","emp2","title","visible","selectable","removable","addOnBlur","OtapDevice","separatorKeysCodes","fruits","name","count","firmwares","firmwareValues","source$","query","pipe","result","data","devicetype","subscribe","event","preventDefault","element","undefined","style","backgroundColor","color","target","currentTarget","navigate","console","log","input","value","trim","push","fruit","index","indexOf","splice","device","setTimeout","location","reload","dashboard","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","useValue","declarations","entryComponents","providers","bootstrap","CustomerselectionComponent","_auth","outbound","buttonDisabled","showDiv","customer","source1$","customeraccountrelationshipQuery","mail","localStorage","getItem","selectedSub","customerValue","reset","change","DashboardComponent","toggleActive","firmware","DeviceSearchComponent","route","params","deviceType","setItem","dash","single","DevicesearchService","http","_router","get","_fwdashboard","user","_dashboard","page","_deviceWithPagination","put","_publishVersion","providedIn","$event","stopPropagation","SingleDeviceSearchComponent","_snackBar","entries","entries1","Versions","FirmwareC","messages","select","sample","loadingFlag","loadingFlag1","temp","totalCount","pageIndex","publishVersion","displayedColumns","selection","dataSource","paginator","searchType","detailC","detailJava","pages","entriesPost","devicePagination","obj","key","key1","value1","length","searchKey","ms","sort","setDataSourceAttributes","mp","filter","toLowerCase","numSelected","selected","numRows","row","toggle","Device","isAllSelected","isSelected","position","version","ServerIP","FilePath","FileSize","Port","UserName","Password","objData","assign","update","DeviceID","CVersion","JavaVersion","FirmwareVersion","FirmwareType","FirmwareUpgradeEnum","APN","AppInstanceID","UserID","Internal","DeviceGateway","IOTDevice","PublishedVersion","open","duration","files","fileToUpload","item","alert","changeTab","search","postData","StylePaginatorDirective","matPag","vr","ren","_pageGapTxt","_buttons","_curPageObj","pageSize","previousPageIndex","_showTotalPages","_rangeStart","_rangeEnd","initPageRange","showTotalPages","getNumberOfPages","actionContainer","nativeElement","querySelector","nextPageNode","prevButtonCount","forEach","button","removeChild","nodeArray","childNodes","i","nodeName","innerHTML","disabled","setStyle","numOfPages","insertBefore","createButton","linkBtn","createElement","addClass","pagingTxt","isNaN","text","createText","setAttribute","newIndex","lastPageIndex","listen","switchPage","appendChild","middleIndex","calcRangeStart","calcRangeEnd","buildPageNumbers","inc","FirmwareReportComponent","val","listArray","split","variables","download","options","filename","fieldSeparator","quoteStrings","decimalSeparator","showLabels","showTitle","useTextFile","useBom","useKeysAsHeaders","csvExporter","generateCsv","FmdashboardComponent","FmdashboardService","devicemaster","TotalDevice","devicepacket","ReportStatus","source2$","reportingstatus","activepacket","menu","uri","createApollo","httpLink","link","create","cache","GraphQLModule","useFactory","deps","LoginComponent","accountForm","usersVal","email","emailId","password","valid","loginUser","res","access_token","err","login","Firmware","UPVOTE_POST","OtherOTAPCommandComponent","UpgradecommandService","dialog","tabIndex","deviceArr","OnDataLoad","devicetypes","DeviceType","getCategory","dataSource1","OtapCommand","filterVal","toLocaleLowerCase","filterValue","exporter","toggleRow","file","fileReader","FileReader","readAsArrayBuffer","onload","arrayBuffer","Uint8Array","arr","Array","String","fromCharCode","bstr","join","workbook","type","first_sheet_name","SheetNames","worksheet","Sheets","filelist","sheet_to_json","raw","parseFile","fileData","messageFormat","messageName","packetId","dialogRef","flashFirmware","width","message","messagename","afterClosed","addCommand","applyFilter","AddCommand","PostData","close","addCommandForm","mutate","mutation","PacketID","deviceId","CommandName","MessageFormat","error","ClusterArrays","json","jsonObject","JSON","parse","country","capital","oops","stringify","MessageName","str","IotDeviceOutBound","post","deviceID","_deviceOutbound","headers","_getDevice","OutboundStatusComponent","temp1","fileName","displayedColumns1","listData","sortingDataAccessor","property","Message","Outbound","invoice","dispatch","from","to","sort1","paginator1","listData1","deviceJSON","multipleDevice","clear","OutboundService","_outboundapi","deviceList","_multipleDeviceapi","CustomDateFormat","_parse","dateInput","_display","monthYearLabel","dateA11yLabel","monthYearA11yLabel","display","DatePickerFormatDirective","matDateFormat","ngControl","format","configDateParse","updateDateFormat","configDateDisplay","valueAccessor","writeValue","AuthGuard","authenticationService","state","userValue","queryParams","returnUrl","url","AuthenticationService","userSubject","asObservable","loginData","_loginProdUrl","authdata","next","TokenInterceptorService","_loginUrl","request","userdetails","isLoggedIn","isApiUrl","startsWith","clone","setHeaders","Authorization","handle","UpgradeFirmwareCombinationComponent","Upgrade","javaV","CV","onClicking","UploadCFirmwareService","_firmwareUpload","UploadCFirmwareComponent","uploadCFirmware","hide","uploadC","Name","ReleaseNote","firmwareType","IsFirmwareC","Named","ID","Number","uploadCForm","createCFirmware","navigation","editForm","resetForm","uploadFormreset","onEdit","editFormreset","ServicesService","_firmwareFileUpload","responseType","UploadIotFirmwareComponent","uploadIot","versionName","Type","formData","FormData","append","uploadFirmware","InsertUTC","UpdateUTC","IsActive","ReleaseNotes","IsFirmware","isSNM476","postMethod","UploadJavaFirmwareService","UploadJavaFirmwareComponent","uploadJavaFirmware","uploadJava","createJavaFirmware","environment","production","_loginStg","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn-bd\": \"./node_modules/moment/locale/bn-bd.js\",\n\t\"./bn-bd.js\": \"./node_modules/moment/locale/bn-bd.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-in\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-in.js\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-sg\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./en-sg.js\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-mx\": \"./node_modules/moment/locale/es-mx.js\",\n\t\"./es-mx.js\": \"./node_modules/moment/locale/es-mx.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fil\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fil.js\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-deva\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-deva.js\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./oc-lnc\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./oc-lnc.js\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tk\": \"./node_modules/moment/locale/tk.js\",\n\t\"./tk.js\": \"./node_modules/moment/locale/tk.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-mo\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-mo.js\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { FmdashboardComponent } from './fmdashboard/fmdashboard.component';\r\nimport { UploadCFirmwareComponent } from './upload-c-firmware/upload-c-firmware.component';\r\nimport { UploadJavaFirmwareComponent } from './upload-java-firmware/upload-java-firmware.component';\r\nimport { UploadIotFirmwareComponent } from './upload-iot-firmware/upload-iot-firmware.component';\r\nimport { UpgradeFirmwareCombinationComponent } from './upgrade-firmware-combination/upgrade-firmware-combination.component';\r\nimport { DeviceSearchComponent } from './device-search/device-search.component';\r\nimport { SingleDeviceSearchComponent } from './device-search/single-device-search/single-device-search.component';\r\nimport { OutboundStatusComponent } from './outbound-status/outbound-status.component';\r\nimport { OtherOTAPCommandComponent } from './other-otap-command/other-otap-command.component';\r\nimport { FirmwareReportComponent } from './firmware-report/firmware-report.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { CustomerselectionComponent } from './customerselection/customerselection.component';\r\nimport { AuthGuard } from './services/auth.guard';\r\n\r\nconst routes: Routes = [\r\n  \r\n    {\r\n      path: '', redirectTo: 'login', pathMatch: 'full'\r\n    },\r\n    {\r\n      path: 'dashboard', component: DashboardComponent, canActivate: [AuthGuard]\r\n    },\r\n    {\r\n      path: 'Firmware', component: FmdashboardComponent\r\n    },\r\n    {\r\n      path: 'upload/c', component: UploadCFirmwareComponent, canActivate: [AuthGuard]\r\n    },\r\n    {\r\n      path: 'upload/java', component:  UploadJavaFirmwareComponent\r\n    },\r\n    {\r\n      path: 'upload/iot', component:  UploadIotFirmwareComponent\r\n    },\r\n  \r\n    {\r\n      path: 'deviceSearch/:device', component:  DeviceSearchComponent\r\n    },\r\n    {\r\n      path: 'upgrade', component:  UpgradeFirmwareCombinationComponent\r\n    },\r\n    {\r\n      path: 'deviceSearch/single_device/:id', component:  SingleDeviceSearchComponent\r\n    },\r\n    {\r\n      path: 'outboundstatus', component:  OutboundStatusComponent\r\n    },\r\n    {\r\n      path: 'othercommand/:device', component:  OtherOTAPCommandComponent \r\n    },\r\n    {\r\n      path: 'firmwarereport', component:   FirmwareReportComponent\r\n    },\r\n    {\r\n      path: 'login', component:    LoginComponent \r\n    },\r\n    {\r\n      path: 'customerselection', component:    CustomerselectionComponent\r\n    },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { \r\n\r\n  \r\n}\r\n","import { Component,OnInit  } from '@angular/core';\r\nimport {COMMA, ENTER} from '@angular/cdk/keycodes';\r\nimport {MatChipInputEvent} from '@angular/material/chips';\r\nimport { Router } from '@angular/router';\r\nimport { Firmware } from './model/model';\r\nimport {Apollo , QueryRef} from 'apollo-angular';\r\nimport gql from \"graphql-tag\";\r\nimport { map, shareReplay } from 'rxjs/operators';\r\nimport { from, Observable, of } from 'rxjs'\r\nimport { ExportToCsv } from 'export-to-csv';\r\n\r\n\r\nexport interface Fruit {\r\n  name: string;\r\n}\r\n\r\nexport type devicetype ={\r\n  ID:Number;\r\n  DeviceType:String;\r\n  IsActive:Boolean;\r\n}\r\n\r\n\r\nexport type DataQuery ={\r\n  devicetype:devicetype[]\r\n}\r\n\r\n// const QUERY = gql`\r\n// {\r\n//   devicetype {\r\n//     ID\r\n//     DeviceType\r\n//     IsActive\r\n//   }\r\n// }\r\n// `;\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  public headerFlag = false;\r\n  emp:object =[];\r\n  emp1:object =[];\r\n  emp2:object =[];\r\n  title = 'osg';\r\n  public firmwares: Firmware;\r\n  visible = true;\r\n  selectable = true;\r\n  removable = true;\r\n  addOnBlur = true;\r\n  firmwareValues: string[];\r\n  OtapDevice= [\r\n    {\"name\" : \"TAP66\"},\r\n    {\"name\" : \"TAP76\"},\r\n    {\"name\" : \"SNM476\"}\r\n  ]\r\n  \r\n  readonly separatorKeysCodes: number[] = [ENTER, COMMA];\r\n  fruits: Fruit[] = [\r\n    {name: 'Lemon'},\r\n    {name: 'Lime'},\r\n    {name: 'Apple'},\r\n  ];\r\n  count= 0\r\nquery$: Observable<devicetype[]>;\r\n  constructor(\r\n    private router: Router,private apollo: Apollo) {\r\n      this.firmwares = new Firmware();\r\n      this.firmwareValues = this.firmwares.name;\r\n     }\r\n\r\n     ngOnInit() {\r\n\r\n      const source$ = this.apollo.query<DataQuery>({\r\n        query: gql`\r\n        {\r\n          devicetype {\r\n            ID\r\n            DeviceType\r\n            IsActive\r\n          }\r\n        }`\r\n        \r\n      }).pipe(shareReplay(1))\r\n\r\n source$.pipe(map(result => result.data && result.data.devicetype)).subscribe((data) => this.emp =data);\r\n   \r\n      \r\n\r\n//  const source1$ = this.apollo.query<DataQuery>({\r\n//   query: gql`\r\n//   {\r\n//     devicetype {\r\n//       ID\r\n//       DeviceType\r\n//       IsActive\r\n//     }\r\n//   }`,\r\n// }).pipe(shareReplay(1))\r\n\r\n// source1$.pipe(map(result => result.data && result.data.devicetype)).subscribe((data) => this.emp1 =data);\r\n\r\n\r\n  \r\n  }\r\n\r\n\r\n     element: HTMLElement;\r\n     toggleActive(event:any){\r\n      \r\n      event.preventDefault();\r\n      if(this.element !== undefined){\r\n        this.element.style.backgroundColor = \"white\";\r\n        this.element.style.color = \"#666666\";\r\n      } \r\n      var target = event.currentTarget;\r\n      target.style.backgroundColor = \"#005F9E\";\r\n      target.style.color = \"white\"\r\n      this.element = target;\r\n    }\r\n\r\n    dashboard(){\r\n      // this.emp2 = this.emp1\r\n      // console.log(this.emp2)\r\n      \r\n    }\r\n    \r\n    firmware(){\r\n      this.router.navigate(['Firmware']);\r\n      console.log('Firmware Dashboard');\r\n    }\r\n    \r\n    add(event: MatChipInputEvent): void {\r\n      const input = event.input;\r\n      const value = event.value;\r\n  \r\n      // Add our fruit\r\n      if ((value || '').trim()) {\r\n        this.fruits.push({name: value.trim()});\r\n      }\r\n  \r\n      // Reset the input value\r\n      if (input) {\r\n        input.value = '';\r\n      }\r\n    }\r\n  \r\n    remove(fruit: Fruit): void {\r\n      const index = this.fruits.indexOf(fruit);\r\n  \r\n      if (index >= 0) {\r\n        this.fruits.splice(index, 1);\r\n      }\r\n    }\r\n\r\n    deviceSearch(device) {\r\n      this.router.navigate(['/deviceSearch', device])\r\n    }\r\n\r\n\r\n\r\nexit(){\r\n  setTimeout(() =>  location.reload(),100)\r\n}\r\n    \r\n}\r\n","\r\n<div class=\"example-container\">\r\n  <mat-toolbar class=\"toolbar\">\r\n    <mat-toolbar-row>\r\n      <mat-icon class=\"menus\"  (click)=\"sidenav.toggle()\">menu</mat-icon> \r\n      \r\n     <h3 class=\"logo\">OSG OPS</h3>\r\n      <div class=\"rightside\">\r\n        <a  matTooltip=\"Global Search\"\r\n        aria-label=\"Button that displays a tooltip when focused or hovered over\"> <img src=\"../assets/Search.png\"/></a>\r\n       <!-- <mat-menu #menuse=\"matMenu\" >\r\n        [matMenuTriggerFor]=\"menuse\"\r\n          <div class=\"search\" mat-menu-item [disableRipple]=\"true\" (click)=\"$event.stopPropagation()\">\r\n            <mat-form-field appearance= \"outline\" class=\"example-chip-list\" >\r\n              <mat-label>Search</mat-label>\r\n              <mat-chip-list #chipList aria-label=\"Fruit selection\">\r\n                <mat-chip *ngFor=\"let fruit of fruits\" [selectable]=\"selectable\"\r\n                        [removable]=\"removable\" (removed)=\"remove(fruit)\">\r\n                  {{fruit.name}}\r\n                  <mat-icon matChipRemove *ngIf=\"removable\">cancel</mat-icon>\r\n                </mat-chip>\r\n                <input placeholder=\"Search\"\r\n                      [matChipInputFor]=\"chipList\"\r\n                      [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\r\n                      [matChipInputAddOnBlur]=\"addOnBlur\"\r\n                      (matChipInputTokenEnd)=\"add($event)\">\r\n              </mat-chip-list>\r\n            </mat-form-field>\r\n          </div>\r\n        </mat-menu>\r\n        -->\r\n        <a  matTooltip=\"Notification\"\r\n        aria-label=\"Button that displays a tooltip when focused or hovered over\"> <img src=\"../assets/Notifications.png\"/></a>\r\n       <!-- <mat-menu #menued=\"matMenu\">\r\n         [matMenuTriggerFor]=\"menued\"\r\n          <button mat-menu-item>\r\n            <mat-icon>dialpad</mat-icon>\r\n            <span>Redial</span>\r\n          </button>\r\n          <button mat-menu-item>\r\n            <mat-icon>voicemail</mat-icon>\r\n            <span>Check voice mail</span>\r\n          </button>\r\n          <button mat-menu-item>\r\n            <mat-icon>notifications_off</mat-icon>\r\n            <span>Disable alerts</span>\r\n          </button>\r\n        </mat-menu>-->\r\n        <a  matTooltip=\"App Launcher\"\r\n        aria-label=\"Button that displays a tooltip when focused or hovered over\"> <img src=\"../assets/App launcher.png\"/> </a>\r\n      \r\n   <!--     <mat-menu #menu1=\"matMenu\" >\r\n          [matMenuTriggerFor]=\"menu1\" \r\n          <span mat-menu-item [disableRipple]=\"true\" (click)=\"$event.stopPropagation()\">\r\n         \r\n        <form class=\"example-form\">\r\n          <h5 style=\"text-align: center;\">Apps</h5>\r\n          <div class=\"row\">\r\n            <div class=\"col-sm-4 col-xs-4\">\r\n              <div class=\"sub-menu\">\r\n                <mat-icon>home</mat-icon>\r\n                <a class=\"menu-title\">Home</a>\r\n              </div>\r\n             \r\n            \r\n            </div>\r\n            <div class=\"col-sm-4 col-xs-4\" > \r\n               <div class=\"sub-menu\">\r\n                  <mat-icon>account_box</mat-icon>\r\n                  <a class=\"menu-title\">Account</a>\r\n            </div>\r\n          </div>\r\n            <div class=\"col-sm-4 col-xs-4\">\r\n              <div class=\"sub-menu\">\r\n                <mat-icon>build_circle</mat-icon>\r\n                <a class=\"menu-title\">Build</a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-sm-4 col-xs-4\">\r\n              <div class=\"sub-menu\">\r\n                <mat-icon>explore</mat-icon>\r\n                <a class=\"menu-title\">Explore</a>\r\n              </div>\r\n             \r\n            \r\n            </div>\r\n            <div class=\"col-sm-4 col-xs-4\" > \r\n               <div class=\"sub-menu\">\r\n                  <mat-icon>\r\n                    pending</mat-icon>\r\n                  <a class=\"menu-title\">\r\n                    Pending</a>\r\n            </div>\r\n          </div>\r\n            <div class=\"col-sm-4 col-xs-4\">\r\n              <div class=\"sub-menu\">\r\n                <mat-icon>settings</mat-icon>\r\n                <a class=\"menu-title\">Settings</a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <div class=\"col-sm-4 col-xs-4\">\r\n              <div class=\"sub-menu\">\r\n                <mat-icon>save</mat-icon>\r\n                <a class=\"menu-title\">Save</a>\r\n              </div>\r\n             \r\n            \r\n            </div>\r\n            <div class=\"col-sm-4 col-xs-4\" > \r\n               <div class=\"sub-menu\">\r\n                  <mat-icon>access_alarms</mat-icon>\r\n                  <a class=\"menu-title\">Alarm</a>\r\n            </div>\r\n          </div>\r\n            <div class=\"col-sm-4 col-xs-4\">\r\n              <div class=\"sub-menu\">\r\n                <mat-icon>wifi_tethering</mat-icon>\r\n                <a class=\"menu-title\">Wifi</a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n       \r\n        <button color=\"primary\" mat-raised-button>MORE..</button>\r\n        </form>\r\n               </span>\r\n        </mat-menu>-->\r\n        <a matTooltip=\"Profile\"\r\n        aria-label=\"Button that displays a tooltip when focused or hovered over\"> <img src=\"../assets/Profile.png\"/> </a>\r\n\r\n    </div>\r\n\r\n    </mat-toolbar-row>\r\n  </mat-toolbar>\r\n\r\n  <mat-sidenav-container class=\"example-sidenav-container\" autosize>\r\n    <mat-sidenav #sidenav class=\"example-sidenav\" mode=\"side\"  opened role=\"navigation\" position=\"start\">\r\n      \r\n      <mat-nav-list class=\"dashboard\" style=\"height: 50%;\">\r\n     \r\n        <a mat-list-item routerLink=\"/Firmware\" routerLinkActive=\"active-list-item \" >\r\n          <img src=\"../assets/Dashboard.png\"/>\r\n        </a>\r\n\r\n      \r\n        <a mat-list-item (click)=\"menuTrigger.openMenu()\"  routerLinkActive=\"active-list-item\" [routerLinkActiveOptions]=\"{exact: true}\" ><div #menuTrigger=\"matMenuTrigger\"  [matMenuTriggerFor]=\"menu1\"></div>\r\n          <img src=\"../assets/Manage firmware.png\"/>\r\n         \r\n        <mat-menu #menu1=\"matMenu\" class=\"custom-class1\">\r\n          <div *ngFor=\"let device of emp\">\r\n            <div *ngIf=\"device.IsActive == true\">\r\n          <button   class=\"sidetxt\"  [routerLink] = \"'/deviceSearch/'+device.DeviceType\" [routerLinkActive] ='\"active-list-item1\"' [routerLinkActiveOptions]=\"{exact: true}\" \r\n            mat-menu-item>{{device.DeviceType}}</button>\r\n          <mat-divider></mat-divider>\r\n      \r\n          <p hidden [routerLink] = \"['/deviceSearch/'+device]\" >single</p>\r\n          <p hidden routerLink=\"/deviceSearch/single_device/1\">single</p>\r\n          <p hidden routerLink=\"/deviceSearch/single_device/2\">multi</p>\r\n        </div>\r\n        </div>\r\n        </mat-menu>\r\n      </a>\r\n\r\n      <a mat-list-item (click)=\"menuTrigger3.openMenu()\"  routerLinkActive=\"active-list-item\" [routerLinkActiveOptions]=\"{exact: true}\"><div #menuTrigger3=\"matMenuTrigger\"  [matMenuTriggerFor]=\"menu3\"></div>\r\n        <img src=\"../assets/Other OTAP command.png\"/>\r\n        <mat-menu #menu3=\"matMenu\" class=\"custom-class\" >\r\n          <div *ngFor=\"let device of OtapDevice\">\r\n            \r\n            <button  class=\"sidetxt\"  [routerLink] = \"'/othercommand/'+device.name\" [routerLinkActive] ='\"active-list-item1\"' [routerLinkActiveOptions]=\"{exact: true}\" \r\n              mat-menu-item  (click)=\"exit()\">{{device.name}}</button>\r\n            <mat-divider></mat-divider>\r\n          </div>\r\n        </mat-menu>\r\n        </a>\r\n        <a mat-list-item (click)=\"menuTrigger1.openMenu()\"  routerLinkActive=\"active-list-item\" [routerLinkActiveOptions]=\"{exact: true}\"><div #menuTrigger1=\"matMenuTrigger\"  [matMenuTriggerFor]=\"menu\"></div>\r\n        <mat-icon>storage</mat-icon>\r\n        \r\n        <mat-menu #menu=\"matMenu\"  class=\"custom-class\" >\r\n          <button class=\"sidetxt1\" mat-menu-item  routerLink=\"/upload/c\" routerLinkActive=\"active-list-item1\">UPLOAD C FIRMWARE</button>\r\n          <mat-divider></mat-divider>\r\n          <button class=\"sidetxt1\" mat-menu-item routerLink=\"/upload/java\" routerLinkActive=\"active-list-item1\"> UPLOAD JAVA FIRMWARE</button>\r\n          <mat-divider></mat-divider>\r\n          <button class=\"sidetxt1\" mat-menu-item routerLink=\"/upload/iot\" routerLinkActive=\"active-list-item1\">UPLOAD IOT FIRMWARE</button>\r\n          <mat-divider></mat-divider>\r\n          <button class=\"sidetxt1\" mat-menu-item routerLink=\"/upgrade\" routerLinkActive=\"active-list-item1\">UPDATE FIRMWARE COMBINATION</button>\r\n        </mat-menu>\r\n         </a>\r\n        <a mat-list-item (click)=\"menuTrigger2.openMenu()\"  routerLinkActive=\"active-list-item\" [routerLinkActiveOptions]=\"{exact: true}\"><div #menuTrigger2=\"matMenuTrigger\"  [matMenuTriggerFor]=\"menu2\"></div>\r\n          <i class=\"fa fa-binoculars\"></i>\r\n          \r\n         \r\n         <mat-menu #menu2=\"matMenu\" >\r\n           <button class=\"sidetxt1\" mat-menu-item routerLink=\"/outboundstatus\"  routerLinkActive=\"active-list-item1\">OUTBOUND STATUS CDG</button>\r\n          \r\n         </mat-menu>\r\n         </a>\r\n        \r\n         <a mat-list-item routerLink=\"/firmwarereport\" routerLinkActive=\"active-list-item \" >\r\n         <img src=\"../assets/Firmware Report.png\"/>\r\n         \r\n         </a>\r\n         <a style=\"position: relative; top: 80%;\" (click)=\"dashboard()\" mat-list-item>\r\n           <img src=\"../assets/help.png\">\r\n         </a>\r\n      \r\n      \r\n      </mat-nav-list>\r\n    </mat-sidenav>\r\n    <mat-sidenav-content>\r\n      \r\n      <router-outlet></router-outlet>\r\n    </mat-sidenav-content>\r\n  </mat-sidenav-container>\r\n\r\n\r\n\r\n \r\n\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule , LOCALE_ID } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport { FmdashboardComponent } from './fmdashboard/fmdashboard.component';\r\nimport { UploadCFirmwareComponent } from './upload-c-firmware/upload-c-firmware.component';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport { FormsModule } from '@angular/forms';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport { UploadJavaFirmwareComponent } from './upload-java-firmware/upload-java-firmware.component';\r\nimport { UploadIotFirmwareComponent } from './upload-iot-firmware/upload-iot-firmware.component';\r\nimport { UpgradeFirmwareCombinationComponent } from './upgrade-firmware-combination/upgrade-firmware-combination.component';\r\nimport { DeviceSearchComponent } from './device-search/device-search.component';\r\nimport { SingleDeviceSearchComponent } from './device-search/single-device-search/single-device-search.component';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport { StylePaginatorDirective } from './device-search/single-device-search/style-paginator.directive';\r\nimport { OutboundStatusComponent } from './outbound-status/outbound-status.component';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { DatePickerFormatDirective } from './pipe/date-picker-format.directive';\r\nimport { OtherOTAPCommandComponent } from './other-otap-command/other-otap-command.component';\r\nimport { FirmwareReportComponent } from './firmware-report/firmware-report.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { CustomerselectionComponent } from './customerselection/customerselection.component';\r\nimport { AuthenticationService } from './services/authentication.service';\r\nimport {  OutboundService } from './outbound-status/outbound.service';\r\n\r\nimport { TokenInterceptorService } from './services/token-interceptor.service';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { MatTableExporterModule } from 'mat-table-exporter';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport { GraphQLModule } from './graphql.module';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {addCommand} from './other-otap-command/other-otap-command.component'\r\nimport {flashFirmware} from './other-otap-command/other-otap-command.component'\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    DashboardComponent,\r\n    FmdashboardComponent,\r\n    UploadCFirmwareComponent,\r\n    UploadJavaFirmwareComponent,\r\n    UploadIotFirmwareComponent,\r\n    UpgradeFirmwareCombinationComponent,\r\n    DeviceSearchComponent,\r\n    SingleDeviceSearchComponent,\r\n    StylePaginatorDirective,\r\n    OutboundStatusComponent,\r\n    DatePickerFormatDirective,\r\n    OtherOTAPCommandComponent,\r\n    FirmwareReportComponent,\r\n    LoginComponent,\r\n    CustomerselectionComponent,\r\n    addCommand,\r\n    flashFirmware\r\n    \r\n  \r\n    \r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatSidenavModule,\r\n    MatListModule,\r\n    MatButtonModule,\r\n    MatTooltipModule,\r\n    MatMenuModule,\r\n    MatChipsModule,\r\n    MatAutocompleteModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatCardModule,\r\n    MatTabsModule,\r\n    FormsModule,\r\n    MatSelectModule,\r\n    MatRadioModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatCheckboxModule,\r\n    MatSortModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    HttpClientModule,\r\n    MatTableExporterModule,\r\n    MatProgressSpinnerModule,\r\n    MatSnackBarModule,\r\n    GraphQLModule,\r\n    MatDialogModule\r\n\r\n  ],\r\n  entryComponents: [addCommand,flashFirmware],\r\n  providers: [ AuthenticationService,OutboundService ,{\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: TokenInterceptorService,\r\n    multi: true\r\n  },\r\n  { provide: LOCALE_ID, useValue: 'en-US'}\r\n],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { NgForm ,Validators} from '@angular/forms';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthenticationService } from '../services/authentication.service';\r\nimport { OutboundService } from '../outbound-status/outbound.service'\r\nimport {Apollo , QueryRef} from 'apollo-angular';\r\nimport gql from \"graphql-tag\";\r\nimport { map, shareReplay } from 'rxjs/operators';\r\nimport { Observable, of } from 'rxjs'\r\n\r\n\r\nexport type customer={\r\nName: string\r\nID: number\r\nfk_OEMID: number\r\nParentCustomerID: number\r\nfk_CustomerTypeId:number\r\nInsertUTC:number\r\n}\r\nexport type DataQuery ={\r\ncustomer:customer[]\r\n}\r\nexport type customeraccountrelationshipQuery={\r\nID:number\r\nAccountName:string\r\nfk_DealerId:number\r\nfk_CustomerId:number\r\nBSSID:number\r\nInsertUTC:number\r\n}\r\nexport type DataQuery1 ={\r\ncustomeraccountrelationshipQuery:customeraccountrelationshipQuery[]\r\n}\r\n\r\n\r\n@Component({\r\nselector: 'app-customerselection',\r\ntemplateUrl: './customerselection.component.html',\r\nstyleUrls: ['./customerselection.component.css']\r\n})\r\n\r\n\r\nexport class CustomerselectionComponent implements OnInit {\r\nbuttonDisabled:boolean=true;\r\npublic customer;\r\npublic customeraccountrelationshipQuery\r\npublic customerValue;\r\nconstructor(private apollo: Apollo, private router: Router,private _auth: AuthenticationService, private outbound: OutboundService,) { }\r\nselectedSub;\r\npublic mail\r\nshowDiv:boolean=false;\r\n\r\n\r\nngOnInit(): void {\r\nconst source$ = this.apollo.query\r\n<DataQuery>\r\n({\r\nquery: gql`\r\n{\r\ncustomer {\r\nName\r\nID\r\nfk_OEMID\r\nParentCustomerID\r\nfk_CustomerTypeId\r\nInsertUTC\r\n}\r\n}`\r\n}).pipe(shareReplay(1))\r\nsource$.pipe(map(result => result.data && result.data.customer)).subscribe((data) => this.customer = data);\r\nconst source1$ = this.apollo.query\r\n<DataQuery1>\r\n({\r\nquery: gql`\r\n{customeraccountrelationshipQuery{\r\nID\r\nAccountName\r\nfk_DealerId\r\nfk_CustomerId\r\nBSSID\r\nInsertUTC\r\n}}`\r\n}).pipe(shareReplay(1))\r\nsource1$.pipe(map(result => result.data && result.data.customeraccountrelationshipQuery)).subscribe((data) => this.customeraccountrelationshipQuery = data);  \r\nthis.mail = localStorage.getItem('mail')\r\n}\r\n\r\n\r\nonNgModelChange(event){\r\n\r\n}\r\nreset(){\r\nthis.selectedSub='';\r\nthis.customerValue='';\r\nthis.buttonDisabled=true;\r\n}\r\nchange(){\r\nthis.router.navigate(['dashboard'])\r\n}\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","<mat-card class=\"logged-in\">\r\n   <div class=\"loggedin\">\r\n      <p> <b> LOGGED IN AS: {{this.mail}} </b> </p>\r\n   </div>\r\n </mat-card>\r\n <div class=\"h\">\r\n   <p> <b>  CUSTOMER SELECTION: </b></p>\r\n </div>\r\n <div class=\"main-container\">\r\n   <mat-card class=\"form\">\r\n      <mat-form-field class=\"mat-form\" appearance=\"outline\">\r\n         <mat-label>\r\n            (1050) Ashok Leyland\r\n         </mat-label>\r\n         <mat-select  #customerSelect [(ngModel)]=\"customerValue\">\r\n         <mat-option (click)=\"showDiv= true;buttonDisabled=!true;this.selectedSub='' \" *ngFor=\"let customer of customer\" [value]=\"customer.ID\">{{customer.ID}} {{customer.Name}}</mat-option>\r\n        \r\n      \r\n      </mat-select>\r\n      </mat-form-field>\r\n   </mat-card>\r\n \r\n   <div class=reset-and-select>\r\n      <button class=\"reset\" (click)=\"reset()\" mat-raised-button>Reset</button>\r\n      <button class=\"key\" [disabled]=\"buttonDisabled\"  (click)=\"change()\" mat-raised-button>Select</button>\r\n    </div>\r\n </div>\r\n \r\n <!-- <mat-card class=\"form\">\r\n   <mat-form-field class=\"mat-form\" appearance=\"outline\">\r\n      <mat-label>\r\n         Customers\r\n      </mat-label>\r\n      <mat-select [(ngModel)]=\"selectedSub\" >\r\n      <div *ngFor=\"let customer of customeraccountrelationshipQuery\">\r\n         <div *ngIf =\"customer.fk_CustomerId == customerValue\">\r\n            <mat-option (click)=\"buttonDisabled=!true\"  [value]=\"customer\" >{{customer.fk_CustomerId}} {{customer.AccountName}}</mat-option>\r\n         </div>\r\n      </div>\r\n      </mat-select>\r\n   </mat-form-field>\r\n </mat-card> -->\r\n \r\n \r\n ","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  element: HTMLElement;\r\n  toggleActive(event:any){\r\n   \r\n  \r\n   if(this.element !== undefined){\r\n     this.element.style.backgroundColor = \"#F5F5F5\";\r\n     this.element.style.color = \"#666666\";\r\n   } \r\n   var target = event.currentTarget;\r\n   target.style.backgroundColor = \"#005F9E\";\r\n   target.style.color = \"white\"\r\n   this.element = target;\r\n }\r\n\r\n \r\n  firmware(){\r\n    this.router.navigate(['Firmware']);\r\n  }\r\n}\r\n","<div class=\"container-fluid main\">\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-12 head\">\r\n           <h2>WELCOME TO OSG OPS</h2>\r\n        </div>  \r\n\r\n\r\n        \r\n\r\n    </div>\r\n</div>\r\n\r\n<div class=\"container-fluid mainpg\">\r\n    <p  class=\"tyt\">Please Select Your Application</p>\r\n    <div class=\"row\">\r\n      \r\n        <div class=\"col-sm-4 col-lg-2\" >\r\n            \r\n         <mat-card class=\"imgs\" (click)=\"toggleActive($event)\">\r\n           <mat-icon class=\"ins\">article</mat-icon>\r\n             <h4>ASSET</h4>\r\n             <h4>MANAGER</h4>\r\n         </mat-card>\r\n        </div>   \r\n        <div class=\"col-sm-4 col-lg-2\">\r\n            \r\n            <mat-card class=\"imgs\" (click)=\"toggleActive($event)\">\r\n              <mat-icon  class=\"ins\">router</mat-icon>\r\n              <h4>DEVICE</h4>\r\n              <h4>MANAGER</h4>\r\n            </mat-card>\r\n        </div>   \r\n\r\n        <div class=\"col-sm-4 col-lg-2\">\r\n            \r\n            <mat-card class=\"imgs\" (click)=\"firmware();toggleActive($event)\">\r\n              <mat-icon class=\"ins\">memory</mat-icon>\r\n              <h4>FIRMWARE</h4>\r\n              <h4>MANAGER</h4>\r\n            </mat-card>\r\n        </div>   \r\n           \r\n        <div class=\"col-sm-4 col-lg-2\"  >\r\n            \r\n            <mat-card class=\"imgs\" (click)=\"toggleActive($event)\">\r\n              <mat-icon class=\"ins\">text_snippet</mat-icon>\r\n              <h4>SUBSCRIPTION</h4>\r\n              <h4>MANAGER</h4>\r\n            </mat-card>\r\n           </div>   \r\n           \r\n           \r\n           <div class=\"col-sm-4 col-lg-2\" >\r\n            \r\n            <mat-card class=\"imgs\" (click)=\"toggleActive($event)\">\r\n              <mat-icon class=\"ins\">dns</mat-icon>\r\n              <h4>SUPPORT</h4>\r\n              <h4>MANAGER</h4>\r\n            </mat-card>\r\n           </div>   \r\n\r\n\r\n           <div class=\"col-sm-4 col-lg-2\"  >\r\n            \r\n            <mat-card class=\"imgs\" (click)=\"toggleActive($event)\">\r\n              <mat-icon class=\"ins\">local_post_office</mat-icon>\r\n              <h4>SMS</h4>\r\n              <h4>MANAGER</h4>\r\n            </mat-card>\r\n           </div>   \r\n           \r\n\r\n    </div>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-device-search',\r\n  templateUrl: './device-search.component.html',\r\n  styleUrls: ['./device-search.component.css']\r\n})\r\nexport class DeviceSearchComponent implements OnInit {\r\n\r\n  id\r\n  deviceType\r\n  constructor(private router: Router,private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.route.params.subscribe(params => {\r\n      this.deviceType = params['device'];\r\n      localStorage.setItem('deviceType',this.deviceType)\r\n     \r\n    });\r\n  }\r\n\r\n\r\n  single(){\r\n    this.id=1\r\n    this.router.navigate(['deviceSearch/single_device/',this.id]);\r\n  }\r\n  multi(){\r\n    this.id=2\r\n    this.router.navigate(['deviceSearch/single_device/',this.id]); \r\n  }\r\n\r\n  dash(){\r\n    this.router.navigate(['Firmware']);\r\n  }\r\n}\r\n","<div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n        <div class=\"col-12\">\r\n            <p class=\"tyt\"><span>Menu</span> > <span (click)=\"dash();\">Fireware Manager</span> > <span>Manage Firmware</span> > <span>Customer Ashok Leyland</span></p>\r\n            <mat-divider></mat-divider>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<mat-card>\r\n    <mat-icon class=\"icons\">cloud_upload</mat-icon>\r\n    <p class=\"t1\">Upgrade your firmware commands here </p>\r\n\r\n    <button mat-raised-button (click)=\"single()\" class=\"one \">\r\n        <mat-icon class=\"con1\">search</mat-icon>\r\n        Single Device Search\r\n    </button>\r\n    <button mat-raised-button (click)=\"multi()\" class=\"two\">\r\n        <mat-icon class=\"con1\">arrow_circle_up\r\n        </mat-icon>\r\n        Multiple Device Update\r\n    </button>\r\n</mat-card>","\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient,HttpHeaders } from '@angular/common/http'\r\nimport { Router } from '@angular/router'\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { StylePaginatorDirective } from '../style-paginator.directive';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DevicesearchService {\r\n  constructor(private http: HttpClient,\r\n    private _router: Router) { }\r\n\r\n  searchDetails() {\r\n    return this.http.get<any>(`${environment._fwdashboard}`).pipe(map(user => {\r\n     \r\n      return user;\r\n  }));\r\n  }\r\n\r\n  getVersionDetails() {\r\n    return this.http.get<any>(`${environment._dashboard}`).pipe(map(user => {\r\n     \r\n      return user;\r\n  }));\r\n  }\r\n\r\n  devicePagination(page){\r\n    return this.http.get<any>(`${environment._deviceWithPagination}`+page+``).pipe(map(user => {\r\n     \r\n      return user;\r\n  }));\r\n  }\r\n\r\n \r\n  PublishedVersion(data) {\r\n    return this.http.put<object>(`${environment._publishVersion}`, data).pipe(map(user => {\r\n     \r\n      return user;\r\n  }));\r\n  }\r\n}\r\n","import { Component, OnInit, AfterContentInit, AfterViewInit , AfterContentChecked} from '@angular/core';\r\nimport {ViewChild} from '@angular/core';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {MatSort , Sort} from '@angular/material/sort'; \r\nimport {DevicesearchService} from \"./service/devicesearch.service\"\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { __assign } from 'tslib';\r\nimport {MatSnackBar} from '@angular/material/snack-bar';\r\nimport { stringify } from '@angular/compiler/src/util';\r\nimport {Apollo , QueryRef} from 'apollo-angular';\r\nimport gql from \"graphql-tag\";\r\nimport { map, shareReplay } from 'rxjs/operators';\r\n \r\nexport type detailC = {\r\n  ID:Number;\r\n  Name:String;\r\n   ServerIP:String;\r\n  UserName:String;\r\n  Password:String;\r\n  FileSize:Number;\r\n  FilePath:String;\r\n  Port:Number;\r\n  InsertUTC:String;\r\n  UpdateUTC:String;\r\n  IsActive:Boolean;\r\n  ReleaseNotes:String;\r\n  isSNM476:Boolean;\r\n}\r\n\r\nexport type DataQuery = {\r\n  detailC:detailC[]\r\n}\r\n\r\nexport type detailJava = {\r\n  ID:Number;\r\n  Name:String;\r\n   ServerIP:String;\r\n  UserName:String;\r\n  Password:String;\r\n  FileSize:Number;\r\n  FilePath:String;\r\n  Port:Number;\r\n  InsertUTC:String;\r\n  UpdateUTC:String;\r\n  IsActive:Boolean;\r\n  ReleaseNotes:String;\r\n  isSNM476:Boolean;\r\n}\r\n\r\nexport type DataQuery1 = {\r\n  detailJava:detailJava[]\r\n}\r\n\r\n@Component({\r\n  selector: 'app-single-device-search',\r\n  templateUrl: './single-device-search.component.html',\r\n  styleUrls: ['./single-device-search.component.css']\r\n})\r\n\r\n\r\n\r\n\r\nexport class SingleDeviceSearchComponent implements OnInit , AfterViewInit , AfterContentChecked ,AfterContentInit {\r\n\r\n\r\n  public entries: object = [];\r\n  public entries1: object = [];\r\n  public Versions: object = [];\r\n  FirmwareC: object = [];\r\n  messages:object =[]; \r\n  select = false;\r\n sample =[];\r\n selectedValue: string;\r\n  public file : File;\r\n  fileToUpload: File;\r\n  loadingFlag = true;\r\n  loadingFlag1 = true\r\n  temp = null\r\n  id\r\n  totalCount=0;\r\n  pageIndex=0;\r\n  searchKey:string;\r\n  public publishVersion: object =[];\r\n  searchType\r\n//displayedColumns: string[] = ['select','id','name','cn','np','mn1','mn2','ssd','sed','vtn','model','ccv','cjv'];\r\n  displayedColumns: string[]=[\"select\",\"deviceId\",\"deviceType\",\"cn\",\"Network_Provider\",\"mobileNumber\",\"mn2\",\"Subcription_StartDate\",\"Subcription_EndDate\",\"Vehicle_Type\",\"Vehicle_Model\",\"ccv\",\"cjv\",\"ignition\"]\r\n  dataSource : MatTableDataSource<any>\r\n  selection = new SelectionModel(false, []);\r\n\r\n\r\n// @ViewChild(MatPaginator) paginator: MatPaginator;\r\n// @ViewChild(MatSort) sort: MatSort;\r\n//DeviceID\",\"Device_Type\",\"CUSTOMER NAME\",\"Network Provider\",\"Mobile_Number\",\"Mobile number2 \",\"Subcription_StartDate\",\"Subcription_EndDate\",\"Vehicle_Type\",\"Vehicle_Model\",\"Current C Version\",\"Current Java Version\",\"ignition\"\r\n//value assigned to update\r\n\r\n  public version;\r\n  public ServerIP;\r\n  public FilePath\r\n  public FileSize\r\n  public Port\r\n  public UserName\r\n  public Password\r\n  public APN\r\n  public Device\r\n  public FirmwareVersion\r\n  public UserID\r\n\r\nngAfterContentInit(){\r\n \r\n\r\n}\r\nngAfterViewInit() {\r\n  if(this.loadingFlag == false){\r\n    this.dataSource.paginator = this.paginator \r\n   // this.dataSource.sort = this.sort;\r\n  }\r\n  \r\n}\r\n\r\n  constructor(private router: Router,private route: ActivatedRoute,private apollo: Apollo, private DevicesearchService: DevicesearchService,private _snackBar: MatSnackBar) { }\r\n\r\n  ngOnInit(): void {\r\n    this.searchType = localStorage.getItem('deviceType')\r\n  \r\n    const source$ = this.apollo.query<DataQuery>({\r\n      query: gql`\r\n      {\r\n        detailC {\r\n          ID\r\n          Name\r\n          ServerIP\r\n          UserName\r\n          Password\r\n          FileSize\r\n          FilePath\r\n          Port\r\n          InsertUTC\r\n          UpdateUTC\r\n          IsActive\r\n          ReleaseNotes\r\n          isSNM476\r\n        }\r\n      }`   \r\n    }).pipe(shareReplay(1))\r\n\r\n    source$.pipe(map(result => result.data && result.data.detailC)).subscribe((data) =>   \r\n    this.FirmwareC = data\r\n  );\r\n\r\n\r\n\r\n const source1$ = this.apollo.query<DataQuery1>({\r\n      query: gql`\r\n      {\r\n        detailJava {\r\n          ID\r\n          Name\r\n          ServerIP\r\n          UserName\r\n          Password\r\n          FileSize\r\n          FilePath\r\n          Port\r\n          InsertUTC\r\n          UpdateUTC\r\n          IsActive\r\n          ReleaseNotes\r\n          isSNM476\r\n        }\r\n      }`   \r\n    }).pipe(shareReplay(1))\r\n\r\n    source1$.pipe(map(result => result.data && result.data.detailJava)).subscribe((data) =>   \r\n    this.messages = data\r\n  );\r\n    // this.DevicesearchService.searchDetails().subscribe(\r\n    //   data => {\r\n    //     // this.dataSource = new MatTableDataSource(data)\r\n      \r\n    //     // this.dataSource ? this.loadingFlag = false : this.loadingFlag = true;\r\n      \r\n    //     // this.temp = this.dataSource.data.length;\r\n    //   }\r\n    // )\r\n    var pages = \"/specificChar?deviceType=\"+this.searchType+\"&page=\"+this.pageIndex+\"&size=10\";\r\n    this.entriesPost(pages);\r\n  \r\n\r\n    //  this.DevicesearchService.getVersionDetails().subscribe(\r\n    //    data => {\r\n    //     this.entries = data\r\n    //     function* entries(obj) {\r\n    //       for (let key of Object.keys(obj)) {\r\n    //         yield [key, obj[key]];\r\n    //       }\r\n    //    }\r\n  \r\n    //    for (let [key1, value1] of entries(this.entries)) {\r\n\r\n      \r\n    //     if(key1 == 'SearchData'){\r\n           \r\n    //        this.Versions = value1;\r\n        \r\n          \r\n    //     }\r\n\r\n    //     // for (let [key, value] of entries(value1)) {\r\n\r\n    //     // }\r\n        \r\n    //    }\r\n    //    }\r\n    //  ) \r\n    \r\n    this.route.params.subscribe(params => {\r\n      this.id = params['id'] -1;\r\n    });\r\n\r\n  \r\n   \r\n\r\n  \r\n  }\r\n\r\n  entriesPost(page){\r\n   \r\n   \r\n    this.DevicesearchService.devicePagination(page).subscribe(\r\n      data => {\r\n       \r\n        this.entries = data\r\n        function* entries(obj) {\r\n          for (let key of Object.keys(obj)) {\r\n            yield [key, obj[key]];\r\n          }\r\n       }\r\n  \r\n       for (let [key1, value1] of entries(this.entries)) {\r\n        if(key1 == \"totalCount\"){\r\n          this.totalCount = value1\r\n         \r\n        }\r\n         if(key1 == \"result\"){\r\n            this.dataSource = new MatTableDataSource(value1)\r\n      \r\n        this.dataSource ? this.loadingFlag = false : this.loadingFlag = true;\r\n      \r\n        this.temp = this.dataSource.data.length;\r\n         }\r\n       \r\n       }\r\n      }\r\n    )\r\n  }\r\n\r\n\r\n  pageChangeEvent(page){\r\n    \r\n    this.pageIndex = page.pageIndex;\r\n    this.loadingFlag = true\r\n    var pages = \"/specificChar?deviceType=\"+this.searchType+\"&page=\"+this.pageIndex+\"&size=10\";\r\n    this.entriesPost(pages)\r\n  }\r\n\r\n  search(){\r\n    //\r\n    var pages = \"/singleSearch?deviceid=\"+this.searchKey;\r\n    this.loadingFlag = true\r\n    this.entriesPost(pages)\r\n  }\r\n  \r\n  private paginator: MatPaginator;\r\n  private sort: MatSort;\r\n\r\n  \r\n\r\n  @ViewChild(MatSort) set matSort(ms: MatSort) {\r\n    this.sort = ms;\r\n  \r\n    this.setDataSourceAttributes();\r\n  }\r\n\r\n  @ViewChild(MatPaginator) set matPaginator(mp: MatPaginator) {\r\n    this.paginator = mp;\r\n\r\n    this.setDataSourceAttributes();\r\n  }\r\n\r\n\r\n  \r\n\r\n  setDataSourceAttributes() {\r\n    if(this.loadingFlag == false){\r\n  //  this.dataSource.paginator = this.paginator \r\n    this.dataSource.sort = this.sort;\r\n  }\r\n}\r\n\r\napplyFilter() {\r\n    \r\n  this.dataSource.filter = this.searchKey.trim().toLowerCase();\r\n}\r\n\r\n\r\nprivate isAllSelected() {\r\n  const numSelected = this.selection.selected.length;\r\n  const numRows = this.dataSource.data.length;\r\n  return numSelected === numRows;\r\n}\r\n\r\ntoggleRow(row: any, index: number) {\r\n  this.selection.toggle(row);\r\n \r\n  for (const [key, value] of Object.entries(row)) {\r\n    if(key == \"deviceId\")\r\n    {\r\n      this.Device = value\r\n     \r\n    }\r\n   \r\n  }\r\n}\r\n\r\n/** The label for the checkbox on the passed row */\r\ncheckboxLabel(row?: any): string {\r\n  if (!row) {\r\n   \r\n    return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\r\n    \r\n  }\r\n  return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\r\n}\r\n\r\n\r\n  ngAfterContentChecked()\t{\r\n  \r\n  }\r\n\r\n\r\n  changeTab(event) {\r\n    this.id = event.index;\r\n  }\r\n\r\n  listed(version){\r\n   \r\n    for (const [key, value] of Object.entries(version)) {\r\n      if(key == \"Name\")\r\n      {\r\n        this.version = value;\r\n      }\r\n      if(key == \"ServerIP\")\r\n      {\r\n        this.ServerIP = value;\r\n      }\r\n      if(key == \"FilePath\")\r\n      {\r\n        this.FilePath = value\r\n      }\r\n      if(key == \"FileSize\")\r\n      {\r\n        this.FileSize = value\r\n        \r\n   \r\n      }\r\n      if(key == \"Port\"){\r\n        this.Port= value;\r\n      }\r\n      if(key == \"UserName\"){\r\n        this.UserName = value\r\n      }\r\n      if(key == \"Password\"){\r\n        this.Password = value\r\n      }\r\n      // if(key == \"APN\"){\r\n      //   this.APN =value\r\n      // }\r\n      // if(key == \"ID\")\r\n      // {\r\n      //   this.UserID = value\r\n      // }\r\n    }\r\n  }\r\n\r\n  postData(selected){\r\n    this.select = selected\r\n    if(this.version != undefined && this.Device != undefined)\r\n    {\r\n      let objData = Object.assign({update: [{Device: this.Device , DeviceID: 351431 , CVersion: this.version , JavaVersion: \"\", ServerIP: this.ServerIP , FilePath: this.FilePath , FileSize: this.FileSize , FirmwareVersion: this.version , FirmwareType: 0 , Port: this.Port , UserName: this.UserName , Password: this.Password , FirmwareUpgradeEnum: 34 , APN: this.APN , AppInstanceID: null , UserID: \"2739\" , Internal: false , DeviceGateway: \"TDMG\" , IOTDevice: \"\"}]})\r\n    \r\n  \r\n      this.DevicesearchService.PublishedVersion(objData).pipe().subscribe(data=>{\r\n      \r\n      this._snackBar.open(this.Device + \" Updated Successfully\",\"\",{duration: 5000});\r\n        })\r\n      \r\n      \r\n    }\r\n  \r\n\r\n    // if(this.select == false && this.version != undefined && this.Device != undefined)\r\n    // {\r\n    //   let objData = Object.assign({update: [{Device: this.Device , DeviceID: 351431 , CVersion: \"\" , JavaVersion: this.version , ServerIP: this.ServerIP , FilePath: this.FilePath , FileSize: this.FileSize , FirmwareVersion: this.FirmwareVersion , FirmwareType: 0 , Port: this.Port , UserName: this.UserName , Password: this.Password , FirmwareUpgradeEnum: 34 , APN: this.APN , AppInstanceID: null , UserID: \"2739\" , Internal: false , DeviceGateway: \"TDMG\" , IOTDevice: \"\"}]})\r\n  \r\n    //     this.DevicesearchService.PublishedVersion(objData).pipe().subscribe(data=>{\r\n    //       console.log(data)\r\n    //       this._snackBar.open(this.Device + \" Updated Successfully\",\"\",{duration: 5000});\r\n    //       })\r\n    // }\r\n    if(this.version == undefined || this.Device == undefined)\r\n    {\r\n      this._snackBar.open(\"Select Version and CheckBox To Update Version\",\"\",{duration: 5000});\r\n    }\r\n  \r\n    \r\n   \r\n  }\r\n\r\n\r\n\r\n  postMethod(files: FileList) {\r\n    this.fileToUpload = files.item(0);\r\n    if(this.fileToUpload != null){\r\n      alert(\"FIle Successfully Uploaded\")\r\n    }\r\n    //console.log(this.fileToUpload.name);\r\n    }\r\n\r\n    dash(){\r\n      this.router.navigate(['Firmware']);\r\n    }\r\n}\r\n","<div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n        <div class=\"col-12\">\r\n            <p class=\"tyt\"><span>Menu</span> > <span (click)=\"dash();\">Fireware Manager</span> > <span>Upload Firmware Version</span> > <span>Customer Ashok Leyland</span></p>\r\n            <mat-divider></mat-divider>\r\n        </div>\r\n    </div>\r\n</div>\r\n<p class=\"tyts\">Firmware Update Command</p>\r\n<mat-tab-group mat-align-tabs=\"end\" selectedIndex=\"{{this.id}}\" (selectedTabChange)=\"changeTab($event)\">\r\n    <mat-tab label=\"Single Device Search\"> \r\n        <mat-card>\r\n            <div class=\"container-fluid\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-7 cleft\">\r\n                        <p>Single device search option is to handle upgradation of the searched device</p>\r\n                        <div class=\"example-container\" >\r\n                        <mat-form-field style=\"width: 80%;\" appearance=\"outline\">\r\n                           \r\n                            <input style=\"text-indent: 2em;\" matInput  [(ngModel)]=\"searchKey\" placeholder=\"Search Device\" #input>  \r\n                             <mat-icon style=\"color: gray;\" matPrefix>search</mat-icon>\r\n                           \r\n                        </mat-form-field>\r\n                        <button mat-raised-button class=\"btn\" (click) = search()>SUBMIT</button>\r\n                        \r\n                    </div>\r\n                    </div>\r\n                    <div class=\"col-sm-5\">\r\n                        <p>UPDATE VERSION :</p>\r\n                        <!-- <mat-radio-group color=\"primary\" aria-label=\"Select an option\" [(ngModel)]=\"select\" >\r\n                            <mat-radio-button [value]=\"messages\">JAVA</mat-radio-button>\r\n                            <mat-radio-button [value]=\"\">C</mat-radio-button>\r\n                          </mat-radio-group> -->\r\n                          <mat-form-field style=\"width: 150px; margin-left: 10px;\" appearance=\"standard\">\r\n                            <mat-label>SELECT COMMAND</mat-label>\r\n                            <mat-select [(ngModel)]=\"selectedValue\">\r\n                              <div > \r\n\r\n                                <mat-option *ngFor=\"let version of FirmwareC\" (click)=\"listed(version)\" [value]=\"version.Name\">\r\n                                  {{version.Name}}\r\n                                </mat-option>\r\n                              </div>\r\n                            </mat-select>\r\n                          </mat-form-field>  \r\n                          \r\n                        <button mat-raised-button class=\"btn1\" (click)=\"postData(select)\">FLASH FIRMWARE</button>\r\n                          \r\n                    </div>\r\n                </div>\r\n            </div>        \r\n            \r\n\r\n        </mat-card>\r\n    </mat-tab>\r\n    <mat-tab label=\"Multiple Device Update\"> \r\n        <mat-card class=\"multi\">\r\n            <div *ngIf=\"this.id == '1' \">\r\n              <div class=\"pack\">\r\n                <p>Multiple Device Update is to handle upgrades of multiple options under one go.</p>\r\n                <p>To upload the device list click the device upload button to upload an excel sheet.</p>\r\n                \r\n              </div>\r\n                <p class=\"back\">Note : The format for the upload is to list all device in one column with header title as <b>Device ID</b></p>\r\n                <button mat-raised-button (click)=\"fileInput.click()\" class=\"one\">\r\n                  <mat-icon class=\"con1\">file_upload</mat-icon>\r\n                  Device Upload\r\n               \r\n              </button>\r\n              <input #fileInput  type=\"file\" name=\"files\"  accept=\".xlsx,.csv\" id=\"myfile\" (change)=\"postMethod($event.target.files)\" [(ngModel)]=\"file\" style=\"display:none;\" />\r\n            </div>\r\n        </mat-card>    \r\n    </mat-tab>\r\n\r\n</mat-tab-group>\r\n<div *ngIf=\"this.id === 0 && loadingFlag\" class=\"uploader-status\">\r\n  <mat-spinner></mat-spinner>\r\n</div>\r\n<div *ngIf=\"this.id === 0 && !loadingFlag\" >\r\n    <table mat-table [dataSource]=\"dataSource\" matSort  class=\"mat-elevation-z8\">\r\n\r\n      <ng-container matColumnDef=\"select\">\r\n        <th mat-header-cell *matHeaderCellDef=\"let row; let i = index\" ><mat-checkbox (change)=\"$event ? toggleRow(row, i) : null\" color=\"primary\"></mat-checkbox></th>\r\n        <td mat-cell *matCellDef=\"let row; let i = index\">    <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\"\r\n          (change)=\"$event ? toggleRow(row, i) : null\"\r\n          [checked]=\"selection.isSelected(row)\"\r\n          [aria-label]=\"checkboxLabel(row)\"></mat-checkbox> </td>\r\n      </ng-container>\r\n      \r\n        <ng-container matColumnDef=\"deviceId\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\r\n          <td mat-cell *matCellDef=\"let element\"><a style=\" text-decoration-line: underline;color: #005F9E;\">  {{element.deviceId}} </a></td>\r\n        </ng-container>\r\n  \r\n    \r\n        <ng-container matColumnDef=\"deviceType\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> DEVICE<br>TYPE </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.deviceType}} </td>\r\n        </ng-container>\r\n    \r\n        <ng-container matColumnDef=\"cn\">\r\n          <th mat-header-cell *matHeaderCellDef > CUSTOMER<br>NAME </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.oemName}} </td>\r\n        </ng-container>\r\n      \r\n        <ng-container matColumnDef=\"Network_Provider\">\r\n          <th mat-header-cell *matHeaderCellDef> NETWORK<br>PROVIDER </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.networkProvider}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"mobileNumber\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> MOBILE NO. </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.mobileNumber}}  </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"mn2\">\r\n          <th mat-header-cell *matHeaderCellDef> MOBILE NO. 2 </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.mobileNumber2}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"Subcription_StartDate\">\r\n          <th mat-header-cell *matHeaderCellDef> SUBSCRIPTION<br>START DATE </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.subcriptionStartDate | date:'dd-MM-yyyy'}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"Subcription_EndDate\">\r\n          <th mat-header-cell *matHeaderCellDef> SUBSCRIPTION<br>END DATE </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.subcriptionEndDate | date:'dd-MM-yyyy'}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"Vehicle_Type\">\r\n          <th mat-header-cell *matHeaderCellDef> VECHICLE<br>TYPE NAME </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.vehicleType}} </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"Vehicle_Model\">\r\n          <th mat-header-cell *matHeaderCellDef> MODEL </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.vehicleModel}} </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"ccv\">\r\n          <th mat-header-cell *matHeaderCellDef> CURRENT<br>C VERSION </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.firmwareC}} </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"cjv\">\r\n          <th mat-header-cell *matHeaderCellDef> CURRENT<br>JAVA VERSION </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.firmwareJava}} </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"ignition\">\r\n          <th mat-header-cell *matHeaderCellDef> IGNITION </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.Ignition_Status}} </td>\r\n        </ng-container>\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n      </table>\r\n    </div>     \r\n      <div *ngIf=\"this.temp != null \">\r\n        <mat-paginator style-paginator [length]=\"totalCount\"  [showTotalPages]=\"10\"  [pageIndex]=\"pageIndex\"\r\n        [pageSize]=\"10\"  (page)=\"pageChangeEvent($event)\"></mat-paginator>\r\n      </div>\r\n  \r\n      <div *ngIf=\"this.temp == null\">\r\n        <h3 style=\"color: #666; text-align: center; font-weight: 500;\">Records Not found</h3>\r\n      </div>\r\n\r\n","import {\r\n  ElementRef,\r\n  AfterViewInit,\r\n  Directive,\r\n  Host,\r\n  Optional,\r\n  Renderer2,\r\n  Self,\r\n  ViewContainerRef,\r\n  Input\r\n} from \"@angular/core\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatButton } from \"@angular/material/button\";\r\n\r\ninterface PageObject {\r\n  length: number;\r\n  pageIndex: number;\r\n  pageSize: number;\r\n  previousPageIndex: number;\r\n}\r\n\r\n@Directive({\r\n  selector: \"[style-paginator]\"\r\n})\r\nexport class StylePaginatorDirective implements AfterViewInit {\r\n  private _pageGapTxt = \"...\";\r\n  private _rangeStart: number;\r\n  private _rangeEnd: number;\r\n  private _buttons = [];\r\n  private _curPageObj: PageObject = {\r\n    length: 0,\r\n    pageIndex: 0,\r\n    pageSize: 0,\r\n    previousPageIndex: 0\r\n  };\r\n\r\n  @Input()\r\n  get showTotalPages(): number {\r\n    return this._showTotalPages;\r\n  }\r\n  set showTotalPages(value: number) {\r\n    this._showTotalPages = value % 2 == 0 ? value + 1 : value;\r\n  }\r\n  private _showTotalPages = 2;\r\n\r\n  get inc(): number {\r\n    return this._showTotalPages % 2 == 0\r\n      ? this.showTotalPages / 2\r\n      : (this.showTotalPages - 1) / 2;\r\n  }\r\n\r\n  get numOfPages(): number {\r\n    return this.matPag.getNumberOfPages();\r\n  }\r\n\r\n  get lastPageIndex(): number {\r\n    return this.matPag.getNumberOfPages() - 1;\r\n  }\r\n\r\n  constructor(\r\n    @Host() @Self() @Optional() private readonly matPag: MatPaginator,\r\n    private vr: ViewContainerRef,\r\n    private ren: Renderer2\r\n  ) {\r\n    //to rerender buttons on items per page change and first, last, next and prior buttons\r\n    this.matPag.page.subscribe((e: PageObject) => {\r\n      if (\r\n        this._curPageObj.pageSize != e.pageSize &&\r\n        this._curPageObj.pageIndex != 0\r\n      ) {\r\n        e.pageIndex = 0;\r\n        this._rangeStart = 0;\r\n        this._rangeEnd = this._showTotalPages - 1;\r\n      }\r\n      this._curPageObj = e;\r\n\r\n      this.initPageRange();\r\n    });\r\n  }\r\n\r\n  private buildPageNumbers() {\r\n    const actionContainer = this.vr.element.nativeElement.querySelector(\r\n      \"div.mat-paginator-range-actions\"\r\n    );\r\n    const nextPageNode = this.vr.element.nativeElement.querySelector(\r\n      \"button.mat-paginator-navigation-next\"\r\n    );\r\n    const prevButtonCount = this._buttons.length;\r\n\r\n    // remove buttons before creating new ones\r\n    if (this._buttons.length > 0) {\r\n      this._buttons.forEach(button => {\r\n        this.ren.removeChild(actionContainer, button);\r\n      });\r\n      //Empty state array\r\n      this._buttons.length = 0;\r\n    }\r\n\r\n    //initialize next page and last page buttons\r\n    if (this._buttons.length == 0) {\r\n      let nodeArray = this.vr.element.nativeElement.childNodes[0].childNodes[0]\r\n        .childNodes[2].childNodes;\r\n      setTimeout(() => {\r\n        for (let i = 0; i < nodeArray.length; i++) {\r\n          if (nodeArray[i].nodeName === \"BUTTON\") {\r\n            if (nodeArray[i].innerHTML.length > 100 && nodeArray[i].disabled) {\r\n              this.ren.setStyle(\r\n                nodeArray[i],\r\n                \"background-color\",\r\n                \"rgb(82, 126, 156)\"\r\n              );\r\n              this.ren.setStyle(nodeArray[i], \"color\", \"white\");\r\n              this.ren.setStyle(nodeArray[i], \"margin\", \".5%\");\r\n            } else if (\r\n              nodeArray[i].innerHTML.length > 100 &&\r\n              !nodeArray[i].disabled\r\n            ) {\r\n              this.ren.setStyle(\r\n                nodeArray[i],\r\n                \"background-color\",\r\n                \"#005F9E\"\r\n              );\r\n              this.ren.setStyle(nodeArray[i], \"color\", \"white\");\r\n              this.ren.setStyle(nodeArray[i], \"margin\", \".5%\");\r\n            } else if (nodeArray[i].disabled) {\r\n              this.ren.setStyle(nodeArray[i], \"background-color\", \"lightgray\");\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    for (let i = 0; i < this.numOfPages; i++) {\r\n      if (i >= this._rangeStart && i <= this._rangeEnd) {\r\n        this.ren.insertBefore(\r\n          actionContainer,\r\n          this.createButton(i, this.matPag.pageIndex),\r\n          nextPageNode\r\n        );\r\n      }\r\n\r\n      if (i == this._rangeEnd) {\r\n        this.ren.insertBefore(\r\n          actionContainer,\r\n          this.createButton(this._pageGapTxt, this._rangeEnd),\r\n          nextPageNode\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  private createButton(i: any, pageIndex: number): any {\r\n    const linkBtn: MatButton = this.ren.createElement(\"button\");\r\n    this.ren.addClass(linkBtn, \"mat-mini-fab\");\r\n    this.ren.setStyle(linkBtn, \"margin\", \"0%\");\r\n    this.ren.setStyle(linkBtn, \"background-color\", \"white\");\r\n\r\n    const pagingTxt = isNaN(i) ? this._pageGapTxt : +(i + 1);\r\n    const text = this.ren.createText(pagingTxt + \"\");\r\n\r\n    this.ren.addClass(linkBtn, \"mat-custom-page\");\r\n    switch (i) {\r\n      case pageIndex:\r\n        this.ren.setAttribute(linkBtn, \"disabled\", \"disabled\");\r\n        break;\r\n      case this._pageGapTxt:\r\n        let newIndex = this._curPageObj.pageIndex + this._showTotalPages;\r\n\r\n        if (newIndex >= this.numOfPages) newIndex = this.lastPageIndex;\r\n\r\n        if (pageIndex != this.lastPageIndex) {\r\n          this.ren.listen(linkBtn, \"click\", () => {\r\n            console.log(\"working: \", pageIndex);\r\n            this.switchPage(newIndex);\r\n          });\r\n        }\r\n\r\n        if (pageIndex == this.lastPageIndex) {\r\n          this.ren.setAttribute(linkBtn, \"disabled\", \"disabled\");\r\n        }\r\n        break;\r\n      default:\r\n        this.ren.listen(linkBtn, \"click\", () => {\r\n          this.switchPage(i);\r\n        });\r\n        break;\r\n    }\r\n\r\n    this.ren.appendChild(linkBtn, text);\r\n    //Add button to private array for state\r\n    this._buttons.push(linkBtn);\r\n    return linkBtn;\r\n  }\r\n  //calculates the button range based on class input parameters and based on current page index value. Used to render new buttons after event.\r\n  private initPageRange(): void {\r\n    const middleIndex = (this._rangeStart + this._rangeEnd) / 2;\r\n\r\n    this._rangeStart = this.calcRangeStart(middleIndex);\r\n    this._rangeEnd = this.calcRangeEnd(middleIndex);\r\n\r\n    this.buildPageNumbers();\r\n  }\r\n\r\n  //Helper function To calculate start of button range\r\n  private calcRangeStart(middleIndex: number): number {\r\n    switch (true) {\r\n      case this._curPageObj.pageIndex == 0 && this._rangeStart != 0:\r\n        return 0;\r\n      case this._curPageObj.pageIndex > this._rangeEnd:\r\n        return this._curPageObj.pageIndex + this.inc > this.lastPageIndex\r\n          ? this.lastPageIndex - this.inc * 2\r\n          : this._curPageObj.pageIndex - this.inc;\r\n      case this._curPageObj.pageIndex > this._curPageObj.previousPageIndex &&\r\n        this._curPageObj.pageIndex > middleIndex &&\r\n        this._rangeEnd < this.lastPageIndex:\r\n        return this._rangeStart + 1;\r\n      case this._curPageObj.pageIndex < this._curPageObj.previousPageIndex &&\r\n        this._curPageObj.pageIndex < middleIndex &&\r\n        this._rangeStart > 0:\r\n        return this._rangeStart - 1;\r\n      default:\r\n        return this._rangeStart;\r\n    }\r\n  }\r\n  //Helpter function to calculate end of button range\r\n  private calcRangeEnd(middleIndex: number): number {\r\n    switch (true) {\r\n      case this._curPageObj.pageIndex == 0 &&\r\n        this._rangeEnd != this._showTotalPages:\r\n        return this._showTotalPages - 1;\r\n      case this._curPageObj.pageIndex > this._rangeEnd:\r\n        return this._curPageObj.pageIndex + this.inc > this.lastPageIndex\r\n          ? this.lastPageIndex\r\n          : this._curPageObj.pageIndex + 1;\r\n      case this._curPageObj.pageIndex > this._curPageObj.previousPageIndex &&\r\n        this._curPageObj.pageIndex > middleIndex &&\r\n        this._rangeEnd < this.lastPageIndex:\r\n        return this._rangeEnd + 1;\r\n      case this._curPageObj.pageIndex < this._curPageObj.previousPageIndex &&\r\n        this._curPageObj.pageIndex < middleIndex &&\r\n        this._rangeStart >= 0 &&\r\n        this._rangeEnd > this._showTotalPages - 1:\r\n        return this._rangeEnd - 1;\r\n      default:\r\n        return this._rangeEnd;\r\n    }\r\n  }\r\n  //Helper function to switch page on non first, last, next and previous buttons only.\r\n  private switchPage(i: number): void {\r\n    console.log(\"switch\", i);\r\n    const previousPageIndex = this.matPag.pageIndex;\r\n    this.matPag.pageIndex = i;\r\n    this.matPag[\"_emitPageEvent\"](previousPageIndex);\r\n    this.initPageRange();\r\n    \r\n  }\r\n  //Initialize default state after view init\r\n  public ngAfterViewInit() {\r\n    this._rangeStart = 0;\r\n    this._rangeEnd = this._showTotalPages - 1;\r\n    this.initPageRange();\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n \r\nimport { ExportToCsv } from 'export-to-csv';\r\nimport {MatSnackBar} from '@angular/material/snack-bar';\r\nimport {Apollo , QueryRef} from 'apollo-angular';\r\nimport gql from \"graphql-tag\";\r\n\r\n@Component({\r\n  selector: 'app-firmware-report',\r\n  templateUrl: './firmware-report.component.html',\r\n  styleUrls: ['./firmware-report.component.css']\r\n})\r\nexport class FirmwareReportComponent implements OnInit {\r\n\r\n  public searchedData\r\n  public listArray\r\n  public entries: object = [];\r\n  constructor(private router:Router, private _snackBar: MatSnackBar , private http: HttpClient,private apollo: Apollo) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  dash(){\r\n    this.router.navigate(['Firmware']);\r\n  }\r\n\r\n  search(val){\r\n    if(val != undefined)\r\n    {\r\n      this.listArray = val.split(',');\r\n     \r\n      \r\n       this.apollo.query({\r\n        query: gql`\r\n        query otapcommand($DeviceID:[String]){\r\n          otapcommand(DeviceID: $DeviceID){\r\n            DeviceID,\r\n            DeviceID\r\n            DeviceType\r\n            Customer\r\n            NetworkProvider\r\n            MobileNo\r\n            Model\r\n            VehicleTypeName\r\n            CurrentCVersion\r\n            CurrentJavaVersion\r\n            Ignition\r\n          }\r\n        }  \r\n      `,\r\n      variables:{\r\n        DeviceID: this.listArray\r\n      }\r\n      }).subscribe(result => {\r\n       \r\n        this.entries = result.data['otapcommand']\r\n        this.download();\r\n      })\r\n    }\r\n}\r\n\r\n  download(){\r\n    const options = { \r\n      filename: 'Firmware Report',\r\n      fieldSeparator: ',',\r\n      quoteStrings: '\"',\r\n      decimalSeparator: '.',\r\n      showLabels: true, \r\n      showTitle: false,\r\n      useTextFile: false,\r\n      useBom: true,\r\n      useKeysAsHeaders: true,\r\n     \r\n    };\r\n   \r\n  const csvExporter = new ExportToCsv(options);\r\n   \r\n  csvExporter.generateCsv(this.entries);\r\n  }\r\n}\r\n","<div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n        <div class=\"col-12\">\r\n            <p class=\"tyt\"><span>Menu</span> > <span (click)=\"dash()\">Fireware Manager</span> > <span>Firmware Report</span> > <span>Customer Ashok Leyland</span></p>\r\n            <mat-divider></mat-divider>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<p class=\"tyts\">Firmware Report</p>\r\n\r\n<mat-card>\r\n   <p class=\"part\"> Firmware Report Menu is used to download the searched devices' firmware information</p> \r\n\r\n   <p class=\"back\">Note : Use \",\" between searched <b>Device ID</b></p>\r\n\r\n   <mat-form-field class=\"form\" appearance=\"outline\">\r\n                           \r\n    <input style=\"text-indent: 2em;\" matInput  [(ngModel)]=\"searchedData\"  placeholder=\"Search Device\" #input>  \r\n     <mat-icon style=\"color: gray;\" matPrefix>search</mat-icon>\r\n   \r\n</mat-form-field>\r\n<button (click)=\"search(searchedData)\" mat-raised-button class=\"btn\">SUBMIT</button>\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FmdashboardService } from './service/fmdashboard.service';\r\nimport {Apollo , QueryRef} from 'apollo-angular';\r\nimport gql from \"graphql-tag\";\r\nimport { map, shareReplay } from 'rxjs/operators';\r\nimport { Observable, of } from 'rxjs'\r\n\r\n\r\nexport type devicemaster ={\r\n  DeviceID:Number;\r\n}\r\n\r\nexport type DataQuery ={\r\n  devicemaster:devicemaster[]\r\n}\r\n\r\nexport type devicepacket ={\r\n  ID:Number;\r\n}\r\n\r\n\r\nexport type DataQuery1 ={\r\n  devicepacket:devicepacket[]\r\n}\r\n\r\nexport type reportingstatus ={\r\n  ID:Number;\r\n}\r\nexport type DataQuery2 ={\r\n  reportingstatus:reportingstatus[]\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-fmdashboard',\r\n  templateUrl: './fmdashboard.component.html',\r\n  styleUrls: ['./fmdashboard.component.css']\r\n})\r\nexport class FmdashboardComponent implements OnInit {\r\n  emp:object =[];\r\n  public TotalDevice;\r\n  public ReportStatus\r\n  public activepacket;\r\n  constructor(private router: Router,private apollo: Apollo, private FmdashboardService : FmdashboardService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    \r\n    const source$ = this.apollo.query<DataQuery>({\r\n      query: gql`\r\n      {\r\n        devicemaster {\r\n          DeviceID\r\n        }\r\n      }`\r\n      \r\n    }).pipe(shareReplay(1))\r\n\r\nsource$.pipe(map(result => result.data && result.data.devicemaster)).subscribe((data) => this.TotalDevice = data.length);\r\n  \r\nconst source1$ = this.apollo.query<DataQuery1>({\r\n  query: gql`\r\n  {\r\n    devicepacket {\r\n      ID\r\n    }\r\n  }`\r\n  \r\n}).pipe(shareReplay(1))\r\n\r\nsource1$.pipe(map(result => result.data && result.data.devicepacket)).subscribe((data) => this.ReportStatus = data.length);\r\n\r\n\r\n\r\nconst source2$ = this.apollo.query<DataQuery2>({\r\n  query: gql`\r\n  {\r\n    reportingstatus {\r\n      ID\r\n    }\r\n  }`\r\n  \r\n}).pipe(shareReplay(1))\r\n\r\nsource2$.pipe(map(result => result.data && result.data.reportingstatus)).subscribe((data) => this.activepacket = data.length);\r\n\r\n\r\n\r\n}\r\n\r\n  dash(){\r\n    this.router.navigate(['dashboard']);\r\n  }\r\n  menu(){\r\n    this.router.navigate(['Firmware']);\r\n  }\r\n}\r\n","<div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n        <div class=\"col-12\">\r\n            <p class=\"tyt\"><span (click) =\"menu();\">Menu</span> > <span>Fireware Manager</span> > <span (click)=\"dash();\">Dashboard</span> > <span>Customer Ashok Leyland</span></p>\r\n            <mat-divider></mat-divider>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"container-fluid mainpg\">\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-6 col-lg-4\" >\r\n            <mat-card class=\"imgs\" >\r\n                <!--<button mat-raised-button class=\"btn\" dis color=\"primary\">Total Number Of Devices</button>-->\r\n                <p class=\"btn\">Total Number Of Devices</p>\r\n                  <div class=\"gray\">\r\n                   <h3>{{this.TotalDevice}}</h3>\r\n                   <p>Devices Count</p>\r\n                     \r\n                  </div>\r\n\r\n                  <div class=\"container-fluid \">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-6 col-sm-6 col-lg-6 cleft\">\r\n                          \r\n                                <h3>116</h3>\r\n                                <p>TAP66</p>\r\n                          \r\n                        </div>\r\n                        <div class=\"col-xs-6 col-sm-6 col-lg-6\">\r\n                            <div class=\"cright\">\r\n                                <h3>66899</h3>\r\n                                <p>TAP76</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div> \r\n            </mat-card>\r\n             \r\n        </div>\r\n        <div class=\"col-sm-6 col-lg-4\" >\r\n            <mat-card class=\"imgs\" >\r\n             \r\n                <p class=\"btn\">Reporting Status</p>\r\n                  <div class=\"gray\">\r\n                   <h3>{{this.ReportStatus}}</h3>\r\n                   <p>Devices Count</p>\r\n                     \r\n                  </div>\r\n                  <div class=\"container-fluid \">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-6 col-sm-6 col-lg-6 cleft\">\r\n                          \r\n                                <h3>116</h3>\r\n                                <p>TAP66</p>\r\n                          \r\n                        </div>\r\n                        <div class=\"col-xs-6 col-sm-6 col-lg-6\">\r\n                            <div class=\"cright\">\r\n                                <h3>66899</h3>\r\n                                <p>TAP76</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div> \r\n            </mat-card>\r\n             \r\n        </div>\r\n        <div class=\"col-sm-6 col-lg-4\" >\r\n            <mat-card class=\"imgs\" >\r\n             \r\n                <p class=\"btn\">Active Packet Status</p>\r\n                  <div class=\"gray\">\r\n                   <h3>{{this.activepacket}}</h3>\r\n                   <p>Devices Count</p>\r\n\r\n                  </div>\r\n\r\n                  <div class=\"container-fluid \">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-6 col-sm-6 col-lg-6 cleft\">\r\n                          \r\n                                <h3>116</h3>\r\n                                <p>TAP66</p>\r\n                          \r\n                        </div>\r\n                        <div class=\"col-xs-6 col-sm-6 col-lg-6\">\r\n                            <div class=\"cright\">\r\n                                <h3>66899</h3>\r\n                                <p>TAP76</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div> \r\n            </mat-card>\r\n             \r\n        </div>\r\n\r\n        <div class=\"col-sm-6 col-lg-4\" >\r\n            <mat-card class=\"imgs\" >\r\n              \r\n                <p class=\"btn\">Invalid Packet Status</p>\r\n                  <div class=\"gray\">\r\n                   <h3>66015</h3>\r\n                   <p>Devices Count</p>\r\n                     \r\n                  </div>\r\n\r\n                  <div class=\"container-fluid \">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-6 col-sm-6 col-lg-6 cleft\">\r\n                          \r\n                                <h3>116</h3>\r\n                                <p>TAP66</p>\r\n                          \r\n                        </div>\r\n                        <div class=\"col-xs-6 col-sm-6 col-lg-6\">\r\n                            <div class=\"cright\">\r\n                                <h3>66899</h3>\r\n                                <p>TAP76</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div> \r\n            </mat-card>\r\n             \r\n        </div> \r\n\r\n        <div class=\"col-sm-6 col-lg-4\" >\r\n            <mat-card class=\"imgs\" >\r\n              \r\n                <p class=\"btn\">48 Hrs > NRD > 24 Hrs</p>\r\n                  <div class=\"gray\">\r\n                   <h3>66015</h3>\r\n                   <p>Devices Count</p>\r\n                     \r\n                  </div>\r\n\r\n                  <div class=\"container-fluid \">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-6 col-sm-6 col-lg-6 cleft\">\r\n                          \r\n                                <h3>116</h3>\r\n                                <p>TAP66</p>\r\n                          \r\n                        </div>\r\n                        <div class=\"col-xs-6 col-sm-6 col-lg-6\">\r\n                            <div class=\"cright\">\r\n                                <h3>66899</h3>\r\n                                <p>TAP76</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div> \r\n            </mat-card>\r\n             \r\n        </div>\r\n        <div class=\"col-sm-6 col-lg-4\" >\r\n            <mat-card class=\"imgs\" >\r\n             \r\n                <p class=\"btn\">NRD > 48 Hrs</p>\r\n                  <div class=\"gray\">\r\n                   <h3>66015</h3>\r\n                   <p>Devices Count</p>\r\n                     \r\n                  </div>\r\n\r\n                  <div class=\"container-fluid \">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xs-6 col-sm-6 col-lg-6 cleft\">\r\n                          \r\n                                <h3>116</h3>\r\n                                <p>TAP66</p>\r\n                          \r\n                        </div>\r\n                        <div class=\"col-xs-6 col-sm-6 col-lg-6\">\r\n                            <div class=\"cright\">\r\n                                <h3>66899</h3>\r\n                                <p>TAP76</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div> \r\n            </mat-card>\r\n             \r\n        </div>\r\n\r\n      \r\n        \r\n    </div>\r\n</div>","\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient,HttpHeaders } from '@angular/common/http'\r\nimport { Router } from '@angular/router'\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FmdashboardService {\r\n  constructor(private http: HttpClient,\r\n    private _router: Router) { }\r\n\r\n \r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {APOLLO_OPTIONS} from 'apollo-angular';\r\nimport {ApolloClientOptions, InMemoryCache} from '@apollo/client/core';\r\nimport {HttpLink} from 'apollo-angular/http';\r\n\r\nconst uri = 'http://localhost:4080/graphql'; // <-- add the URL of the GraphQL server here\r\nexport function createApollo(httpLink: HttpLink): ApolloClientOptions<any> {\r\n  return {\r\n    link: httpLink.create({uri}),\r\n    cache: new InMemoryCache(),\r\n  };\r\n}\r\n\r\n@NgModule({\r\n  providers: [\r\n    {\r\n      provide: APOLLO_OPTIONS,\r\n      useFactory: createApollo,\r\n      deps: [HttpLink],\r\n    },\r\n  ],\r\n})\r\nexport class GraphQLModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators, NgForm } from '@angular/forms';\r\nimport { AuthenticationService } from '../services/authentication.service';\r\nimport { first } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  emailId\r\n  password\r\n  constructor(private router: Router,private _auth: AuthenticationService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  login(accountForm: NgForm)\r\n  {\r\n   const usersVal = {\r\n     email: this.emailId,\r\n     password: this.password\r\n   }\r\n    if(accountForm.valid)\r\n    {\r\n      //this.router.navigate(['customerselection']);\r\n      //console.log(user)\r\n      this._auth.loginUser(usersVal).pipe(first())\r\n      .subscribe(\r\n        res => {\r\n          localStorage.setItem('token', res.access_token)\r\n          this.router.navigate(['customerselection']);\r\n        },\r\n        err => console.log(err)\r\n      ) \r\n\r\n      localStorage.setItem('mail',this.emailId);\r\n     \r\n    \r\n      \r\n    }\r\n    else\r\n    {\r\n      return;\r\n    }\r\n\r\n  }\r\n}\r\n","\r\n  \r\n  <mat-card >\r\n    <div class=\"signin\">\r\n       <p> <b> SIGN IN </b></p>\r\n       <hr style=\"border-color:#979393; opacity: 0.2;\">\r\n    </div>\r\n    <form #accountForm=\"ngForm\" >\r\n         <div class=\"login\">\r\n            <mat-form-field class=\"full-width-field\" appearance=\"outline\">\r\n               <mat-label > Email ID</mat-label>\r\n               <input matInput type=\"email\" name=\"emailId\" pattern=\"[a-zA-Z0-9.-_]{1,}@[a-zA-Z.-]{2,}[.]{1}[a-zA-Z]{2,}\"  placeholder=\"Email ID\" ngModel  [(ngModel)]=\"emailId\" required>\r\n            </mat-form-field>\r\n         </div>\r\n         <div class=\"Password\">\r\n            <mat-form-field class=\"full-width-field\" appearance=\"outline\">\r\n               <mat-label > Password</mat-label>\r\n               <input matInput name=\"password\" type=\"password\" placeholder=\"Password\" ngModel  [(ngModel)]=\"password\" required>\r\n            \r\n            </mat-form-field>\r\n         </div>\r\n         \r\n         <div class=\"forgotpassword\">\r\n            <a  class=\"forgotpassword\"> <b>Forgot password?  </b></a>\r\n         </div>\r\n         <div class=\"button-signin\">\r\n            <button mat-raised-button (click)=\"login(accountForm)\"> SIGN IN</button>\r\n         </div>\r\n\r\n   </form>\r\n </mat-card>","export interface SingleCFirmwareUpload{\r\n\r\n    Name: string;\r\n    ServerIP: string;\r\n    UserName : string;\r\n    FilePath : string;\r\n    FileSize: string;\r\n    Password: string;\r\n    ReleaseNote: string;\r\n    firmwareType: string;\r\n    filename: string;\r\n    IsFirmwareC: boolean;\r\n    Port: number;\r\n}\r\n\r\nexport interface EditFirmwareFileSize{\r\n    versionName :string;\r\n    fileSize :string;\r\n}\r\n\r\nexport interface UploadJavaFirmware{\r\n\r\n    Name: string;\r\n    ServerIP: string;\r\n    UserName : string;\r\n    FilePath : string;\r\n    FileSize: string;\r\n    Password: string;\r\n    ReleaseNote: string;\r\n    firmwareType: string;\r\n    filename: string;\r\n    IsFirmwareC: boolean;\r\n    Port: number;\r\n}\r\n\r\n\r\nexport interface UploadIotFirmware{\r\n    versionName: string;\r\n    fileName: string;\r\n    Type: string;\r\n    \r\n}\r\n\r\nexport interface UpgradeFirmwareCombination{\r\n    javaV: string;\r\n    CV: string;\r\n}\r\n\r\nexport interface OutboundCdgMultiple{\r\n    \r\n   invoice: string;\r\n   device: string;\r\n   dispatch: string;\r\n   from: string;\r\n   to: string;\r\n}\r\n\r\nexport class Firmware {\r\n    name: string[];\r\n    \r\n    constructor() {\r\n        this.name = ['TAP66', 'TAP76', 'TAP66_2BOX', 'TAP76C', 'TAP76D', 'TAP86',\r\n    'TAP76A', 'UNKNOWN', 'TAP66A', 'TAPI17C'];\r\n    }\r\n}\r\n\r\n","import { Component,Inject, OnInit, AfterContentInit, AfterViewInit , AfterContentChecked} from '@angular/core';\r\nimport {ViewChild} from '@angular/core';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {MatSort , Sort} from '@angular/material/sort'; \r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\nimport { NgForm } from '@angular/forms';\r\nimport {Apollo , QueryRef} from 'apollo-angular';\r\nimport gql from \"graphql-tag\";\r\nimport { map, shareReplay } from 'rxjs/operators';\r\nimport { from, Observable, of } from 'rxjs'\r\nimport { error } from 'selenium-webdriver';\r\nimport { stringify } from '@angular/compiler/src/util';\r\nimport {MatSnackBar} from '@angular/material/snack-bar';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport {UpgradecommandService} from './service/upgradecommand.service'\r\nimport { MatTableExporterDirective } from 'mat-table-exporter';\r\nimport * as XLSX from 'xlsx';\r\n\r\nexport type otherotapcommand ={\r\n  DeviceID:Number;\r\n  DeviceType:String;\r\n  Customer:String;\r\n  NetworkProvider:String;\r\n  MobileNo:Number;\r\n  Model:String;\r\n  VehicleTypeName:String;\r\n  CurrentCVersion:String;\r\n  CurrentJavaVersion:String;\r\n  Ignition:String;\r\n}\r\n\r\n\r\nexport type DataQuery ={\r\n  otherotapcommand:otherotapcommand[]\r\n}\r\n\r\n\r\nexport type OtapCommand = {\r\n  DeviceID:String;\r\n  PacketID:Number;\r\n  Name:String;\r\n  Message:String\r\n}\r\nexport type DataQuery1 ={\r\n  OtapCommand:OtapCommand[]\r\n}\r\n\r\nconst UPVOTE_POST = gql`\r\n\r\nmutation addotapcommand($PacketID:Int! ,$DeviceType: String!, $CommandName: String!,$MessageFormat: String!) {\r\n  addotapcommand (PacketID: $PacketID,DeviceType: $DeviceType,CommandName: $CommandName,MessageFormat: $MessageFormat ){\r\n    PacketID\r\n    DeviceType\r\n    CommandName\r\n    MessageFormat\r\n  }\r\n}\r\n`;\r\n\r\n\r\n@Component({\r\n  selector: 'app-other-otap-command',\r\n  templateUrl: './other-otap-command.component.html',\r\n  styleUrls: ['./other-otap-command.component.css']\r\n})\r\nexport class OtherOTAPCommandComponent implements OnInit , AfterViewInit , AfterContentChecked ,AfterContentInit {\r\n\r\n  public file : File;\r\n  fileToUpload: File;\r\n  id = 0;\r\n  tabIndex = 0;\r\n  loadingFlag = true;\r\n  temp = null\r\n  messages:object =[];\r\n  emp1:object =[];\r\n  arrayBuffer:any;\r\n  filelist: any;\r\n  deviceArr = [];\r\n  entries: object =[];\r\n  loadingFlag1 = true;\r\n  //displayedColumns: string[] = ['select','id','name','cn','np','mn1','mn2','ssd','sed','vtn','model','ccv','cjv'];\r\n  displayedColumns: string[]=[\"select\",\"DeviceID\",\"DeviceType\",\"Customer\",\"NetworkProvider\",\"MobileNo\",\"Model\",\"VehicleTypeName\",\"CurrentCVersion\",\"CurrentJavaVersion\",\"Ignition\"]\r\n  dataSource : MatTableDataSource<any>\r\n  dataSource1 : MatTableDataSource<any>\r\n  selection = new SelectionModel(false, []);\r\n  deviceType\r\n\r\n\r\n  public device;\r\n  public messageFormat;\r\n  public messageName;\r\n  public packetId;\r\n\r\n\r\n\r\n  //@ViewChild(MatPaginator) paginator: MatPaginator;\r\n  //@ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatTableExporterDirective, { static: false }) exporter: MatTableExporterDirective;\r\n\r\n \r\n  ngAfterViewInit() {\r\n  //  this.dataSource.paginator = this.paginator \r\n    }\r\n  ngAfterContentInit(){\r\n \r\n  }\r\n\r\n    constructor(private route: ActivatedRoute, private UpgradecommandService: UpgradecommandService, private _snackBar: MatSnackBar ,private router: Router,public dialog: MatDialog,private apollo: Apollo) { }\r\n  \r\n    ngOnInit(): void {\r\n      this.route.params.subscribe(params => {\r\n        this.deviceType = params['device'];\r\n      \r\n        this.OnDataLoad(this.deviceType)\r\n      });\r\n\r\n      // this.UpgradecommandService.GetIotDeviceOutBound().subscribe(data => {\r\n      //   console.log(data)\r\n      // })\r\n    const source1$ = this.apollo.query<DataQuery1>({\r\n      query: gql`\r\n      {\r\n        OtapCommand{\r\n          DeviceType\r\n          CommandName\r\n          PacketID\r\n          MessageFormat\r\n        }\r\n      }`\r\n      \r\n    }).pipe(shareReplay(1))\r\n\r\nsource1$.pipe(map(result => result.data && result.data.OtapCommand)).subscribe((data) =>   \r\n this.messages = data\r\n  );\r\n\r\n}\r\n\r\n\r\n    removeFunction(){\r\n      const filterVal = \"TAP66\"\r\n      this.dataSource.filter = filterVal.trim().toLocaleLowerCase() \r\n     \r\n    }\r\n\r\n    public OnDataLoad  = (devicetypes) =>{\r\n      \r\n  this.apollo.query({\r\n    query: gql`\r\n    query otapcommand($DeviceType:String!){\r\n      otapcommand(DeviceType: $DeviceType){\r\n        DeviceID\r\n        DeviceType\r\n        Customer\r\n        NetworkProvider\r\n        Model\r\n        MobileNo\r\n        VehicleTypeName\r\n        Model\r\n        CurrentCVersion\r\n        CurrentJavaVersion\r\n        Ignition\r\n      }\r\n    }\r\n  `,\r\n  variables:{\r\n    DeviceType: this.deviceType\r\n  }\r\n  }).subscribe(result => {\r\n   \r\n    this.dataSource = new MatTableDataSource(result.data['otapcommand'])\r\n   this.dataSource ? this.loadingFlag = false : this.loadingFlag = true;\r\n        this.temp = this.dataSource.data.length;\r\n  })\r\n\r\n    }\r\n    public getCategory = (id) => {\r\n\r\n      this.apollo.query({\r\n        query: gql`\r\n        query otapcommand($DeviceID:[String]){\r\n          otapcommand(DeviceID: $DeviceID){\r\n            DeviceID,\r\n            DeviceID\r\n            DeviceType\r\n            Customer\r\n            NetworkProvider\r\n            MobileNo\r\n            Model\r\n            VehicleTypeName\r\n            CurrentCVersion\r\n            CurrentJavaVersion\r\n            Ignition\r\n          }\r\n        }  \r\n      `,\r\n      variables:{\r\n        DeviceID: id\r\n      }\r\n      }).subscribe(result => {\r\n        this.dataSource1 = new MatTableDataSource(result.data['otapcommand'])\r\n        this.dataSource1  ? this.loadingFlag1 = false : this.loadingFlag1 = true;\r\n        // this.emp1 = result.data['otapcommand']\r\n      })\r\n    }\r\n  \r\n    private paginator: MatPaginator;\r\n    private sort: MatSort;\r\n  \r\n   \r\n    @ViewChild(MatSort) set matSort(ms: MatSort) {\r\n      this.sort = ms;\r\n      this.setDataSourceAttributes();\r\n    }\r\n  \r\n    @ViewChild(MatPaginator) set matPaginator(mp: MatPaginator) {\r\n      this.paginator = mp;\r\n      this.setDataSourceAttributes();\r\n    }\r\n  \r\n    setDataSourceAttributes() {\r\n      if(this.loadingFlag == false){\r\n     // this.dataSource.paginator = this.paginator \r\n        this.dataSource.sort = this.sort;\r\n      }\r\n    }\r\n\r\n    applyFilter(event: Event) {\r\n      const filterValue = (event.target as HTMLInputElement).value;\r\n      this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    }\r\n \r\n    applyFilter1(event: Event) {\r\n      const filterValue = (event.target as HTMLInputElement).value;\r\n      this.dataSource1.filter = filterValue.trim().toLowerCase();\r\n    }\r\n    ngAfterContentChecked()\t{\r\n      if(this.loadingFlag == false){\r\n      setTimeout(() => \r\n      this.dataSource.paginator = this.paginator);\r\n      }\r\n    }\r\n  \r\n  \r\n    changeTab(event) {\r\n     \r\n      this.tabIndex = event.index;\r\n    }\r\n\r\n    postMethod(files: FileList) {\r\n      this.fileToUpload = files.item(0);\r\n     \r\n      if(this.fileToUpload != null){\r\n        alert(\"FIle Successfully Uploaded\")\r\n      }\r\n      }\r\n      dash(){\r\n        this.router.navigate(['Firmware']);\r\n        // const filterVal = \"n20\"\r\n        // this.dataSource.filter = filterVal.trim().toLocaleLowerCase() \r\n       \r\n      }\r\n\r\n      private isAllSelected() {\r\n        const numSelected = this.selection.selected.length;\r\n        const numRows = this.dataSource.data.length;\r\n        return numSelected === numRows;\r\n      }\r\n\r\n      toggleRow(row: any, index: number) {\r\n        this.selection.toggle(row);\r\n        this.exporter.toggleRow(index);\r\n        \r\n        for (const [key, value] of Object.entries(row)) {\r\n          if(key == \"DeviceID\"){\r\n            this.device = value\r\n          \r\n           \r\n          }\r\n        }\r\n      }\r\n\r\n\r\n      addfile(files: FileList) {\r\n        this.file = files.item(0);\r\n      \r\n    let fileReader = new FileReader();    \r\n    fileReader.readAsArrayBuffer(this.file);     \r\n    fileReader.onload = (e) => {    \r\n        this.arrayBuffer = fileReader.result;    \r\n        var data = new Uint8Array(this.arrayBuffer);    \r\n        var arr = new Array();    \r\n        for(var i = 0; i != data.length; ++i) arr[i] = String.fromCharCode(data[i]);    \r\n        var bstr = arr.join(\"\");    \r\n        var workbook = XLSX.read(bstr, {type:\"binary\"});    \r\n        var first_sheet_name = workbook.SheetNames[0];    \r\n        var worksheet = workbook.Sheets[first_sheet_name];    \r\n        this.filelist = XLSX.utils.sheet_to_json(worksheet,{raw:true});    \r\n        this.parseFile(this.filelist);\r\n    }    \r\n  }\r\n\r\n  parseFile(fileData) {\r\n    fileData.map(data=> {\r\n     \r\n      this.deviceArr.push(data['Device ID'])\r\n    \r\n    })\r\n\r\n    this.getCategory(this.deviceArr)\r\n  }\r\n      \r\n      /** The label for the checkbox on the passed row */\r\n      checkboxLabel(row?: any): string {\r\n        if (!row) {\r\n         \r\n          return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\r\n          \r\n        }\r\n        return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\r\n      }\r\n      \r\n\r\n      listed(version){\r\n       \r\n        for (const [key, value] of Object.entries(version)) {\r\n\r\n          if(key == \"MessageFormat\"){\r\n            this.messageFormat = value\r\n           \r\n          //   let jsonObject = JSON.parse(this.messageFormat);\r\n          //   console.log(jsonObject)\r\n          //   for (let country of Object.keys(jsonObject)) {\r\n          //     var capital = jsonObject[country];\r\n              \r\n          // }\r\n          \r\n          // for (const [country, capital] of Object.entries(jsonObject))\r\n          //     console.log(country);\r\n          }\r\n          if(key == \"CommandName\"){\r\n            this.messageName = value\r\n          }\r\n          if(key == \"PacketID\"){\r\n            this.packetId = value\r\n          }\r\n\r\n        }\r\n      }\r\n\r\n      PostData(){\r\n\r\n         if(this.device == undefined || this.messageName == undefined)\r\n        {\r\n          this._snackBar.open(\"Select Command and CheckBox To Upgrade Command\",\"\",{duration: 5000});\r\n        }\r\n\r\n        else{\r\n          const dialogRef = this.dialog.open(flashFirmware, {\r\n            width: '400px',\r\n            data: {message:this.messageFormat,messagename: this.messageName ,Device: this.device,packetId: this.packetId,deviceType:this.deviceType}\r\n          });\r\n      \r\n         dialogRef.afterClosed().subscribe(result => {\r\n            console.log('The dialog was closed');\r\n   \r\n          });\r\n        }\r\n    \r\n        // if(this.device == undefined || this.messageName == undefined)\r\n        // {\r\n        //   this._snackBar.open(\"Select Command and CheckBox To Upgrade Command\",\"\",{duration: 5000});\r\n        // }\r\n        // if(this.device != undefined && this.messageName != undefined)\r\n        // {\r\n        //   let objData = Object.assign({update: [{Device: this.device , DeviceID: 351431 , MessageFormat: this.messageFormat , FirmwareUpgradeEnum: 17 , IOTDevice: \"\" , MessageName: this.messageName , AppInstanceID: null , DeviceGateway: \"TDMG\" , UserID: 2739}]});\r\n        //   console.log(objData)\r\n        //   this.UpgradecommandService.PublishedVersion(objData).pipe().subscribe(data=>{\r\n        //   console.log(data)\r\n        //   this._snackBar.open(this.device + \" Updated Successfully\",\"\",{duration: 5000});\r\n        //   },\r\n        //   (error) => this._snackBar.open(\"DeviceID Mismatch\",\"\",{duration: 5000})\r\n        //   )\r\n        // }\r\n      }\r\n      \r\n\r\n      AddCommand(): void {\r\n        const dialogRef = this.dialog.open(addCommand, {\r\n          width: '400px',\r\n          data: { }\r\n        });\r\n    \r\n       dialogRef.afterClosed().subscribe(result => {\r\n          console.log('The dialog was closed');\r\n \r\n        });\r\n\r\n      }\r\n  }\r\n\r\n\r\n\r\n  @Component({\r\n    selector: 'addCommand',\r\n    templateUrl: 'addCommand.html',\r\n  })\r\n  export class addCommand {\r\n    public deviceId;\r\n    public packetId;\r\n    public name;\r\n    public message;\r\n  \r\n    constructor(private apollo: Apollo,private _snackBar: MatSnackBar ,\r\n      public dialogRef: MatDialogRef<addCommand>,\r\n      @Inject(MAT_DIALOG_DATA) public data: []) {}\r\n  \r\n    onNoClick(): void {\r\n      this.dialogRef.close();\r\n    }\r\n\r\n    AddCommand(addCommandForm: NgForm){\r\n      if(addCommandForm.valid){\r\n       \r\n\r\n        this.apollo.mutate({\r\n          mutation: UPVOTE_POST,\r\n          variables: \r\n          {\r\n            PacketID:this.packetId,\r\n            DeviceType:this.deviceId,\r\n            CommandName: this.name,\r\n            MessageFormat: this.message\r\n          }\r\n        }).subscribe(({data }) => {\r\n          this._snackBar.open(\"Value Uploaded Successfully\",\"\",{duration: 2000});\r\n        },\r\n        (error) => this._snackBar.open(\"DeviceID Not Found\",\"\",{duration: 2000})\r\n        )\r\n        \r\n\r\n   \r\n        \r\n      }\r\n      else{\r\n        return\r\n      }\r\n\r\n    }\r\n  \r\n  }\r\n  \r\n\r\n\r\n  \r\n  @Component({\r\n    selector: 'flashFirmware',\r\n    templateUrl: 'FlashFirmware.html',\r\n  })\r\n  export class flashFirmware {\r\n    ClusterArrays : any = [];\r\n  public json;\r\n  public messageName\r\n  public device\r\n  public packetId\r\n  public deviceType\r\n    constructor(private apollo: Apollo,private route: ActivatedRoute, private _snackBar: MatSnackBar ,private UpgradecommandService: UpgradecommandService,\r\n      public dialogRef: MatDialogRef<addCommand>,\r\n      @Inject(MAT_DIALOG_DATA) public data: {message: string,messagename: string,packetId: string,Device: string,deviceType: string }) {\r\n        this.json = data.message\r\n        this.messageName = data.messagename\r\n       this.device = data.Device\r\n       this.packetId = data.packetId\r\n       this.deviceType = data.deviceType\r\n        let jsonObject = JSON.parse(this.json);\r\n       \r\n        for (let country of Object.keys(jsonObject)) {\r\n          var capital = jsonObject[country];\r\n          \r\n      }\r\n      \r\n      for (const [country, capital] of Object.entries(jsonObject)){\r\n        \r\n        this.ClusterArrays.push(country)\r\n        \r\n      }\r\n         \r\n      }\r\n      \r\n    \r\n\r\n    onNoClick(): void {\r\n      this.dialogRef.close();\r\n    }\r\n\r\n    AddCommand(addCommandForm: NgForm){\r\n      if(this.deviceType != \"SNM476\"){\r\n     if(addCommandForm.valid){\r\n        let oops = JSON.stringify(addCommandForm.value)\r\n       \r\n      //  console.log(oops) \"NJ042612\"\r\n        let objData = Object.assign({update: [{Device: \"NG356545\", DeviceID: 351431 , MessageFormat: oops, FirmwareUpgradeEnum: this.packetId , IOTDevice: \"\" , MessageName: this.messageName , AppInstanceID: null , DeviceGateway: \"TDMG\" , UserID: 2739}]});\r\n       \r\n        this.UpgradecommandService.PublishedVersion(objData).pipe().subscribe(data=>{\r\n           \r\n            this._snackBar.open(this.device + \" Updated Successfully\",\"\",{duration: 5000});\r\n            },\r\n            (error) => this._snackBar.open(\"DeviceID Mismatch\",\"\",{duration: 5000})\r\n            )\r\n      }\r\n      }\r\n      if(this.deviceType == \"SNM476\"){\r\n        if(addCommandForm.valid){\r\n        var str = '';\r\n        for (const [country, capital] of Object.entries(addCommandForm.value)){\r\n          str += capital+\",\";  \r\n         }\r\n        let device = \"SNM00030\"\r\n\r\n         let objData = Object.assign({\"state\": {\"desired\": {[this.messageName]:str}}})\r\n\r\n     \r\n         this.UpgradecommandService.IotDeviceOutBound(objData,device).pipe().subscribe(data => {\r\n          \r\n               this._snackBar.open(this.device + \" Updated Successfully\",\"\",{duration: 5000});\r\n               },\r\n               (error) => this._snackBar.open(\"DeviceID Mismatch\",\"\",{duration: 5000})\r\n               )\r\n         \r\n        //  let oops = JSON.stringify(objData);\r\n        //  let objData1 = Object.assign({DeviceType:this.deviceType, update: [{Device: \"SNM00032\", DeviceID: 351431 , MessageFormat: oops, FirmwareUpgradeEnum: this.packetId , IOTDevice: \"\" , MessageName: this.messageName, UserID: 2739}]});\r\n        //  console.log(objData1)\r\n        //  this.UpgradecommandService.PublishedVersion(objData1).pipe().subscribe(data=>{\r\n        //      console.log(data)\r\n        //      this._snackBar.open(this.device + \" Updated Successfully\",\"\",{duration: 5000});\r\n        //      },\r\n        //      (error) => this._snackBar.open(\"DeviceID Mismatch\",\"\",{duration: 5000})\r\n        //      )\r\n      }\r\n    }\r\n     \r\n    }\r\n  \r\n  }\r\n  \r\n","<div class=\"container-fluid\">\r\n  <div class=\"row\">\r\n      <div class=\"col-12\">\r\n          <p class=\"tyt\"><span>Menu</span> > <span (click)=\"dash()\">Fireware Manager</span> > <span>Other OTAP Command</span> > <span>Customer Ashok Leyland</span></p>\r\n          <mat-divider></mat-divider>\r\n      </div>\r\n  </div>\r\n</div>\r\n<p class=\"tyts\">Firmware Upgrade Command</p>\r\n<mat-tab-group mat-align-tabs=\"end\" selectedIndex=\"{{this.id}}\" (selectedTabChange)=\"changeTab($event)\">\r\n  <mat-tab label=\"Single Device Search\"> \r\n      <mat-card>\r\n          <div class=\"container-fluid\">\r\n              <div class=\"row\">\r\n                  <div class=\"col-sm-8 cleft\">\r\n                      <p>Single device search option is to handle upgradation of the searched device</p>\r\n                      <div class=\"example-container\" >\r\n                      <mat-form-field style=\"width: 100%;\" appearance=\"outline\">\r\n                         \r\n                          <input style=\"text-indent: 2em;\" matInput (keyup)=\"applyFilter($event)\" placeholder=\"Search Device\" #input>  \r\n                           <mat-icon style=\"color: gray;\" matPrefix>search</mat-icon>\r\n                         \r\n                      </mat-form-field>\r\n                     \r\n                      <mat-form-field style=\"width: 65%;\" appearance=\"standard\">\r\n                          <mat-label>SELECT COMMAND</mat-label>\r\n                          <mat-select name=\"javaV\" placeholder=\"JAVA VERSION\">\r\n                            \r\n                            <div *ngFor=\"let message of messages\">\r\n                              <mat-option *ngIf=\"message.DeviceType == deviceType\" (click)=\"listed(message)\" [value]=\"message.CommandName\">\r\n                                {{message.CommandName}}\r\n                              </mat-option>\r\n                            </div>\r\n                          \r\n                          </mat-select>\r\n                        </mat-form-field>\r\n                        <button mat-raised-button class=\"btn2\" (click)=\"AddCommand()\">ADD COMMAND</button>\r\n                  </div>\r\n                  </div>\r\n                  <div class=\"col-sm-4\">\r\n                     \r\n\r\n                      <button mat-raised-button class=\"btn1\" (click)=\"PostData()\">REQUEST UPGRADE COMMAND</button>\r\n                        \r\n                  </div>\r\n              </div>\r\n          </div>        \r\n          \r\n\r\n      </mat-card>\r\n  </mat-tab>\r\n  <mat-tab label=\"Multiple Device Update\"> \r\n      <mat-card class=\"multi\">\r\n          <div *ngIf=\"tabIndex === 1\">\r\n              <div class=\"pack\">\r\n              <p>Multiple Device Update is to handle upgrades of multiple options under one go.</p>\r\n              <p>To upload the device list click the device upload button to upload an excel sheet.</p>\r\n              \r\n            </div>\r\n              <p class=\"back\">Note : The format for the upload is to list all device in one column with header title as <b>Device ID</b></p>\r\n              <button mat-raised-button (click)=\"fileInput.click()\" class=\"one\">\r\n                <mat-icon class=\"con1\">file_upload</mat-icon>\r\n                Device Upload\r\n            </button>\r\n            <input #fileInput  type=\"file\" name=\"files\"  accept=\".xlsx,.csv\" id=\"myfile\" (change)=\"addfile($event.target.files)\" style=\"display:none;\" />\r\n          </div>\r\n      </mat-card>    \r\n  </mat-tab>\r\n\r\n</mat-tab-group>\r\n\r\n<div *ngIf=\"tabIndex === 0\" >\r\n<div *ngIf=\"this.temp != null\">\r\n  <!-- <div *ngFor=\"let edu of emp1\">\r\n    {{edu.DeviceID}}\r\n  </div> -->\r\n  <button mat-raised-button (click)=\"exporter.exportTable('xlsx', {fileName: 'Other OTAP Command Report'})\" class=\"btns1\">DOWNLOAD <mat-icon style=\"padding: 0 10px; vertical-align: middle;\">cloud_download</mat-icon></button>\r\n  <table mat-table  matTableExporter [dataSource]=\"dataSource\" matSort  class=\"mat-elevation-z8\" #exporter=\"matTableExporter\">\r\n\r\n    <ng-container matColumnDef=\"select\">\r\n      <th mat-header-cell *matHeaderCellDef=\"let row; let i = index\" ><mat-checkbox (change)=\"$event ? toggleRow(row, i) : null\" color=\"primary\"></mat-checkbox></th>\r\n      <td mat-cell *matCellDef=\"let row; let i = index\">    <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\"\r\n        (change)=\"$event ? toggleRow(row, i) : null\"\r\n        [checked]=\"selection.isSelected(row)\"\r\n        [aria-label]=\"checkboxLabel(row)\"></mat-checkbox> </td>\r\n    </ng-container>\r\n    \r\n\r\n    \r\n      <ng-container matColumnDef=\"DeviceID\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\r\n    \r\n        <td mat-cell *matCellDef=\"let element\"><a style=\" text-decoration-line: underline;color: #005F9E;\">  {{element.DeviceID}} </a></td>\r\n\r\n      </ng-container>\r\n\r\n  \r\n      <ng-container matColumnDef=\"DeviceType\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> DEVICE<br>TYPE </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.DeviceType}} </td>\r\n      </ng-container>\r\n  \r\n      <ng-container matColumnDef=\"Customer\">\r\n        <th mat-header-cell *matHeaderCellDef > CUSTOMER<br>NAME </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.Customer}} </td>\r\n      </ng-container>\r\n    \r\n      <ng-container matColumnDef=\"NetworkProvider\">\r\n        <th mat-header-cell *matHeaderCellDef> NETWORK<br>PROVIDER </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.NetworkProvider}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"MobileNo\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> MOBILE NO. </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.MobileNo}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"Model\">\r\n        <th mat-header-cell *matHeaderCellDef> VEHICLE<br>TYPE NAME </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.Model}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"VehicleTypeName\">\r\n        <th mat-header-cell *matHeaderCellDef > MODEL </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.VehicleTypeName}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"CurrentCVersion\">\r\n        <th mat-header-cell *matHeaderCellDef> CURRENT <br>C VERSION</th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.CurrentCVersion}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"CurrentJavaVersion\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> CURRENT<br>JAVA VERSION </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.CurrentJavaVersion}} </td>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"Ignition\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> IGNITION </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.Ignition}} </td>\r\n      </ng-container>\r\n    \r\n \r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n    </table>\r\n  \r\n   \r\n      <mat-paginator style-paginator [showTotalPages]=\"4\" [length]=\"dataSource.data.length\"\r\n      [pageSize]=\"10\"></mat-paginator>\r\n     \r\n    </div>\r\n    <div *ngIf=\"this.temp == null\">\r\n      <h3 style=\"color: #666; text-align: center; font-weight: 500;\">Records Not found</h3>\r\n    </div>\r\n\r\n    \r\n</div>\r\n<div *ngIf=\"tabIndex === 1 && !loadingFlag1\" >\r\n\r\n<mat-card style=\"margin: 20px;\">\r\n  <div class=\"container-fluid\">\r\n      <div class=\"row\">\r\n          <div class=\"col-sm-8 cleft\">\r\n              <p>Single device search option is to handle upgradation of the searched device</p>\r\n              <div class=\"example-container\" >\r\n              <mat-form-field style=\"width: 100%;\" appearance=\"outline\">\r\n                 \r\n                  <input style=\"text-indent: 2em;\" matInput (keyup)=\"applyFilter1($event)\" placeholder=\"Search Device\" #input>  \r\n                   <mat-icon style=\"color: gray;\" matPrefix>search</mat-icon>\r\n                 \r\n              </mat-form-field>\r\n             \r\n              <mat-form-field style=\"width: 65%;\" appearance=\"standard\">\r\n                <mat-label>SELECT COMMAND</mat-label>\r\n                <mat-select name=\"javaV\" placeholder=\"JAVA VERSION\">\r\n                  \r\n                  <div *ngFor=\"let message of messages\">\r\n                    <mat-option *ngIf=\"message.DeviceType == deviceType\" (click)=\"listed(message)\" [value]=\"message.CommandName\">\r\n                      {{message.CommandName}}\r\n                    </mat-option>\r\n                  </div>\r\n                \r\n                </mat-select>\r\n              </mat-form-field>\r\n                <button mat-raised-button class=\"btn2\" (click)=\"AddCommand()\">ADD COMMAND</button>\r\n          </div>\r\n          </div>\r\n          <div class=\"col-sm-4\">\r\n             \r\n         \r\n              <button mat-raised-button class=\"btn1\" (click)=\"PostData()\">REQUEST UPGRADE COMMAND</button>\r\n                \r\n          </div>\r\n      </div>\r\n  </div>        \r\n  \r\n\r\n</mat-card>\r\n\r\n<table mat-table  matTableExporter [dataSource]=\"dataSource1\" matSort  class=\"mat-elevation-z8\" #exporter=\"matTableExporter\">\r\n\r\n  <ng-container matColumnDef=\"select\">\r\n    <th mat-header-cell *matHeaderCellDef=\"let row; let i = index\" ><mat-checkbox (change)=\"$event ? toggleRow(row, i) : null\" color=\"primary\"></mat-checkbox></th>\r\n    <td mat-cell *matCellDef=\"let row; let i = index\">    <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\"\r\n      (change)=\"$event ? toggleRow(row, i) : null\"\r\n      [checked]=\"selection.isSelected(row)\"\r\n      [aria-label]=\"checkboxLabel(row)\"></mat-checkbox> </td>\r\n  </ng-container>\r\n  \r\n\r\n  \r\n    <ng-container matColumnDef=\"DeviceID\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\r\n      <td mat-cell *matCellDef=\"let element\"><a style=\" text-decoration-line: underline;color: #005F9E;\">  {{element.DeviceID}} </a></td>\r\n    </ng-container>\r\n\r\n\r\n    <ng-container matColumnDef=\"DeviceType\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> DEVICE<br>TYPE </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.DeviceType}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"Customer\">\r\n      <th mat-header-cell *matHeaderCellDef > CUSTOMER<br>NAME </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.Customer}} </td>\r\n    </ng-container>\r\n  \r\n    <ng-container matColumnDef=\"NetworkProvider\">\r\n      <th mat-header-cell *matHeaderCellDef> NETWORK<br>PROVIDER </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.NetworkProvider}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"MobileNo\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> MOBILE NO. </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.MobileNo}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"Model\">\r\n      <th mat-header-cell *matHeaderCellDef> VEHICLE<br>TYPE NAME </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.Model}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"VehicleTypeName\">\r\n      <th mat-header-cell *matHeaderCellDef > MODEL </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.VehicleTypeName}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"CurrentCVersion\">\r\n      <th mat-header-cell *matHeaderCellDef> CURRENT <br>C VERSION</th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.CurrentCVersion}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"CurrentJavaVersion\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> CURRENT<br>JAVA VERSION </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.CurrentJavaVersion}} </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"Ignition\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> IGNITION </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.Ignition}} </td>\r\n\r\n     \r\n    </ng-container>\r\n   \r\n  \r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n   \r\n\r\n  </table>\r\n\r\n  \r\n \r\n\r\n\r\n</div>","\r\n<form #addCommandForm=\"ngForm\" style=\"text-align: center; margin: 20px;\" >\r\n<div *ngFor=\"let message of ClusterArrays\">\r\n    <mat-form-field appearance=\"outline\" style=\"width: 100%;\" >\r\n        <mat-label >{{message}}</mat-label>\r\n        <input matInput [name]=\"message\" ngModel  required>\r\n\r\n    </mat-form-field>\r\n</div>\r\n<button mat-raised-button color=\"primary\" (click)=\"AddCommand(addCommandForm)\" style=\" background-color: #005F9E !important\">\r\n    Submit\r\n</button>\r\n</form>","<form #addCommandForm=\"ngForm\" style=\"text-align: center; margin: 20px;\" >\r\n    \r\n        <mat-form-field appearance=\"outline\" style=\"width: 100%;\" >\r\n            <mat-label >Device Type</mat-label>\r\n            <input matInput name=\"deviceId\" type=\"text\" placeholder=\"Device Type\"  ngModel [(ngModel)]=\"deviceId\" required>\r\n\r\n        </mat-form-field>\r\n        \r\n        <mat-form-field appearance=\"outline\" style=\"width: 100%;\" >\r\n            <mat-label >Packet ID</mat-label>\r\n            <input matInput name=\"packetId\" type=\"number\" placeholder=\"Packet ID\" ngModel  [(ngModel)]=\"packetId\" required>\r\n\r\n        </mat-form-field>\r\n        \r\n        <mat-form-field appearance=\"outline\" style=\"width: 100%;\" >\r\n            <mat-label >Command Name</mat-label>\r\n            <input matInput name=\"name\" placeholder=\"Command Name\" ngModel  [(ngModel)]=\"name\" required>\r\n\r\n        </mat-form-field>\r\n        \r\n        <mat-form-field appearance=\"outline\" style=\"width: 100%;\" >\r\n            <mat-label >Message Format</mat-label>\r\n            <input matInput name=\"message\" placeholder=\"Message Format\" ngModel  [(ngModel)]=\"message\" required>\r\n\r\n        </mat-form-field>\r\n        <button mat-raised-button color=\"primary\" (click)=\"AddCommand(addCommandForm)\" style=\" background-color: #005F9E !important\">\r\n            Submit\r\n        </button>\r\n</form>","import { Injectable } from '@angular/core';\r\nimport { HttpClient,HttpHeaders } from '@angular/common/http'\r\nimport { Router } from '@angular/router'\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UpgradecommandService {\r\n\r\n  constructor(private http: HttpClient,\r\n    private _router: Router) { }\r\n\r\n  PublishedVersion(data) {\r\n    return this.http.post<object>(`${environment._publishVersion}`, data).pipe(map(user => {\r\n     \r\n      return user;\r\n  }));\r\n  }\r\n\r\n  IotDeviceOutBound(data,deviceID){\r\n    return this.http.put(`${environment._deviceOutbound}/iot-stg/1.0/shadow/46952541-3269-45fb-9f93-386bbe17372d-${deviceID}`, data).pipe(map(user => {\r\n      \r\n      return user;\r\n  }));\r\n  }\r\n\r\n  GetIotDeviceOutBound(){\r\n    let headers = new HttpHeaders({\r\n       '*' : 'Access-Control-Allow-Origin'\r\n    })\r\n\r\n    return this.http.get<any>(`${environment._getDevice}`,{ headers: headers }).pipe(map(user => {\r\n     \r\n      return user;\r\n  }));\r\n  }\r\n}\r\n","import { Component, OnInit, AfterContentInit, AfterViewInit , AfterContentChecked} from '@angular/core';\r\nimport {ViewChild} from '@angular/core';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {MatSort , Sort} from '@angular/material/sort'; \r\nimport { OutboundCdgMultiple} from '../model/model'\r\nimport { OutboundService } from './outbound.service';\r\nimport * as XLSX from 'xlsx';\r\nimport { FormBuilder, FormGroup, Validators, NgForm } from '@angular/forms';\r\nimport { from } from 'rxjs';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { MatTableExporterDirective } from 'mat-table-exporter';\r\n\r\n\r\n@Component({\r\n  selector: 'app-outbound-status',\r\n  templateUrl: './outbound-status.component.html',\r\n  styleUrls: ['./outbound-status.component.css']\r\n})\r\nexport class OutboundStatusComponent implements OnInit , AfterViewInit , AfterContentChecked ,AfterContentInit {\r\n\r\n \r\n  \r\n  Outbound:OutboundCdgMultiple;\r\n  public entries: object = [];\r\n  public entries1: object = [];\r\n  // public file : File;\r\n  fileToUpload: File;\r\n  id = 0;\r\n  tabIndex = 0;\r\n  temp = null\r\n  temp1 = null\r\n  listData: MatTableDataSource<any>\r\n  listData1: MatTableDataSource<any>\r\n  arrayBuffer:any;\r\n  file:File;\r\n  filelist: any;\r\n  deviceArr = [];\r\n  deviceJSON: any;\r\n  loadingFlag = true;\r\n  loadingFlag1 = true;\r\n  fileName= 'Outbound Status Report.xlsx'; \r\n  displayedColumns: string[]=[\"select\",\"_id\",\"DeviceId\",\"cn\",\"symbol\",\"weight\",\"mn2\",\"Message.FilePath\",\"Message.APN\",\"InsertUTC\",\"model\"]\r\n  displayedColumns1: string[]=[\"select\",\"_id\",\"DeviceId\",\"cn\",\"symbol\",\"weight\",\"mn2\",\"Message.FilePath\",\"Message.APN\",\"InsertUTC\",\"model\"]\r\n  selection = new SelectionModel(true, []);\r\n  @ViewChild(MatPaginator) paginators: MatPaginator;\r\n // @ViewChild(MatSort) sort: MatSort;\r\n @ViewChild(MatTableExporterDirective, { static: false }) exporter: MatTableExporterDirective;\r\n  \r\n  constructor(private route: ActivatedRoute, private outbound: OutboundService,private router:Router ) { }\r\n  \r\n    ngOnInit(): void {\r\n      \r\n        this.outbound.outbound().subscribe(\r\n          data => { \r\n            this.entries = data;          \r\n      function* entries(obj) {\r\n        for (let key of Object.keys(obj)) {\r\n          yield [key, obj[key]];\r\n        }\r\n     }\r\n\r\n     for (let [key1, value1] of entries(this.entries)) {\r\n     \r\n        if(key1 == 'result'){\r\n        \r\n          this.listData = new MatTableDataSource(value1)\r\n          this.listData ? this.loadingFlag = false : this.loadingFlag = true;\r\n         \r\n          this.temp = this.listData.data.length;\r\n        }\r\n\r\n      }\r\n      this.listData.sortingDataAccessor = (item, property) => {\r\n        switch(property) {\r\n          case 'Message.FilePath': return item.Message.FilePath;\r\n          case 'Message.APN' : return item.Message.APN;\r\n          default: return item[property];\r\n        }\r\n      };\r\n   //   this.listData.sort = this.sort;\r\n\r\n     // setTimeout(() => this.listData.paginator = this.paginator);\r\n\r\n   \r\n          },\r\n          err => console.log(err)\r\n        ) \r\n\r\n        \r\n      \r\n      \r\n      this.Outbound ={\r\n        invoice: '',\r\n        device: '',\r\n        dispatch: '',\r\n        from: '',\r\n        to: ''\r\n      }\r\n    }\r\n  \r\n  \r\n    private isAllSelected() {\r\n      const numSelected = this.selection.selected.length;\r\n      const numRows = this.listData.data.length;\r\n      return numSelected === numRows;\r\n    }\r\n  \r\n    toggleRow(row: any, index: number) {\r\n      this.selection.toggle(row);\r\n      this.exporter.toggleRow(index);\r\n    }\r\n  \r\n    /** The label for the checkbox on the passed row */\r\n    checkboxLabel(row?: any): string {\r\n      if (!row) {\r\n        return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\r\n      }\r\n      return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\r\n    }\r\n  \r\n  \r\n  \r\n  \r\n    changeTab(event) {\r\n     \r\n      this.tabIndex = event.index;\r\n     \r\n    }\r\n\r\n\r\n    public onClicking(accountForm: NgForm)\r\n    {\r\n     \r\n      if(accountForm.valid)\r\n      {\r\n       \r\n      }\r\n      else\r\n      {\r\n        return;\r\n      }\r\n  \r\n    }\r\n\r\n    private paginator: MatPaginator;\r\n    private sort: MatSort;\r\n    private paginator1: MatPaginator;\r\n    private sort1: MatSort;\r\n    searchKey:string;\r\n  \r\n  \r\n    @ViewChild(MatSort) set matSort(ms: MatSort) {\r\n      this.sort = ms;\r\n      this.sort1 = ms;\r\n      this.setDataSourceAttributes();\r\n    }\r\n  \r\n    @ViewChild(MatPaginator) set matPaginator(mp: MatPaginator) {\r\n      this.paginator = mp;\r\n      this.paginator1 = mp;\r\n      this.setDataSourceAttributes();\r\n    }\r\n\r\n\r\n    \r\n  \r\n    setDataSourceAttributes() {\r\n      if(this.loadingFlag == false){\r\n      this.listData.paginator = this.paginator \r\n      this.listData.sort = this.sort;\r\n    }\r\n\r\n    if(this.loadingFlag1 == false){\r\n     // this.listData1.paginator = this.paginator1 \r\n      this.listData1.sort = this.sort1;\r\n    }\r\n    }\r\n\r\n   \r\n      ngAfterContentInit(){\r\n       \r\n      }\r\n     \r\n\r\n      ngAfterViewInit() {\r\n         \r\n      }\r\n\r\n      ngAfterContentChecked()\t{\r\n        \r\n      }\r\n    \r\n    \r\n\r\npostMethod(files: FileList) {\r\n  this.fileToUpload = files.item(0);\r\n  if(this.fileToUpload != null){\r\n    alert(\"FIle Successfully Uploaded\")\r\n  }\r\n\r\n  }\r\n      \r\n    applyFilter() {\r\n    \r\n      this.listData.filter = this.searchKey.trim().toLowerCase();\r\n    }\r\n    addfile(files: FileList) {\r\n      this.file = files.item(0);\r\n       \r\n  let fileReader = new FileReader();    \r\n  fileReader.readAsArrayBuffer(this.file);     \r\n  fileReader.onload = (e) => {    \r\n      this.arrayBuffer = fileReader.result;    \r\n      var data = new Uint8Array(this.arrayBuffer);    \r\n      var arr = new Array();    \r\n      for(var i = 0; i != data.length; ++i) arr[i] = String.fromCharCode(data[i]);    \r\n      var bstr = arr.join(\"\");    \r\n      var workbook = XLSX.read(bstr, {type:\"binary\"});    \r\n      var first_sheet_name = workbook.SheetNames[0];    \r\n      var worksheet = workbook.Sheets[first_sheet_name];    \r\n      this.filelist = XLSX.utils.sheet_to_json(worksheet,{raw:true});    \r\n      this.parseFile(this.filelist);\r\n  }    \r\n}\r\nparseFile(fileData) {\r\n  fileData.map(data=> {\r\n   \r\n    this.deviceArr.push(data['Device ID'])\r\n   \r\n  })\r\n  this.deviceJSON = {\r\n    \"deviceList\": this.deviceArr\r\n  }\r\n  this.outbound.multipleDevice(this.deviceJSON).pipe().subscribe(data=> {\r\n\r\n    this.entries1 = data;          \r\n    function* entries1(obj) {\r\n      for (let key of Object.keys(obj)) {\r\n        yield [key, obj[key]];\r\n      }\r\n   }\r\n\r\n   for (let [key1, value1] of entries1(this.entries1)) {\r\n    \r\n      if(key1 == 'result'){\r\n       \r\n        this.listData1 = new MatTableDataSource(value1)\r\n        this.listData1 ? this.loadingFlag1 = false : this.loadingFlag1 = true;\r\n        setTimeout(() => this.listData1.paginator = this.paginator);\r\n        this.temp1 = this.listData1.data.length;\r\n       \r\n      }\r\n\r\n    }\r\n    \r\n  })\r\n}\r\n\r\n/** Selects all rows if they are not all selected; otherwise clear selection. */\r\nmasterToggle() {\r\n  this.isAllSelected() ?\r\n      this.selection.clear() :\r\n      this.listData.data.forEach(row => this.selection.select(row));\r\n     \r\n}\r\n\r\n  \r\n  \r\n  \r\n    updateCheckedList(element)\r\n    {\r\n      \r\n    }\r\n\r\n\r\n    dash(){\r\n      this.router.navigate(['Firmware']);\r\n    }\r\n  }\r\n  ","<div class=\"container-fluid\">\r\n  <div class=\"row\">\r\n      <div class=\"col-12\">\r\n          <p class=\"tyt\"><span>Menu</span> > <span (click)=\"dash()\">Fireware Manager</span> > <span>Outbound Status CDG</span> > <span>Customer Ashok Leyland</span></p>\r\n          <mat-divider></mat-divider>\r\n      </div>\r\n  </div>\r\n</div>\r\n<p class=\"tyts\">Outbound Status CDG</p>\r\n<mat-tab-group mat-align-tabs=\"end\" selectedIndex=\"{{this.id}}\" (selectedTabChange)=\"changeTab($event)\">\r\n  <mat-tab label=\"Single Device Search\"> \r\n      <mat-card>\r\n          <div class=\"container-fluid\">\r\n              <div class=\"row\">\r\n                  <div class=\"col-sm-8 cleft\">\r\n                      <p>Single device search option is used to searched device status</p>\r\n                      <div class=\"example-container\" >\r\n                      <mat-form-field style=\"width: 80%;\" appearance=\"outline\">\r\n                         \r\n                          <input style=\"text-indent: 2em;\" matInput [(ngModel)]=\"searchKey\" (keyup)=\"applyFilter()\" placeholder=\"Search Device\" #input>  \r\n                           <mat-icon style=\"color: gray;\" matPrefix>search</mat-icon>\r\n                         \r\n                      </mat-form-field>\r\n                      <button (click)=\"exporter.exportTable('xlsx', {fileName: 'Outbound Status Report'})\" mat-raised-button class=\"btn\">SUBMIT</button>\r\n                      \r\n                  </div>\r\n                  </div>\r\n                  <div class=\"col-sm-4\">\r\n                     \r\n                 \r\n                    <button (click)=\"exporter.exportTable('xlsx', {fileName: 'Outbound Status Report'})\" mat-raised-button class=\"btn1\">DATA DOWNLOAD</button>\r\n                      \r\n                        \r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            \r\n\r\n        </mat-card>\r\n    </mat-tab>\r\n    <mat-tab label=\"Multiple Device Update\"> \r\n        <mat-card class=\"multi\">\r\n            <div *ngIf=\"tabIndex === 1\">\r\n              \r\n             \r\n            <div class=\"pack\">\r\n              <p>Multiple Device Update is to handle upgrades of multiple options under one go.</p>\r\n              <p>To upload the device list click the device upload button to upload an excel sheet.</p>\r\n              \r\n            </div>\r\n              <p class=\"back\">Note : The format for the upload is to list all device in one column with header title as <b>Device ID</b></p>\r\n              <button mat-raised-button (click)=\"fileInput.click()\" class=\"one\">\r\n                <mat-icon class=\"con1\">file_upload</mat-icon>\r\n                Device Upload\r\n            </button>\r\n            <input #fileInput  type=\"file\" name=\"files\"  accept=\".xlsx,.csv\" id=\"myfile\" (change)=\"addfile($event.target.files)\" style=\"display:none;\" />\r\n          </div>\r\n      </mat-card>    \r\n  </mat-tab>\r\n\r\n</mat-tab-group>\r\n<div *ngIf=\"tabIndex === 0 && loadingFlag\" class=\"uploader-status\">\r\n<mat-spinner></mat-spinner>\r\n</div>\r\n<div *ngIf=\"tabIndex === 0 && !loadingFlag\" >\r\n    <table mat-table matTableExporter [dataSource]=\"listData\" matSort id=\"excel-table\" class=\"mat-elevation-z8\" #exporter=\"matTableExporter\">\r\n\r\n      <ng-container matColumnDef=\"select\">\r\n        <th mat-header-cell *matHeaderCellDef=\"let row; let i = index\" ><mat-checkbox (change)=\"$event ? toggleRow(row, i) : null\" color=\"primary\"></mat-checkbox></th>\r\n        <td mat-cell *matCellDef=\"let row; let i = index\">    <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\"\r\n          (change)=\"$event ? toggleRow(row, i) : null\"\r\n          [checked]=\"selection.isSelected(row)\"\r\n          [aria-label]=\"checkboxLabel(row)\"></mat-checkbox> </td>\r\n      </ng-container>\r\n \r\n\r\n    \r\n      <ng-container matColumnDef=\"_id\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\r\n        <td mat-cell *matCellDef=\"let element\"><a style=\" text-decoration-line: underline;color: #005F9E;\">  {{element._id}} </a></td>\r\n      </ng-container>\r\n\r\n  \r\n      <ng-container matColumnDef=\"DeviceId\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> DEVICE<br>TYPE </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.DeviceId}}</td>\r\n      </ng-container>\r\n  \r\n      <ng-container matColumnDef=\"cn\">\r\n        <th mat-header-cell *matHeaderCellDef > PAYLOAD </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.PacketId}}</td>\r\n      </ng-container>\r\n    \r\n      <ng-container matColumnDef=\"symbol\">\r\n        <th mat-header-cell *matHeaderCellDef> MESSAGE REQUESTED </th>\r\n        <td mat-cell *matCellDef=\"let element\"> <span>{{element.RequestId}}</span> </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"weight\">\r\n        <th mat-header-cell *matHeaderCellDef > NETWORK<br>PROVIDER </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.Name}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"mn2\">\r\n        <th mat-header-cell *matHeaderCellDef > MOBILE NO. </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.Message.Port}}</td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"Message.FilePath\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> USERNAME </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.Message.FilePath}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"Message.APN\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> EMAIL ID</th>\r\n        <td mat-cell *matCellDef=\"let element\">{{element.Message.APN}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"InsertUTC\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> RECEIVED TIME </th>\r\n        <td mat-cell *matCellDef=\"let element\"> {{element.InsertUTC | date:'yyyy-MM-dd'}}<br> {{element.InsertUTC | date:'HH:mm:ss'}} </td>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"model\">\r\n        <th mat-header-cell *matHeaderCellDef> UPDATED UTC </th>\r\n        <td mat-cell *matCellDef=\"let element\">{{element.UpdateUTC | date:'yyyy-MM-dd'}}<br> {{element.UpdateUTC | date:'HH:mm:ss'}} </td>\r\n      </ng-container>\r\n    \r\n \r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n    </table>\r\n  \r\n    <div *ngIf=\"this.temp != null\">\r\n      <mat-paginator style-paginator [showTotalPages]=\"4\" [length]=\"listData.data.length\"\r\n      [pageSize]=\"8\"></mat-paginator>\r\n    </div>\r\n\r\n    <div *ngIf=\"this.temp == null\">\r\n      <h3 style=\"color: #666; text-align: center; font-weight: 500;\">Records Not found</h3>\r\n    </div>\r\n</div>\r\n\r\n\r\n<div *ngIf=\"tabIndex === 1 && !loadingFlag1\" >\r\n  <mat-card style=\"margin: 20px;\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-8 cleft\">\r\n                <p>Single device search option is used to searched device status</p>\r\n                <div class=\"example-container\" >\r\n                <mat-form-field style=\"width: 80%;\" appearance=\"outline\">\r\n                   \r\n                    <input style=\"text-indent: 2em;\" matInput [(ngModel)]=\"searchKey\" (keyup)=\"applyFilter()\" placeholder=\"Search Device\" #input>  \r\n                     <mat-icon style=\"color: gray;\" matPrefix>search</mat-icon>\r\n                   \r\n                </mat-form-field>\r\n                <button (click)=\"exporter.exportTable('xlsx', {fileName: 'Outbound Status Report'})\" mat-raised-button class=\"btn\">SUBMIT</button>\r\n                \r\n            </div>\r\n            </div>\r\n            <div class=\"col-sm-4\">\r\n               \r\n           \r\n              <button (click)=\"exporter.exportTable('xlsx', {fileName: 'Outbound Status Report'})\" mat-raised-button class=\"btn1\">DATA DOWNLOAD</button>\r\n                \r\n                  \r\n              </div>\r\n              </div>\r\n          </div>\r\n      \r\n\r\n  </mat-card>\r\n  <table mat-table matTableExporter [dataSource]=\"listData1\" matSort id=\"excel-table\" class=\"mat-elevation-z8\" #exporter=\"matTableExporter\">\r\n\r\n    <ng-container matColumnDef=\"select\">\r\n      <th mat-header-cell *matHeaderCellDef=\"let row; let i = index\" ><mat-checkbox color=\"primary\"></mat-checkbox></th>\r\n      <td mat-cell *matCellDef=\"let row; let i = index\">    <mat-checkbox color=\"primary\"></mat-checkbox> </td>\r\n    </ng-container>\r\n\r\n\r\n  \r\n    <ng-container matColumnDef=\"_id\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\r\n      <td mat-cell *matCellDef=\"let element\"><a style=\" text-decoration-line: underline;color: #005F9E;\">  {{element._id}} </a></td>\r\n    </ng-container>\r\n\r\n\r\n    <ng-container matColumnDef=\"DeviceId\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> DEVICE<br>TYPE </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.DeviceId}}</td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"cn\">\r\n      <th mat-header-cell *matHeaderCellDef > PAYLOAD </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.PacketId}}</td>\r\n    </ng-container>\r\n  \r\n    <ng-container matColumnDef=\"symbol\">\r\n      <th mat-header-cell *matHeaderCellDef> MESSAGE<br>REQUESTED </th>\r\n      <td mat-cell *matCellDef=\"let element\"> <span>{{element.RequestId}}</span> </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"weight\">\r\n      <th mat-header-cell *matHeaderCellDef > NETWORK<br>PROVIDER </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.Name}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"mn2\">\r\n      <th mat-header-cell *matHeaderCellDef > MOBILE NO. </th>\r\n      <td mat-cell *matCellDef=\"let element\"> </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"Message.FilePath\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> USERNAME </th>\r\n      <td mat-cell *matCellDef=\"let element\">  </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"Message.APN\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> EMAIL ID</th>\r\n      <td mat-cell *matCellDef=\"let element\"> </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"InsertUTC\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> RECEIVED TIME </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.InsertUTC | date:'yyyy-MM-dd'}}<br> {{element.InsertUTC | date:'HH:mm:ss'}} </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"model\">\r\n      <th mat-header-cell *matHeaderCellDef> UPDATED UTC </th>\r\n      <td mat-cell *matCellDef=\"let element\">{{element.UpdateUTC | date:'yyyy-MM-dd'}}<br> {{element.UpdateUTC | date:'HH:mm:ss'}} </td>\r\n    </ng-container>\r\n  \r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n  </table>\r\n\r\n \r\n\r\n  <div *ngIf=\"this.temp1 == null\">\r\n    <h3 style=\"color: #666; text-align: center; font-weight: 500;\">Records Not found</h3>\r\n  </div>\r\n</div>","\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient,HttpHeaders } from '@angular/common/http'\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OutboundService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  outbound() {\r\n    return this.http.get<any>(`${environment._outboundapi}`).pipe(map(user => {\r\n     \r\n      return user;\r\n  }));\r\n  }\r\n  multipleDevice(deviceList) {\r\n    return this.http.post<any>(`${environment._multipleDeviceapi}`,deviceList).pipe(map(user => {\r\n     \r\n      return user;\r\n  }));\r\n  }\r\n}\r\n","export interface DateParse {\r\n    dateInput: string;\r\n  }\r\n  export type DateDisplay = DateParse & {\r\n    monthYearLabel?: string;\r\n    dateA11yLabel?: string;\r\n    monthYearA11yLabel?: string;\r\n  };\r\n  export class CustomDateFormat {\r\n    private _parse: DateParse = {\r\n      dateInput: \"YYYY/MM/DD\"\r\n    };\r\n    private _display: DateDisplay = {\r\n      dateInput: \"YYYY/MM/DD\",\r\n      monthYearLabel: \"MMM YYYY\",\r\n      dateA11yLabel: \"LL\",\r\n      monthYearA11yLabel: \"MMM YYYY\"\r\n    };\r\n  \r\n    set parse(parse: DateParse) {\r\n      this._parse = Object.assign({}, this._parse, parse);\r\n    }\r\n  \r\n    get parse(): DateParse {\r\n      return this._parse;\r\n    }\r\n  \r\n    set display(display: DateDisplay) {\r\n      this._display = Object.assign({}, this._display, display);\r\n    }\r\n  \r\n    get display(): DateDisplay {\r\n      return this._display;\r\n    }\r\n  \r\n    updateDateFormat(parse: DateParse, display?: DateDisplay) {\r\n      this.parse = parse;\r\n      if (!display) {\r\n        display = parse;\r\n      }\r\n      this.display = display;\r\n    }\r\n  }\r\n  ","import { Directive, Inject, Input, Optional } from \"@angular/core\";\r\nimport { NgControl } from \"@angular/forms\";\r\nimport { DateAdapter, MAT_DATE_FORMATS } from \"@angular/material/core\";\r\nimport { CustomDateFormat, DateDisplay, DateParse } from \"./custom-date-format\";\r\nimport { MomentDateAdapter } from \"@angular/material-moment-adapter\";\r\n\r\n\r\n@Directive({\r\n  selector: \"[datePickerFormat]\",\r\n  providers: [\r\n    {\r\n      provide: DateAdapter,\r\n      useClass: MomentDateAdapter\r\n    },\r\n    {\r\n      provide: MAT_DATE_FORMATS,\r\n      useClass: CustomDateFormat\r\n    }\r\n  ]\r\n})\r\nexport class DatePickerFormatDirective {\r\n  @Input() public configDateParse: DateParse;\r\n  @Input() public configDateDisplay: DateDisplay;\r\n\r\n  @Input(\"datePickerFormat\")\r\n  set datePickerFormat(format: string) {\r\n    if (this.configDateParse) {\r\n      this.matDateFormat.updateDateFormat(\r\n        this.configDateParse,\r\n        this.configDateDisplay\r\n      );\r\n    } else {\r\n      this.matDateFormat.updateDateFormat({ dateInput: format });\r\n    }\r\n\r\n    const value = this.ngControl.value;\r\n    this.ngControl.valueAccessor?.writeValue(value);\r\n  }\r\n\r\n  constructor(\r\n    @Inject(MAT_DATE_FORMATS) public matDateFormat: CustomDateFormat,\r\n    @Optional() private ngControl: NgControl\r\n  ) {}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\n\r\nimport {AuthenticationService } from './authentication.service';\r\n\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(\r\n        private router: Router,\r\n        private authenticationService: AuthenticationService\r\n    ) { }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        const user = this.authenticationService.userValue;\r\n        if (user) {\r\n            // logged in so return true\r\n            return true;\r\n        }\r\n\r\n        // not logged in so redirect to login page with the return url\r\n        this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\r\n        return false;\r\n    }\r\n}","  \r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient,HttpHeaders } from '@angular/common/http'\r\nimport { Router } from '@angular/router'\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthenticationService {\r\n  private userSubject: BehaviorSubject<any>;\r\n  public user: Observable<any>;\r\n\r\n \r\n\r\n  constructor(private http: HttpClient,\r\n    private _router: Router) {\r\n      this.userSubject = new BehaviorSubject<any>(localStorage.getItem('user'));\r\n        this.user = this.userSubject.asObservable();\r\n     }\r\n     public get userValue() {\r\n      return this.userSubject.value;\r\n  }\r\n    loginUser(loginData) {\r\n      let headers = new HttpHeaders({\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n      //  'Authorization': 'Basic V2ZJNjlCSVN4NlhzcVB2UVJrRFlJZTVZU3lRYTpmMVhBcjFrVmdkQW00a01mU1lNYzNNQUdtaUlh'}); //single device search\r\n     // 'Authorization': 'Basic dzhxZTYxaTZrT0J5MVFobE5PUUVodGRLOUpzYTpYcFdEVVF4R3hfd2ZFb25EeGw4REhJN2s0Y0Fh'});    //C and java firmware upload          \r\n        // 'Authorization': 'Basic aHdmaXRqQlQ1bGVvWm9qeFZ4SzRnMlpwM0FFYTpNMDYzbDdZSk5TRzBrUVBwS3BKVEVDcmNPNElh'}); // Upload Firmware\r\n         // 'Authorization': 'Basic SkpwUnNKY0JneFVxMVhMcFZnejhFb0I1TFZBYTo5Uzl1MVNmUUQ0MV8wYVF4a1FjSTJxa1Z3Nm9h'}); //Outbound\r\n          'Authorization': 'Basic U2EzOW42cnQxREY5ekxZSXNIWFJoT2dWUlhjYTpaVEp5SWZmRkFBamc3cTlRNGxOaVZTbFd4Wjhh'}); //IotOutBound \r\n        let options = { headers: headers };\r\n    \r\n      return this.http.post<any>(`${environment._loginProdUrl}`,loginData,options).pipe(map(user => {\r\n        console.log(user);\r\n        // store user details and basic auth credentials in local storage to keep user logged in between page refreshes\r\n        user.authdata = user.access_token;\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n        this.userSubject.next(user);\r\n        return user;\r\n    }));\r\n    }\r\n\r\n  \r\n\r\n\r\n    getToken() {\r\n      return localStorage.getItem('token')\r\n    }\r\n\r\n    loggedIn() {\r\n      return !!localStorage.getItem('token')    \r\n    }\r\n}\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { HttpInterceptor, HttpEvent } from '@angular/common/http';\r\nimport {AuthenticationService } from './authentication.service';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TokenInterceptorService  implements HttpInterceptor {\r\n  private _loginUrl = \"https://identity.trimble.com/token?grant_type=client_credentials\"\r\n  constructor(private authenticationService: AuthenticationService){\r\n  }\r\n  intercept(request, next): Observable<HttpEvent<any>> {\r\n    const access_token = localStorage.getItem('token');\r\n    let userdetails = localStorage.getItem('user');\r\n    userdetails = JSON.parse(userdetails)\r\n    // let authService = this.injector.get(AuthenticationService)\r\n    const user = this.authenticationService.userValue;\r\n    const isLoggedIn = user && userdetails['authdata'];\r\n    const isApiUrl = request.url.startsWith(`${environment._loginProdUrl}`);\r\n    if (isLoggedIn && !isApiUrl) {\r\n    console.log(access_token);\r\n        request = request.clone({\r\n            setHeaders: { \r\n                Authorization: `Bearer ${access_token}`\r\n            }\r\n        });\r\n    }\r\n\r\n    return next.handle(request);\r\n}\r\n  }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { FormBuilder, FormGroup, Validators, NgForm } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport {UpgradeFirmwareCombination } from '../model/model'\r\n\r\n@Component({\r\n  selector: 'app-upgrade-firmware-combination',\r\n  templateUrl: './upgrade-firmware-combination.component.html',\r\n  styleUrls: ['./upgrade-firmware-combination.component.css']\r\n})\r\nexport class UpgradeFirmwareCombinationComponent implements OnInit {\r\n\r\n  Upgrade:UpgradeFirmwareCombination;\r\n  constructor(private router:Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.Upgrade ={\r\n      javaV:'',\r\n      CV:''\r\n    }\r\n  }\r\n\r\n\r\n\r\n  public onClicking(accountForm: NgForm)\r\n  {\r\n   \r\n    if(accountForm.valid)\r\n    {\r\n      \r\n    }\r\n    else\r\n    {\r\n      return;\r\n    }\r\n\r\n  }\r\n  dash(){\r\n    this.router.navigate(['Firmware']);\r\n  }\r\n}\r\n","\r\n<div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n        <div class=\"col-12\">\r\n            <p class=\"tyt\"><span>Menu</span> > <span (click)=\"dash()\">Fireware Manager</span> > <span>Upload Firmware Version</span> > <span>Customer Ashok Leyland</span></p>\r\n            <mat-divider></mat-divider>\r\n        </div>\r\n    </div>\r\n</div>\r\n<p class=\"tyts\">Upgrade Firmware Combination</p>\r\n\r\n<mat-card>\r\n    <form #accountForm=\"ngForm\" >\r\n        \r\n     \r\n        <div class=\"col-sm-12\" >\r\n            <mat-form-field style=\"width: 100%;\" appearance=\"standard\">\r\n                <mat-label>JAVA VERSION</mat-label>\r\n                <mat-select name=\"javaV\" placeholder=\"JAVA VERSION\" ngModel  [(ngModel)]=\"Upgrade.javaV\"  required>\r\n                    <mat-option value=\"tap68\">TAP68</mat-option>\r\n                    <mat-option value=\"tap88\">TAP88</mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n              \r\n        </div>\r\n      \r\n        <div class=\"col-sm-12\" >\r\n            <mat-form-field style=\"width: 100%;\" appearance=\"standard\">\r\n                <mat-label>C VERSION</mat-label>\r\n                <mat-select name=\"CV\" placeholder=\"C VERSION\" ngModel  [(ngModel)]=\"Upgrade.CV\"  required>\r\n                    <mat-option value=\"tap76c\">TAP76C</mat-option>\r\n                    <mat-option value=\"tap76d\">TAP76D</mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n              \r\n        </div>\r\n\r\n        <button mat-raised-button (click)=\"onClicking(accountForm)\" class=\"one\">\r\n            SUBMIT FIRMWARE COMBINATION\r\n        </button>\r\n      \r\n    </form>\r\n</mat-card>\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient,HttpHeaders } from '@angular/common/http'\r\n\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UploadCFirmwareService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  createCFirmware(data) {\r\n    return this.http.post<any>(`${environment._firmwareUpload}`, data).pipe(map(user => {\r\n      \r\n      return user;\r\n  }));\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { FormBuilder, FormGroup, Validators, NgForm } from '@angular/forms';\r\nimport { from } from 'rxjs';\r\nimport {SingleCFirmwareUpload } from '../model/model'\r\nimport { EditFirmwareFileSize } from '../model/model';\r\nimport { UploadCFirmwareService } from './service/upload-c-firmware.service';\r\nimport {MatSnackBar} from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport {Apollo , QueryRef} from 'apollo-angular';\r\nimport gql from \"graphql-tag\";\r\nimport { map, shareReplay } from 'rxjs/operators';\r\n\r\nexport type detailC ={\r\n  ID:Number;\r\n  Name:String;\r\n}\r\n\r\nexport type DataQuery ={\r\n  detailC:detailC[]\r\n}\r\n\r\nconst UPVOTE_POST = gql`\r\nmutation updateDetailC($ID:Int! ,$Name: String!,$FileSize: Int!){\r\n  updateDetailC(ID: $ID,Name: $Name,FileSize: $FileSize){\r\n    ID\r\n    Name\r\n    FileSize\r\n  }\r\n}\r\n`;\r\n\r\n@Component({\r\n  selector: 'app-upload-c-firmware',\r\n  templateUrl: './upload-c-firmware.component.html',\r\n  styleUrls: ['./upload-c-firmware.component.scss']\r\n})\r\n\r\n\r\n\r\nexport class UploadCFirmwareComponent implements OnInit {\r\n\r\n \r\n  uploadC:SingleCFirmwareUpload;\r\n  edit:EditFirmwareFileSize;\r\n  ID  \r\n  vname\r\n  Named\r\n  FileSize;\r\n  \r\n  hide = true;\r\n  messages:detailC[];\r\n  constructor(private uploadCFirmware: UploadCFirmwareService ,private _snackBar: MatSnackBar ,\r\n    private router :Router,private apollo: Apollo) { }\r\n  \r\n\r\n  ngOnInit(): void {\r\n \r\n    this.uploadC ={\r\n      Name: '',\r\n      ServerIP: '',\r\n      UserName: '',\r\n      FilePath: '',\r\n      FileSize: '',\r\n      Password: '',\r\n      ReleaseNote: '',\r\n      firmwareType: '',\r\n      filename: '',\r\n      Port: 21,\r\n      IsFirmwareC: true\r\n    }\r\n\r\n    // this.edit={\r\n    //   versionName:'',\r\n    //   fileSize:''\r\n    // }\r\n\r\n    const source1$ = this.apollo.query<DataQuery>({\r\n      query: gql`\r\n      {\r\n        detailC{\r\n          ID\r\n          Name\r\n        }\r\n      }`\r\n      \r\n    }).pipe(shareReplay(1))\r\n\r\nsource1$.pipe(map(result => result.data && result.data.detailC)).subscribe((data) =>   \r\n this.messages = data\r\n  );\r\n  }\r\n\r\n  listed(version){\r\n    console.log(version)\r\n    for (const [key, value] of Object.entries(version)) {\r\n\r\n     \r\n      if(key == \"Name\"){\r\n        this.Named = value\r\n      }\r\n      if(key == \"ID\"){\r\n       this.ID = Number(value)\r\n      }\r\n\r\n    }\r\n  }\r\n  public onClicking(uploadCForm: NgForm)\r\n  {\r\n   \r\n    if(uploadCForm.valid)\r\n    {\r\n    this.uploadCFirmware.createCFirmware([this.uploadC]).pipe().subscribe(data=>{\r\n     \r\n      if(data == true){\r\n       \r\n        this._snackBar.open(\"Value Uploaded Successfully\",\"\",{duration: 2000});\r\n        this.navigation();\r\n        //   this.router.navigate(['deviceSearch/single_device/1'])\r\n       \r\n      }\r\n    })\r\n    }\r\n    else\r\n    {\r\n      return;\r\n    }\r\n\r\n  }\r\n\r\n  navigation(){\r\n    setTimeout(() =>{\r\n      this.router.navigate(['deviceSearch/single_device/1'])\r\n    },2000)\r\n  }\r\n  \r\n  public onEdit(editForm: NgForm)\r\n  {\r\n   \r\n    if(editForm.valid)\r\n    {\r\n      this.apollo.mutate({\r\n        mutation: UPVOTE_POST,\r\n        variables: \r\n        {\r\n          ID: this.ID,\r\n          Name: this.Named,\r\n          FileSize: this.FileSize\r\n        }\r\n      }).subscribe(({data }) => {\r\n        this._snackBar.open(\"Value Updated Successfully\",\"\",{duration: 2000});\r\n      },\r\n      (error) => this._snackBar.open(\"DeviceID Not Found\",\"\",{duration: 2000})\r\n      )\r\n    \r\n      \r\n    }\r\n    else\r\n    {\r\n      return;\r\n    }\r\n\r\n  }\r\n\r\n  public uploadFormreset(uploadCForm: NgForm){\r\n\r\n    uploadCForm.resetForm();\r\n  }\r\n\r\n\r\n  public editFormreset(editForm: NgForm){\r\n\r\n    editForm.resetForm();\r\n  }\r\n\r\n\r\n  dash(){\r\n    this.router.navigate(['Firmware']);\r\n  }\r\n}\r\n","<div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n        <div class=\"col-12\">\r\n            <p class=\"tyt\"><span>Menu</span> > <span (click) =\"dash()\">Fireware Manager</span> > <span>Upload Firmware Version</span> > <span>Customer Ashok Leyland</span></p>\r\n            <mat-divider></mat-divider>\r\n        </div>\r\n    </div>\r\n</div>\r\n<p class=\"tyts\">Upload C Firmware</p>\r\n<mat-tab-group mat-align-tabs=\"end\">\r\n    <mat-tab label=\"Single Firmware Upload\">\r\n        <mat-card>\r\n            <div class=\"container-fluid\">\r\n                <div class=\"row\">\r\n                    <form #uploadCForm=\"ngForm\" >\r\n                        <div class=\"col-sm-12\"> \r\n                            <mat-form-field style=\"width: 100%;\"  appearance=\"standard\">\r\n                               <mat-label >VERSION NAME</mat-label>\r\n                                <input matInput  name=\"versionName\" placeholder=\"VERSION NAME\" ngModel maxlength=\"25\" [(ngModel)]=\"uploadC.Name\" #vnameControl=\"ngModel\" required >\r\n                \r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-sm-12\">\r\n                            <mat-form-field style=\"width: 100%;\"  appearance=\"standard\">\r\n                                <mat-label >SERVER IP</mat-label>\r\n                                <input matInput  name=\"serverIp\" placeholder=\"SERVER IP\" ngModel maxlength=\"25\" [(ngModel)]=\"uploadC.ServerIP\" required>\r\n                \r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-sm-6\">\r\n                            <mat-form-field style=\"width: 100%;\" appearance=\"standard\" >\r\n                                <mat-label >USERNAME</mat-label>\r\n                                <input matInput name=\"userName\" placeholder=\"USERNAME\" ngModel maxlength=\"25\" [(ngModel)]=\"uploadC.UserName\" required>\r\n                \r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-sm-6\">\r\n                            <mat-form-field style=\"width: 100%;\" appearance=\"standard\">\r\n                                <mat-label >PASSWORD</mat-label>\r\n                                <input matInput [type]=\"hide ? 'password' : 'text'\" name=\"password\"  ngModel  [(ngModel)]=\"uploadC.Password\" required>\r\n                                <button mat-icon-button matSuffix  type=\"button\" (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\r\n                                <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n                                </button>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-sm-6\">\r\n                            <mat-form-field style=\"width: 100%;\" appearance=\"standard\">\r\n                                <mat-label >FILE PATH</mat-label>\r\n                                <input matInput  name=\"filePath\" placeholder=\"FILE PATH\" ngModel  [(ngModel)]=\"uploadC.FilePath\"  required>\r\n                \r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-sm-6\">\r\n                            <mat-form-field style=\"width: 100%;\" appearance=\"standard\" >\r\n                                <mat-label >FILE SIZE</mat-label>\r\n                                <input matInput  name=\"fileSize\" placeholder=\"FILE SIZE\" ngModel maxlength=\"25\" [(ngModel)]=\"uploadC.FileSize\"  required>\r\n                \r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-sm-12\">\r\n                            <mat-form-field style=\"width: 100%;\" appearance=\"standard\" >\r\n                                <mat-label >RELEASE NOTES</mat-label>\r\n                                <input matInput  name=\"releseNote\" placeholder=\"RELEASE NOTES\" ngModel maxlength=\"25\" [(ngModel)]=\"uploadC.ReleaseNote\"  required>\r\n                \r\n                            </mat-form-field>\r\n                        </div>\r\n                \r\n                        <button mat-raised-button (click)=\"onClicking(uploadCForm)\" class=\"one\">\r\n                            <mat-icon>save</mat-icon>\r\n                            SAVE\r\n                        </button>\r\n                        <button mat-raised-button type=\"reset\" (click)=\"uploadFormreset(uploadCForm)\" class=\"two\">\r\n                            <mat-icon>replay\r\n                            </mat-icon>\r\n                            RESET\r\n                        </button>\r\n                \r\n                    </form>\r\n                </div>\r\n            </div>       \r\n        </mat-card>\r\n    </mat-tab>\r\n    <mat-tab label=\"Edit Firmware File Size\">\r\n\r\n        <mat-card>\r\n            <div class=\"container-fluid\">\r\n                <div class=\"row\">\r\n                    <form #editForm=\"ngForm\" >\r\n                        <div class=\"col-sm-12\"> \r\n                            <mat-form-field style=\"width: 100%;\"  appearance=\"standard\">\r\n                                <mat-label>Version Name</mat-label>\r\n                                <mat-select name=\"Named\" placeholder=\"Version Name\"  [(ngModel)]=\"Named\" required>\r\n                                    <mat-option *ngFor=\"let message of messages\" (click)=\"listed(message)\"  [value]=\"message.Name\" >\r\n                                      {{message.Name}}\r\n                                    </mat-option>                 \r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-sm-12\">\r\n                            <mat-form-field style=\"width: 100%;\"  appearance=\"standard\">\r\n                                <mat-label >FILE SIZE</mat-label>\r\n                                <input matInput type=\"number\" name=\"FileSize\" placeholder=\"FILE SIZE\" ngModel maxlength=\"25\" [(ngModel)]=\"FileSize\"  required>\r\n                \r\n                            </mat-form-field>\r\n                        </div>\r\n                        <button mat-raised-button (click)=\"onEdit(editForm)\" class=\"one\">\r\n                            <mat-icon>save</mat-icon>\r\n                            SAVE\r\n                        </button>\r\n                        <button mat-raised-button type=\"reset\" (click)=\"editFormreset(editForm)\" class=\"two\">\r\n                            <mat-icon>replay\r\n                            </mat-icon>\r\n                            RESET\r\n                        </button>\r\n                \r\n                    </form>\r\n                </div>\r\n            </div>          \r\n        </mat-card>\r\n    </mat-tab>\r\n    \r\n  </mat-tab-group>","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { environment } from '../../environments/environment';\r\nimport { map } from 'rxjs/operators';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ServicesService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n\r\n  uploadFirmware(data) {\r\n    return this.http.post(`${environment._firmwareFileUpload}`,data ,{responseType: 'text'}).pipe(map(user => {\r\n      console.log(user);\r\n      return user;\r\n  }));\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { FormBuilder, FormGroup, Validators, NgForm } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { UploadIotFirmware} from '../model/model'\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../environments/environment';\r\nimport { ServicesService } from './services.service'\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport {Apollo , QueryRef} from 'apollo-angular';\r\nimport gql from \"graphql-tag\";\r\nimport { map, shareReplay } from 'rxjs/operators';\r\n\r\nconst UPVOTE_POST = gql`\r\n\r\nmutation addDetailC($Name:String! ,$ServerIP:String!,$UserName:String!,$Password:String!,$FileSize:Int!,$FilePath:String!,$Port:Int!,$InsertUTC:String!,$UpdateUTC:String!,$IsActive:Boolean!,$ReleaseNotes:String!,$IsFirmware:Boolean!,$isSNM476:Boolean!){\r\n  addDetailC(Name: $Name,ServerIP: $ServerIP,UserName: $UserName,Password: $Password,FileSize: $FileSize,FilePath: $FilePath,Port: $Port,InsertUTC: $InsertUTC,UpdateUTC: $UpdateUTC,IsActive: $IsActive,ReleaseNotes: $ReleaseNotes,IsFirmware: $IsFirmware,isSNM476: $isSNM476){\r\n    Name\r\n    ServerIP\r\n    UserName\r\n    Password\r\n    FileSize\r\n    FilePath\r\n    Port\r\n    InsertUTC\r\n    UpdateUTC\r\n    IsActive\r\n    ReleaseNotes\r\n    IsFirmware\r\n    isSNM476\r\n  }\r\n}\r\n`;\r\n\r\n@Component({\r\n  selector: 'app-upload-iot-firmware',\r\n  templateUrl: './upload-iot-firmware.component.html',\r\n  styleUrls: ['./upload-iot-firmware.component.css']\r\n})\r\nexport class UploadIotFirmwareComponent implements OnInit {\r\n\r\n uploadIot:UploadIotFirmware;\r\n public file : File;\r\n fileToUpload: File;\r\n filename\r\n  constructor(private router:Router,private apollo: Apollo, private http: HttpClient,private ServicesService: ServicesService,private _snackBar: MatSnackBar  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.uploadIot={\r\n      versionName: '',\r\n      fileName:'',\r\n      Type:''\r\n    }\r\n  }\r\n  postMethod(files: FileList) {\r\n    this.fileToUpload = files.item(0);\r\n    this.filename =  this.fileToUpload.name\r\n    if(this.fileToUpload == null){\r\n      alert(\"File not uploaded\")\r\n    }\r\n    else{\r\n     \r\n      let formData:FormData = new FormData(); \r\n      formData.append('file', this.fileToUpload); \r\n      formData.append('folder', '/otap/otap_usr/OTAP');\r\n       console.log(formData)\r\n      this.ServicesService.uploadFirmware(formData).pipe().subscribe(data =>\r\n      {\r\n        this._snackBar.open( data ,\"\",{duration: 2000});\r\n        console.log(data)\r\n        if(data == \"file uploaded.\")\r\n        this.postData();\r\n       \r\n      },\r\n      error =>{\r\n        console.log(error)\r\n      }\r\n      )\r\n    // this.http.post(`${environment._firmwareFileUpload}`,formData).pipe().subscribe((val)=>{\r\n    //   console.log(val)\r\n    // })\r\n     }\r\n  }  \r\n\r\n  postData(){\r\n    this.apollo.mutate({\r\n      mutation: UPVOTE_POST,\r\n      variables: \r\n      {\r\n        Name:this.filename,\r\n        ServerIP:\"1.1.1.1\",\r\n        UserName:\"osguploadfw\",\r\n        Password:\"wUAJ6W7t394m\",\r\n        FileSize:20,\r\n        FilePath:\"/osg/\",\r\n        Port:80,\r\n        InsertUTC:\"2021-05-14\",\r\n        UpdateUTC:\"2021-05-18\",\r\n        IsActive:true,\r\n        ReleaseNotes:\"20\",\r\n        IsFirmware:true,\r\n        isSNM476:true\r\n      }\r\n    }).subscribe(({data }) => {\r\n      this._snackBar.open(\"Value Uploaded Successfully\",\"\",{duration: 2000});\r\n    },\r\n    (error) => this._snackBar.open(\"DeviceID Not Found\",\"\",{duration: 2000})\r\n    )\r\n  }\r\n  \r\n  public onClicking()\r\n  {\r\n   \r\n    \r\n\r\n  }\r\n\r\n  \r\n \r\n\r\n  public reset(accountForm: NgForm){\r\n\r\n    accountForm.resetForm();\r\n   \r\n  }\r\n\r\n  dash(){\r\n    this.router.navigate(['Firmware']);\r\n  }\r\n}\r\n","<div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n        <div class=\"col-12\">\r\n            <p class=\"tyt\"><span>Menu</span> > <span (click)=\"dash()\">Fireware Manager</span> > <span>Upload Firmware Version</span> > <span>Customer Ashok Leyland</span></p>\r\n            <mat-divider></mat-divider>\r\n        </div>\r\n    </div>\r\n</div>\r\n<p class=\"tyts\">Upload IOT Firmware</p>\r\n\r\n<mat-card>\r\n    <form #accountForm=\"ngForm\" enctype=\"multipart/form-data\">\r\n        <!-- <div class=\"col-sm-12\"> \r\n            <mat-form-field style=\"width: 100%;\"  appearance=\"standard\">\r\n               <mat-label >VERSION NAME</mat-label>\r\n                <input matInput  name=\"versionName\" placeholder=\"VERSION NAME\" ngModel maxlength=\"25\" [(ngModel)]=\"uploadIot.versionName\" required >\r\n\r\n            </mat-form-field>\r\n        </div>\r\n     \r\n      -->\r\n      \r\n       \r\n        <button mat-raised-button (click)=\"fileInput.click()\" class=\"one\">\r\n            <mat-icon class=\"con1\">file_upload</mat-icon>\r\n            File Upload\r\n        </button>\r\n        <input #fileInput  type=\"file\" name=\"files\"  accept=\".hex\" id=\"myfile\" (change)=\"postMethod($event.target.files)\" style=\"display:none;\" />\r\n       \r\n\r\n        <div class=\"col-sm-12\">\r\n            <mat-form-field style=\"width: 100%;\" appearance=\"standard\">\r\n                <mat-label >FILE NAME</mat-label>\r\n                <input matInput  name=\"filename\" placeholder=\"FILE NAME\" ngModel  [(ngModel)]=\"filename\" disabled required>\r\n\r\n            </mat-form-field>\r\n        </div>\r\n        <!-- <button mat-raised-button (click)=\"onClicking()\" class=\"one\">\r\n            <mat-icon>save</mat-icon>\r\n            SUBMIT\r\n        </button> -->\r\n        <!-- <button mat-raised-button type=\"reset\"  (click)=\"reset(accountForm)\" class=\"two\">\r\n            <mat-icon>replay\r\n            </mat-icon>\r\n            RESET\r\n        </button> -->\r\n\r\n    </form>\r\n</mat-card>\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient,HttpHeaders } from '@angular/common/http'\r\nimport { Router } from '@angular/router'\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UploadJavaFirmwareService {\r\n  constructor(private http: HttpClient,\r\n    private _router: Router) { }\r\n\r\n  createJavaFirmware(data) {\r\n    return this.http.post<any>(`${environment._firmwareUpload}`, data).pipe(map(user => {\r\n      console.log(user);\r\n      return user;\r\n  }));\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, NgForm } from '@angular/forms';\r\nimport { from } from 'rxjs';\r\nimport { UploadJavaFirmware } from '../model/model'\r\nimport { UploadJavaFirmwareService } from './service/upload-java-firmware.service';\r\nimport {MatSnackBar} from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-upload-java-firmware',\r\n  templateUrl: './upload-java-firmware.component.html',\r\n  styleUrls: ['./upload-java-firmware.component.css']\r\n})\r\nexport class UploadJavaFirmwareComponent implements OnInit {\r\n\r\n  uploadJava:UploadJavaFirmware;\r\n  hide = true;\r\n  constructor(private uploadJavaFirmware: UploadJavaFirmwareService,private _snackBar: MatSnackBar ,\r\n    private router :Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.uploadJava={\r\n      Name: '',\r\n      ServerIP: '',\r\n      UserName: '',\r\n      FilePath: '',\r\n      FileSize: '',\r\n      Password: '',\r\n      ReleaseNote: '',\r\n      firmwareType: '',\r\n      filename: '',\r\n      Port: 2222,\r\n      IsFirmwareC: false\r\n    }\r\n  }\r\n\r\n  public onClicking(accountForm: NgForm)\r\n  {\r\n   \r\n    if(accountForm.valid)\r\n    {\r\n    this.uploadJavaFirmware.createJavaFirmware([this.uploadJava]).pipe().subscribe(data=>{\r\n      console.log(data)\r\n      if(data == true){\r\n        console.log(this.uploadJava)\r\n    \r\n       this._snackBar.open(\"Value Uploaded Successfully\",\"\",{duration: 2000});\r\n       this.navigation();\r\n     //   this.router.navigate(['deviceSearch/single_device/1'])\r\n\r\n      }\r\n    })\r\n    }\r\n    else\r\n    {\r\n      return;\r\n    }\r\n\r\n  }\r\n\r\n  navigation(){\r\n    setTimeout(() =>{\r\n      this.router.navigate(['deviceSearch/single_device/1'])\r\n    },2000)\r\n  }\r\n  \r\n  public reset(accountForm: NgForm){\r\n\r\n    accountForm.resetForm();\r\n  }\r\n\r\n  dash(){\r\n    this.router.navigate(['Firmware']);\r\n  }\r\n}\r\n","<div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n        <div class=\"col-12\">\r\n            <p class=\"tyt\"><span>Menu</span> > <span (click)=\"dash()\">Fireware Manager</span> > <span>Upload Firmware Version</span> > <span>Customer Ashok Leyland</span></p>\r\n            <mat-divider></mat-divider>\r\n        </div>\r\n    </div>\r\n</div>\r\n<p class=\"tyts\">Upload Java Firmware</p>\r\n\r\n<mat-card>\r\n    <form #accountForm=\"ngForm\" >\r\n        <div class=\"col-sm-12\"> \r\n            <mat-form-field style=\"width: 100%;\"  appearance=\"standard\">\r\n               <mat-label >VERSION NAME</mat-label>\r\n                <input matInput  name=\"Name\" placeholder=\"VERSION NAME\" ngModel maxlength=\"25\" [(ngModel)]=\"uploadJava.Name\" #vnameControl=\"ngModel\" required >\r\n\r\n            </mat-form-field>\r\n        </div>\r\n        <div class=\"col-sm-12\">\r\n            <mat-form-field style=\"width: 100%;\"  appearance=\"standard\">\r\n                <mat-label >URL</mat-label>\r\n                <input matInput  name=\"ServerIP\" placeholder=\"URL\" ngModel  [(ngModel)]=\"uploadJava.ServerIP\" required>\r\n\r\n            </mat-form-field>\r\n        </div>\r\n        <div class=\"col-sm-6\">\r\n            <mat-form-field style=\"width: 100%;\" appearance=\"standard\" >\r\n                <mat-label >USERNAME</mat-label>\r\n                <input matInput name=\"UserName\" placeholder=\"USERNAME\" ngModel maxlength=\"25\" [(ngModel)]=\"uploadJava.UserName\" required>\r\n\r\n            </mat-form-field>\r\n        </div>\r\n        <div class=\"col-sm-6\">\r\n            <mat-form-field style=\"width: 100%;\" appearance=\"standard\">\r\n                <mat-label >PASSWORD</mat-label>\r\n                <input matInput [type]=\"hide ? 'password' : 'text'\" name=\"Password\"  ngModel  [(ngModel)]=\"uploadJava.Password\" required>\r\n                <button mat-icon-button matSuffix type=\"button\" (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\r\n                <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n                </button>\r\n            </mat-form-field>\r\n        </div>\r\n        <div class=\"col-sm-12\">\r\n            <mat-form-field style=\"width: 100%;\" appearance=\"standard\">\r\n                <mat-label >FILE PATH</mat-label>\r\n                <input matInput  name=\"FilePath\" placeholder=\"FILE PATH\" ngModel  [(ngModel)]=\"uploadJava.FilePath\"  required>\r\n\r\n            </mat-form-field>\r\n        </div>\r\n       \r\n        <div class=\"col-sm-12\">\r\n            <mat-form-field style=\"width: 100%;\" appearance=\"standard\" >\r\n                <mat-label >RELEASE NOTES</mat-label>\r\n                <input matInput  name=\"ReleaseNote\" placeholder=\"RELEASE NOTES\" ngModel maxlength=\"25\" [(ngModel)]=\"uploadJava.ReleaseNote\" required>\r\n\r\n            </mat-form-field>\r\n        </div>\r\n\r\n        <button mat-raised-button (click)=\"onClicking(accountForm)\" class=\"one\">\r\n            <mat-icon>save</mat-icon>\r\n            SAVE\r\n        </button>\r\n        <button mat-raised-button type=\"reset\"  (click)=\"reset(accountForm)\" class=\"two\">\r\n            <mat-icon>replay\r\n            </mat-icon>\r\n            RESET\r\n        </button>\r\n\r\n    </form>\r\n</mat-card>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  _loginUrl : \"api5\",//Outbound,Upload Firmware\r\n  _loginStg: \"api6\",//single Device search\r\n  _loginProdUrl: \"https://identity-stg.trimble.com/token?grant_type=client_credentials&amp;scope=openid\", //Other OTAP Command , Upolad C and Java\r\n  _outboundapi : \"https://api.trimble.com/t/trimble.com/oem-devicegateway/1.0/outbound/NH519298?limit=10&page=1&sort=desc\",\r\n  _multipleDeviceapi: \"https://api.trimble.com/t/trimble.com/oem-devicegateway/1.0/outbound/messages\",\r\n  _deviceWithPagination: \"https://api-stg.trimble.com/t/trimble.com/oemdeviceinfo-api/1.0/deviceInfo/firmware\",\r\n  _firmwareUpload: \"api1\",\r\n  _fwdashboard: \"api\",\r\n  _dashboard: \"api2\",\r\n  _publishVersion: \"api3\",\r\n  _firmwareFileUpload: \"api4\",\r\n  _deviceOutbound: \"api7\",\r\n  _getDevice: \"https://api-stg.trimble.com/t/trimble.com/iot-stg/1.0/shadow/46952541-3269-45fb-9f93-386bbe17372d-SNM00030\"\r\n  \r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n// ","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */"]}